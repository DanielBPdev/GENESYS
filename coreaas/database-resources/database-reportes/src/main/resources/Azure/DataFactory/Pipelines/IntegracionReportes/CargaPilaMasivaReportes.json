{
    "name": "CargaPilaMasivaReportes",
    "properties": {
        "activities": [
            {
                "name": "PlanillaPILA_maxId",
                "type": "Lookup",
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30
                },
                "typeProperties": {
                    "source": {
                        "type": "SqlSource",
                        "sqlReaderQuery": "DECLARE @maxId BIGINT\nSELECT @maxId = MAX(pplId) FROM dbo.PlanillaPILA\nSELECT ISNULL(@maxId,0) maxId"
                    },
                    "dataset": {
                        "referenceName": "DSReportes",
                        "type": "DatasetReference"
                    }
                }
            },
            {
                "name": "PlanillaPILA_Copy",
                "type": "Copy",
                "dependsOn": [
                    {
                        "activity": "PlanillaPILA_maxId",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30
                },
                "typeProperties": {
                    "source": {
                        "type": "SqlSource",
                        "sqlReaderQuery": {
                            "value": "DECLARE @TablaTiposIdentificacion AS TABLE (TipoIdCorto VARCHAR(2), TipoIdLargo VARCHAR(40))\nDECLARE @TablaIndependientes AS TABLE (tipoCotizante VARCHAR(2))\n\nINSERT INTO @TablaTiposIdentificacion\nVALUES\n('RC','REGISTRO_CIVIL'),\n('TI','TARJETA_IDENTIDAD'),\n('CC','CEDULA_CIUDADANIA'),\n('CE','CEDULA_EXTRANJERIA'),\n('PA','PASAPORTE'),\n('CD','CARNE_DIPLOMATICO'),\n('NI','NIT'),\n('SC','SALVOCONDUCTO'),\n('PE','PERM_ESP_PERMANENCIA')\n\nINSERT INTO @TablaIndependientes\nSELECT Data FROM dbo.Split( (\n\tSELECT stpValorParametro FROM staging.StagingParametros \n\tWHERE stpNombreParametro = 'SOLICITANTE_INDEPENDIENTE') ,',')\n\nSELECT \npip.pipId AS pplIndicePlanilla,\npip.pipIdPlanilla AS pplIdPlanilla,\npip.pipFechaRecibo AS pplFechaRecibo,\npip.pipEstadoArchivo AS pplEstadoArchivo, \nCONVERT(DATE, CAST(pf1.pf1FechaRecaudo AS Varchar(8)), 112) AS pplFechaRecaudo,\nCAST(pi1PeriodoAporte + '-01' AS DATE) AS pplPeriodo,\ntiA.TipoIdLargo AS pplTipoIdentificacionAportante,\npi1.pi1IdAportante AS pplNumeroIdentificacionAportante,\npi1.pi1DigVerAportante AS pplDigitoVerificacion,\npi1.pi1RazonSocial AS pplRazonSocial,\nCASE WHEN EXISTS (SELECT 1 FROM @TablaIndependientes WHERE tipoCotizante != pi2.pi2TipoCotizante) THEN 'EMPRESA' ELSE 'INDEPENDIENTE' END AS pplTipoPlanilla,\npi3.pi3ValorTotalAporteObligatorio AS pplValorAporte,\ntiC.TipoIdLargo AS pplTipoIdentificacionCotizante,\npi2.pi2IdCotizante AS pplNumeroIdentificacionCotizante,\npi2.pi2PrimerApellido AS pplPrimerApellido,\npi2.pi2SegundoApellido AS pplSegundoApellido,\npi2.pi2PrimerNombre AS pplPrimerNombre,\npi2.pi2SegundoNombre AS pplSegundoNombre,\npi2.pi2TipoCotizante AS pplTipoCotizantePILA,\nCASE WHEN EXISTS (SELECT 1 FROM @TablaIndependientes WHERE tipoCotizante = pi2.pi2TipoCotizante) THEN 'INDEPENDIENTE' ELSE 'DEPENDIENTE' END AS pplTipoCotizante\nFROM dbo.PilaIndicePlanilla pip\nINNER JOIN dbo.PilaArchivoIRegistro1 pi1 ON pip.pipId = pi1IndicePlanilla\nINNER JOIN dbo.PilaArchivoIRegistro2 pi2 ON pip.pipId = pi2IndicePlanilla\nINNER JOIN PilaIndicePlanilla pipA ON (\n\tpip.pipIdPlanilla = pipA.pipIdPlanilla \n\tAND ISNULL(pipA.pipEstadoArchivo, '') <> 'ANULADO'\nAND pip.pipTipoArchivo != pipA.pipTipoArchivo\n)\nINNER JOIN PilaArchivoARegistro1 pa1 ON pa1.pa1IndicePlanilla = pipA.pipId\nINNER JOIN PilaArchivoIRegistro3 pi3 ON pi1.pi1IndicePlanilla = pi3.pi3IndicePlanilla\nINNER JOIN @TablaTiposIdentificacion tiA ON tiA.TipoIdCorto = pi1.pi1TipoDocAportante\nINNER JOIN @TablaTiposIdentificacion tiC ON tiC.TipoIdCorto = pi2.pi2TipoIdCotizante\nLEFT JOIN (\n\tSELECT MAX(pf6Id) pf6Id, CASE WHEN ISNUMERIC(pf6IdAportante) = 0 THEN pf6IdAportante ELSE CAST(pf6IdAportante AS BIGINT)\n\tEND pf6IdAportante,pf6NumeroPlanilla,pf6PeriodoPago, CASE WHEN ISNUMERIC(pf6CodOperadorInformacion) = 0 THEN pf6CodOperadorInformacion ELSE CAST(pf6CodOperadorInformacion AS SMALLINT)\n\tEND pf6CodOperadorInformacion\nFROM dbo.PilaArchivoFRegistro6\nWHERE pf6EstadoConciliacion = 'REGISTRO_6_CONCILIADO'\nGROUP BY pf6IndicePlanillaOF, pf6IdAportante,pf6NumeroPlanilla,pf6PeriodoPago,pf6CodOperadorInformacion,CASE WHEN ISNUMERIC(pf6CodOperadorInformacion) = 0 THEN pf6CodOperadorInformacion ELSE CAST(pf6CodOperadorInformacion AS SMALLINT)\n\tEND \n) pf6 ON pf6.pf6CodOperadorInformacion = pi1.pi1CodOperador AND pf6.pf6NumeroPlanilla = pi1.pi1NumPlanilla AND pf6.pf6PeriodoPago = CONVERT(VARCHAR(6),CONVERT(DATETIME,pi1.pi1PeriodoAporte+'-01'),112)\nLEFT JOIN dbo.PilaArchivoFRegistro6 pf6_1 ON pf6.pf6Id = pf6_1.pf6Id\nLEFT JOIN dbo.PilaArchivoFRegistro5 pf5 ON pf6_1.pf6PilaArchivoFRegistro5 = pf5.pf5Id\nLEFT JOIN dbo.PilaArchivoFRegistro1 pf1 ON pf6_1.pf6IndicePlanillaOF = pf1.pf1IndicePlanillaOF\nWHERE pip.pipId > @{activity('PlanillaPILA_maxId').output.firstRow.maxId}\n\nUNION ALL \n\nSELECT \npip.pipId pplIndicePlanilla,\npip.pipIdPlanilla AS pplIdPlanilla,\npip.pipFechaRecibo AS pplFechaRecibo,\npip.pipEstadoArchivo AS pplEstadoArchivo, \nCONVERT(DATE, CAST(pf1.pf1FechaRecaudo AS Varchar(8)), 112) AS pplFechaRecaudo,\nCAST(ip1PeriodoAporte + '-01' AS DATE) AS pplPeriodo,\ntiA.TipoIdLargo AS pplTipoIdentificacionAportante,\nip1.ip1IdPagador AS pplNumeroIdentificacionAportante,\nip1.ip1DigVerPagador AS pplDigitoVerificacion,\nip1.ip1NombrePagador AS pplRazonSocial,\n'INDEPENDIENTE' AS pplTipoPlanilla,\nip3.ip3ValorTotalAporte AS pplValorAporte,\ntiC.TipoIdLargo AS pplTipoIdentificacionCotizante,\nip2.ip2IdPensionado AS pplNumeroIdentificacionCotizante,\nip2.ip2PrimerApellido AS pplPrimerApellido,\nip2.ip2SegundoApellido AS pplSegundoApellido,\nip2.ip2PrimerNombre AS pplPrimerNombre,\nip2.ip2SegundoNombre AS pplSegundoNombre,\nCAST (NULL AS VARCHAR(2)) AS pplTipoCotizantePILA,\n'PENSIONADO' AS pplTipoCotizante\nFROM dbo.PilaIndicePlanilla pip\nINNER JOIN dbo.PilaArchivoIPRegistro1 ip1 ON pip.pipId = ip1IndicePlanilla\nINNER JOIN dbo.PilaArchivoIPRegistro2 ip2 ON pip.pipId = ip2IndicePlanilla\nINNER JOIN PilaIndicePlanilla pipA ON pip.pipIdPlanilla = pipA.pipIdPlanilla\nINNER JOIN PilaArchivoAPRegistro1 ap1 ON ap1.ap1IndicePlanilla = pipA.pipId\nINNER JOIN PilaArchivoIPRegistro3 ip3 ON ip1.ip1IndicePlanilla = ip3.ip3IndicePlanilla\nINNER JOIN @TablaTiposIdentificacion tiA ON tiA.TipoIdCorto = ip1TipoIdPagador\nINNER JOIN @TablaTiposIdentificacion tiC ON tiA.TipoIdCorto = ip2TipoIdPensionado\nLEFT JOIN (\n\tSELECT MAX(pf6Id) pf6Id, CASE WHEN ISNUMERIC(pf6IdAportante) = 0 THEN pf6IdAportante ELSE CAST(pf6IdAportante AS BIGINT)\n\tEND pf6IdAportante,pf6NumeroPlanilla,pf6PeriodoPago,CASE WHEN ISNUMERIC(pf6CodOperadorInformacion) = 0 THEN pf6CodOperadorInformacion ELSE CAST(pf6CodOperadorInformacion AS SMALLINT)\n\tEND pf6CodOperadorInformacion\nFROM dbo.PilaArchivoFRegistro6\nWHERE pf6EstadoConciliacion = 'REGISTRO_6_CONCILIADO'\nGROUP BY pf6IndicePlanillaOF, pf6IdAportante,pf6NumeroPlanilla,pf6PeriodoPago,CASE WHEN ISNUMERIC(pf6CodOperadorInformacion) = 0 THEN pf6CodOperadorInformacion ELSE CAST(pf6CodOperadorInformacion AS SMALLINT)\n\tEND\n) pf6 ON pf6.pf6CodOperadorInformacion = ip1.ip1CodOperador \nAND pf6.pf6NumeroPlanilla = ip1.ip1NumPlanilla \nAND pf6.pf6PeriodoPago = CONVERT(VARCHAR(6),CONVERT(DATETIME,ip1.ip1PeriodoAporte+'-01'),112)\nLEFT JOIN dbo.PilaArchivoFRegistro6 pf6_1 ON pf6.pf6Id = pf6_1.pf6Id\nLEFT JOIN dbo.PilaArchivoFRegistro5 pf5 ON pf6_1.pf6PilaArchivoFRegistro5 = pf5.pf5Id\nLEFT JOIN dbo.PilaArchivoFRegistro1 pf1 ON pf6_1.pf6IndicePlanillaOF = pf1.pf1IndicePlanillaOF\nWHERE pip.pipId > @{activity('PlanillaPILA_maxId').output.firstRow.maxId}",
                            "type": "Expression"
                        }
                    },
                    "sink": {
                        "type": "SqlSink",
                        "writeBatchSize": 10000
                    },
                    "enableStaging": false,
                    "parallelCopies": 16,
                    "dataIntegrationUnits": 32
                },
                "inputs": [
                    {
                        "referenceName": "DSPila",
                        "type": "DatasetReference"
                    }
                ],
                "outputs": [
                    {
                        "referenceName": "DSReportesPlanillaPILA",
                        "type": "DatasetReference"
                    }
                ]
            }
        ]
    },
    "type": "Microsoft.DataFactory/factories/pipelines"
}