apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: ${project.artifactId}
  name: ${project.artifactId}
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      app: ${project.artifactId}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: ${timestamp}
      creationTimestamp: null
      labels:
        app: ${project.artifactId}
      name: ${project.artifactId}
    spec:
      containers:
      - env:
        - name: KEYCLOAK_USER
          value: ${keycloak.user}
        - name: KEYCLOAK_PASSWORD
          value: ${keycloak.password}
        - name: KEYCLOAK_LOGLEVEL
          value: DEBUG
        - name: MSSQL_HOST
          value: ${keycloak.db.host}
        - name: MSSQL_DATABASE
          value: ${keycloak.db.name}
        - name: MSSQL_USER
          value: ${keycloak.db.user}
        - name: MSSQL_PASSWORD
          value: ${keycloak.db.password}
        image: ${docker.registry.name}/${project.artifactId}
        imagePullPolicy: Always
        name: ${project.artifactId}
        ports:
        - containerPort: 8443
          name: http
          protocol: TCP
        resources: 
            limits:
              memory: 4Gi
              cpu: "2"
            requests:
              memory: 1Gi
              cpu: 500m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/localtime
          name: tz-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /usr/share/zoneinfo/America/Bogota
          type: ""
        name: tz-config
status: {}