<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.asopagos.coreaas</groupId>
		<artifactId>coreaas</artifactId>
		<version>0.0.2-SNAPSHOT</version>
	</parent>
	<artifactId>containers</artifactId>
	<packaging>pom</packaging>
	<modules>
		<module>wildfly-swarm-simple</module>
		<module>wildfly-swarm-messaging</module>
		<module>wildfly-swarm-mysql</module>
		<module>keycloak</module>
		<module>nginx-plus</module>
    	<module>nginx-plus-asopagos</module>
		<module>activemq</module>
		<module>activemq-asopagos</module>
		<module>wildfly-swarm-novedades</module>
		
	</modules>

	<properties>
		<timestamp>${maven.build.timestamp}</timestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<wildfly.swarm.version>2017.11.0</wildfly.swarm.version>

		<!-- dependency versions -->
		<fabric8.version>2.3.2</fabric8.version>
		<docker.registry.name>gcr.io/docker-registry-name</docker.registry.name>
		<docker.registry.user>_json_key</docker.registry.user>
		<docker.registry.password></docker.registry.password>

		<docker.build.folder>docker/${docker.registry.name}/${project.artifactId}/build</docker.build.folder>

		<!-- maven plugin versions -->
		<exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
		<fabric8.maven.plugin.version>3.5.17</fabric8.maven.plugin.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-shade-plugin.version>2.3</maven-shade-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>

		<fabric8.skip>true</fabric8.skip>

	</properties>



	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-with-platform-deps</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom-all</artifactId>
				<version>${wildfly.swarm.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>logging</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>datasources</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>jpa</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>ejb</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>ejb-remote</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>messaging</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>jaxrs</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>undertow</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>msc</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>connector</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>mail</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>ee</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>jaxrs-multipart</artifactId>
				<version>${wildfly.swarm.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.wildfly.swarm</groupId>
					<artifactId>wildfly-swarm-plugin</artifactId>
					<version>${wildfly.swarm.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>package</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<hollow>true</hollow>
						<properties>
            				<java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
          				</properties>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<phase>package</phase>
							<configuration>
							    <failOnError>false</failOnError>
								<target>
									<copy
										file="${project.build.directory}/${project.build.finalName}-hollow-swarm.jar"
										tofile="${project.build.directory}/${docker.build.folder}/${project.build.finalName}.jar" />
								</target>
								<skip>${fabric8.skip}</skip>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>${replacer.plugin}</version>
					<executions>
						<execution>
							<id>dockerfile</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>replace</goal>
							</goals>
							<configuration>
								<file>${project.build.resources[0].directory}/${docker.build.folder}/Dockerfile</file>
								<replacements>
									<replacement>
										<token>tipoServidor</token>
										<value>${project.build.finalName}.jar</value>
									</replacement>
								</replacements>
								<outputFile>${project.build.directory}/${docker.build.folder}/Dockerfile</outputFile>
								<encoding>UTF-8</encoding>
								<skip>${fabric8.skip}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>fabric8-maven-plugin</artifactId>
					<version>${fabric8.maven.plugin.version}</version>
					<configuration>
					<images>
						<image>
							<name>${docker.registry.name}/${project.artifactId}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<dockerFileDir>.</dockerFileDir>
							</build>
						</image>
					</images>
					<authConfig>
						<username>${docker.registry.user}</username>
						<password>${docker.registry.password}</password>
					</authConfig>
					<skip>${fabric8.skip}</skip>
					</configuration>
					<executions>
					<execution>
						<goals>
							<goal>resource</goal>
							
							<goal>deploy</goal>
						</goals>
					</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>