# Here we are defining the server that we'll pass the requests to
auth_jwt_claim_set $jwt_groups grupos; # Array value will join as comma-separated values
auth_jwt_claim_set $jwt_roles realm_access roles; # This value is two levels deep

map $jwt_groups $isAdmin {
	"~\bSupAfiPer\b" 1; # Appears within word boundaries (\b) of CSV list
	default              0;
}

upstream api_server {
	server 172.20.0.86:4567;
}

server {
	# Our NGINX Plus server will listen on Port 80
	listen 80;
	
	# We'll name our domain or realm our Auth0 Domain
	# This is not required so you can name it anything
	auth_jwt "asopagos";
	# We'll need to load a JWK that contains our secret credentials that will be used to verify incoming JWT's
	auth_jwt_key_file /etc/nginx/secret.json;


	# By default all routes will proxy to our Node.js server at localhost:4567
	location / {
	proxy_pass http://api_server;
	}

	# For any of the /api/* routes, we'll ensure that the user has a valid JWT
	location /api/ {
		if ( $isAdmin = 0 ) {
            return 403; # Forbidden
        }
		# If an incoming JWT is valid, we'll proxy to our Node.js server
		proxy_pass http://api_server;
	}
}
