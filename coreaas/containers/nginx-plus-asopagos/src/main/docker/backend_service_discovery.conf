resolver kube-dns.kube-system.svc.cluster.local valid=5s;

upstream parametros-asopagos {
    zone parametros-asopagos 64k;
    server parametros-asopagos-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream subsidio-monetario {
    zone subsidio-monetario 64k;
    server subsidio-monetario-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream listas-chequeo {
    zone listas-chequeo 64k;
    server listas-chequeo-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream constantes-parametros {
    zone constantes-parametros 64k;
    server constantes-parametros-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream usuarios {
    zone usuarios 64k;
    server usuarios-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream fovis {
    zone fovis 64k;
    server fovis-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream listas {
    zone listas 64k;
    server listas-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream afiliados {
    zone afiliados 64k;
    server afiliados-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream asignar-solicitudes {
    zone asignar-solicitudes 64k;
    server asignar-solicitudes-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream parametros-subsidio-caja {
    zone parametros-subsidio-caja 64k;
    server parametros-subsidio-caja-service.default.svc.cluster.local service=_http._tcp resolve;
}

upstream auditoria {
    zone auditoria 64k;
    server auditoria-service.default.svc.cluster.local service=_http._tcp resolve;
}

log_format custom '$remote_addr - $remote_user [$time_local] '
'"$request" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent" "$http_permissionsapp"'
'"$http_x_forwarded_for" $request_id ';

access_log /var/log/nginx/access.log custom;


server {
    listen 80;
    status_zone asopagos-services;

    location /ParametrosService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://parametros-asopagos;
        health_check uri=/ParametrosService;
    }

    location /SubsidioMonetarioService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://subsidio-monetario;
        health_check uri=/SubsidioMonetarioService;
    }

    location /ListasChequeoService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://listas-chequeo;
        health_check uri=/ListasChequeoService;
    }

    location /ConstantesParametrosService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://constantes-parametros;
        health_check uri=/ConstantesParametrosService;
    }

    location /UsuariosService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://usuarios;
        health_check uri=/UsuariosService;
    }

    location /FovisService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://fovis;
        health_check uri=/FovisService;
    }

    location /ListasService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://listas;
        health_check uri=/ListasService;
    }

    location /AfiliadosService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://afiliados;
        health_check uri=/AfiliadosService;
    }

    location /AsignarSolicitudesService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://asignar-solicitudes;
        health_check uri=/AsignarSolicitudesService;
    }

    location /ParametrosSubsidioCajaService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://parametros-subsidio-caja;
        health_check uri=/ParametrosSubsidioCajaService;
    }

    location /AuditoriaService {
        auth_jwt "Root";
        auth_jwt_key_file conf/secret.json;
        proxy_pass http://auditoria;
        health_check uri=/AuditoriaService;
    }

}

server {
    listen 8080;

    location /api/ {
        api write=on;
    }

    location = /dashboard.html {
        root   /usr/share/nginx/html;
    }

    # Redirect requests made to the old dashboard
    location = / {
        return 301 /dashboard.html;
    }

    location = /status.html {
        return 301 /dashboard.html;
    }
}