apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    name: ${project.artifactId}
  name: ${project.artifactId}
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      name: ${project.artifactId}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        date: ${timestamp}
      creationTimestamp: null
      labels:
        name: ${project.artifactId}
      name: ${project.artifactId}
    spec:
      containers:
      - image: ${docker.registry.name}/${project.artifactId}
        imagePullPolicy: Always
        name: ${project.artifactId}
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: https-alt
          protocol: TCP  
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: config
        - mountPath: /etc/localtime
          name: tz-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: backend_service_discovery.conf
            path: backend_service_discovery.conf
          name: ${project.artifactId}
        name: config
      - hostPath:
          path: /usr/share/zoneinfo/America/Bogota
          type: ""
        name: tz-config
status: {}