<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">

	<!-- ESPACIO PARA NAMED QUERIES JPA -->

	<!-- ESPACIO PARA NAMED QUERIES NATIVOS -->

	<named-native-query
		name="SubsidioMonetario.consultarDerechosBeneficiarios.temporal">
		<description>Consulta temporal para los derechos de los beneficiaros</description>
		<query>
			SELECT
			BeneficiarioSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario, 
			BeneficiarioSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			EmpleadorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador, 
			EmpleadorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			TrabajadorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador, 
			TrabajadorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			ResultadoValidacionLiquidacion.rvlResultadoCausal,
			ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion,
			ResultadoValidacionLiquidacion.rvlValorCuota
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona WITH (NOLOCK) AS EmpleadorSubsidio ON (EmpleadorSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			LEFT JOIN CondicionPersona WITH (NOLOCK) AS TrabajadorSubsidio ON (TrabajadorSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			LEFT JOIN CondicionPersona WITH (NOLOCK) AS BeneficiarioSubsidio ON (BeneficiarioSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona
			AND BeneficiarioSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultarDescuentos.liquidacion">
		<description>Consulta que permite obtener los descuentos realizados para beneficiarios</description>
		<query>
			SELECT rvl.rvlId, ped.pedCodigoEntidadDescuento, ped.pedNombreEntidadDescuento, dsc.dlqValorPignoradoBeneficiario 
			FROM DescuentoLiquidacion dsc WITH (NOLOCK)
			INNER JOIN ResultadoValidacionLiquidacion rvl WITH (NOLOCK) ON rvl.rvlId = dsc.dlqResultadoValidacionLiquidacion
			INNER JOIN SubsidioMonetarioValorPignorado smv WITH (NOLOCK) ON dsc.dlqSubsidioMonetarioValorPignorado = smv.smvId 
			INNER JOIN ArchivoEntidadDescuentoSubsidioPignorado ard WITH (NOLOCK) ON smv.smvArchivoEntidadDescuentoSubsidioPignorado = ard.ardId
			INNER JOIN PrioridadesEntidadesDescuentoLiquidacion ped WITH (NOLOCK) ON (ard.ardEntidadDescuento = ped.pedEntidadDescuento
			AND smv.smvNumeroRadicado = ped.pedNumeroRadicacion)
			WHERE smv.smvNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultarDescuentos.liquidacion.empleador">
		<description>Consulta que permite obtener los descuentos realizados para beneficiarios vista 360 por empleador </description>
		<query>
		
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroIdentificacion
				and perTipoIdentificacion = :tipoIdentificacion
			)

			SELECT rvl.rvlId, ped.pedCodigoEntidadDescuento, ped.pedNombreEntidadDescuento
			FROM DescuentoLiquidacion dsc WITH (NOLOCK)
			INNER JOIN ResultadoValidacionLiquidacion rvl WITH (NOLOCK) ON rvl.rvlId = dsc.dlqResultadoValidacionLiquidacion
			INNER JOIN CondicionEmpleador cem WITH (NOLOCK) ON cem.cemId = rvl.rvlCondicionEmpleador AND cem.cemNumeroRadicado = rvl.rvlNumeroRadicado
			INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cpe.cpeId = cem.cemCondicionPersona AND cpe.cpeNumeroRadicado = cem.cemNumeroRadicado
			INNER JOIN SubsidioMonetarioValorPignorado smv WITH (NOLOCK) ON dsc.dlqSubsidioMonetarioValorPignorado = smv.smvId 
			INNER JOIN ArchivoEntidadDescuentoSubsidioPignorado ard WITH (NOLOCK) ON smv.smvArchivoEntidadDescuentoSubsidioPignorado = ard.ardId
			INNER JOIN PrioridadesEntidadesDescuentoLiquidacion ped WITH (NOLOCK) ON (ard.ardEntidadDescuento = ped.pedEntidadDescuento
			AND smv.smvNumeroRadicado = ped.pedNumeroRadicacion)
			WHERE smv.smvNumeroRadicado = :numeroRadicacion
			and cpe.cpePersona in (select perId from Per);
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.eliminar.marcaProcesoAprobacionSegNivel">
		<description>Consulta que permite obtener los descuentos realizados para beneficiarios vista 360 por empleador </description>
		<query>
			DELETE FROM MarcaProcesoAprobacionSegNivel;
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultarResultado.liquidacion">
		<description>Consulta que permite obtener el resultado del proceso de liquidaci√≥n</description>
		<query>
				SELECT
			ResultadoValidacionLiquidacion.rvlId AS idResultadoValidacionLiquidacion,
			CAST(SolicitudLiquidacion.sllFechaInicio AS Date) AS fechaLiquidacion,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetCodCiiuSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodCiiuSucursal
				ELSE conEmpleador.cemCodigoCIIU 
			END AS ciiu,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetAgropecuario IS NOT NULL THEN CondicionEmpleadorTrabajador.cetAgropecuario
				ELSE conEmpleador.cemAgropecuario
			END AS condicionAgraria,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetCodSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodSucursal
				ELSE conEmpleador.cemCodigoSucursal
			END AS codigoSucursal,
			(DATEDIFF(YEAR, conEmpleador.cemFechaVinculacionBeneficio1429, conEmpleador.cemPeriodo) + 1) AS anioBeneficio1429,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario AS tipoSolicitante,
			CondicionAfiliadoPplBeneficiario.cabClasificacion AS clasificacion,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			ResultadoValidacionLiquidacion.rvlValorDescuento AS descuento,
			ResultadoValidacionLiquidacion.rvlValorCuotaAjustada AS valorPagar,
			CASE 
				WHEN SolicitudLiquidacion.sllTipoLiquidacion = 'RECONOCIMIENTO_DE_SUBSIDIOS'
				AND ( SELECT CASE WHEN 
						EXISTS(
							SELECT DISTINCT dbo.SolicitudNovedad.snoId
							FROM dbo.CondicionPersona WITH (NOLOCK)
							INNER JOIN dbo.PeriodoLiquidacionSubsidio ON (dbo.PeriodoLiquidacionSubsidio.plsNumeroRadicado = dbo.CondicionPersona.cpeNumeroRadicado 
										AND conEmpleador.cemPeriodo = dbo.PeriodoLiquidacionSubsidio.plsPeriodo)
							INNER JOIN dbo.SolicitudNovedadPersona ON dbo.SolicitudNovedadPersona.snpPersona = dbo.CondicionPersona.cpePersona
							INNER JOIN dbo.SolicitudNovedad ON dbo.SolicitudNovedadPersona.snpSolicitudNovedad = dbo.SolicitudNovedad.snoId
							INNER JOIN dbo.Solicitud ON dbo.SolicitudNovedad.snoSolicitudGlobal = dbo.Solicitud.solId
							WHERE dbo.CondicionPersona.cpeNumeroRadicado = :numeroRadicacion
							AND dbo.CondicionPersona.cpePersona = TrabajadorDeSubsidio.cpePersona
							AND dbo.SolicitudNovedad.snoNovedad IN (351,352,353) 
							AND (dbo.PeriodoLiquidacionSubsidio.plsPeriodo &lt; DATEFROMPARTS ( YEAR(dbo.Solicitud.solFechaRadicacion),MONTH(dbo.Solicitud.solFechaRadicacion), 01)
							AND dbo.PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
						) THEN 0
						ELSE 1	END
						) = 0
				THEN NULL				
				ELSE CondicionBeneficiario.cbeFechaInvalidez 
			END AS fechaCondicionInvalidez,
			AdministradorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			AdministradorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			CONCAT(AdministradorDeSubsidio.cpePrimerNombre,' ',AdministradorDeSubsidio.cpePrimerApellido) AS nombreAdministrador,			
			CAST(SUBSTRING(d.codigosConvenio,1, LEN(d.codigosConvenio) - 1) AS VARCHAR) as codigoConvenio,
			CONVERT(VARCHAR(07), conEmpleador.cemPeriodo) AS periodoLiquidado,
			CASE
				WHEN conEmpleador.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
					FROM PeriodoLiquidacionSubsidio 
					WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
					AND PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
				THEN 'REG'
				ELSE 'RET'
			END AS tipoPeriodo
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN CondicionEmpleador AS conEmpleador WITH (NOLOCK) ON (conEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND conEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = conEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = conEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona
			AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador 
			AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario 
			AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			LEFT JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON (CuotaConsolidadaBeneficiario.ccbCondicionPersonaBeneficiario = BeneficiarioDeSubsidio.cpeId
			AND CuotaConsolidadaBeneficiario.ccbNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			LEFT JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON (CuotaConsolidadaGrupoFamiliar.cgfId = CuotaConsolidadaBeneficiario.ccbCuotaConsolidadaGrupoFamiliar
			AND CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado = CuotaConsolidadaBeneficiario.ccbNumeroRadicado
			AND TrabajadorDeSubsidio.cpeId = CuotaConsolidadaGrupoFamiliar.cgfCondicionPersonaTrabajador)
			LEFT JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON (DispersionMedioDePagoAdmin.dmpId = CuotaConsolidadaGrupoFamiliar.cgfDispersionMedioDePagoAdmin
			AND DispersionMedioDePagoAdmin.dmpNumeroRadicado = CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado)
			LEFT JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON AdministradorSubsidioLiquidacion.aslId = DispersionMedioDePagoAdmin.dmpAdministradorSubsidio
			LEFT JOIN CondicionPersona AS AdministradorDeSubsidio WITH (NOLOCK) ON (AdministradorDeSubsidio.cpeId = AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio
			AND AdministradorDeSubsidio.cpeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			CROSS APPLY
			        (
			            SELECT SUBSTRING(elconv.ardNombre, 4, 4) + '- ' 
			            FROM  (
                            SELECT ard.ardNombre 
                            FROM SubsidioMonetarioValorPignorado smv WITH (NOLOCK) 
						    LEFT JOIN ArchivoEntidadDescuentoSubsidioPignorado ard WITH (NOLOCK) ON smv.smvArchivoEntidadDescuentoSubsidioPignorado = ard.ardId
			                WHERE smv.smvNumeroIdentificacionTrabajador = TrabajadorDeSubsidio.cpeNumeroIdentificacion
						    AND smv.smvNumeroIdentificacionAdministrador = AdministradorDeSubsidio.cpeNumeroIdentificacion
						    group by ard.ardNombre) as elconv
			            FOR XML PATH('')
			        ) D (codigosConvenio) 
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY ResultadoValidacionLiquidacion.rvlId, SolicitudLiquidacion.sllFechaInicio,	EmpleadorDeSubsidio.cpeNumeroIdentificacion, EmpleadorDeSubsidio.cpeTipoIdentificacion,
			EmpleadorDeSubsidio.cpeRazonSocial,CondicionEmpleadorTrabajador.cetCodCiiuSucursal, conEmpleador.cemCodigoCIIU,CondicionEmpleadorTrabajador.cetCodCiiuSucursal,
			CondicionEmpleadorTrabajador.cetAgropecuario, CondicionEmpleadorTrabajador.cetAgropecuario, conEmpleador.cemAgropecuario, conEmpleador.cemCodigoSucursal,
			CondicionEmpleadorTrabajador.cetCodSucursal, CondicionEmpleadorTrabajador.cetCodSucursal, conEmpleador.cemFechaVinculacionBeneficio1429, conEmpleador.cemPeriodo,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion, TrabajadorDeSubsidio.cpeTipoIdentificacion, TrabajadorDeSubsidio.cpePrimerNombre, TrabajadorDeSubsidio.cpePrimerApellido,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion,	BeneficiarioDeSubsidio.cpeTipoIdentificacion, BeneficiarioDeSubsidio.cpePrimerNombre, BeneficiarioDeSubsidio.cpePrimerApellido,
			CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario, CondicionAfiliadoPplBeneficiario.cabClasificacion, ResultadoValidacionLiquidacion.rvlValorCuota,
			ResultadoValidacionLiquidacion.rvlValorDescuento,ResultadoValidacionLiquidacion.rvlValorCuotaAjustada,SolicitudLiquidacion.sllTipoLiquidacion, CondicionBeneficiario.cbeFechaInvalidez,
			AdministradorDeSubsidio.cpeNumeroIdentificacion, AdministradorDeSubsidio.cpeTipoIdentificacion,	AdministradorDeSubsidio.cpePrimerNombre, AdministradorDeSubsidio.cpePrimerApellido,				
			conEmpleador.cemPeriodo, TrabajadorDeSubsidio.cpePersona,D.codigosConvenio
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultarResultado.liquidacion.empleador">
		<description>Consulta que permite obtener el resultado del proceso de liquidaci√≥n para la vista 360 del empleador</description>
		<query>
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroIdentificacion
				and perTipoIdentificacion = :tipoIdentificacion
			)

			SELECT
			ResultadoValidacionLiquidacion.rvlId AS idResultadoValidacionLiquidacion,
			CAST(SolicitudLiquidacion.sllFechaInicio AS Date) AS fechaLiquidacion,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetCodCiiuSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodCiiuSucursal
				ELSE CondicionEmpleador.cemCodigoCIIU 
			END AS ciiu,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetAgropecuario IS NOT NULL THEN CondicionEmpleadorTrabajador.cetAgropecuario
				ELSE CondicionEmpleador.cemAgropecuario
			END AS condicionAgraria,
			CASE
				WHEN CondicionEmpleadorTrabajador.cetCodSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodSucursal
				ELSE CondicionEmpleador.cemCodigoSucursal
			END AS codigoSucursal,
			(DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, CondicionEmpleador.cemPeriodo) + 1) AS anioBeneficio1429,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario AS tipoSolicitante,
			CondicionAfiliadoPplBeneficiario.cabClasificacion AS clasificacion,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			ResultadoValidacionLiquidacion.rvlValorDescuento AS descuento,
			ResultadoValidacionLiquidacion.rvlValorCuotaAjustada AS valorPagar,
			CondicionBeneficiario.cbeFechaInvalidez AS fechaCondicionInvalidez,
			AdministradorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			AdministradorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			CONCAT(AdministradorDeSubsidio.cpePrimerNombre,' ',AdministradorDeSubsidio.cpePrimerApellido) AS nombreAdministrador,
			'' AS codigoConvenio,
			CONVERT(VARCHAR(07), CondicionEmpleador.cemPeriodo) AS periodoLiquidado,
			CASE
				WHEN CondicionEmpleador.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
					FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
					WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
					AND PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
				THEN 'REG'
				ELSE 'RET'
			END AS tipoPeriodo
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona
			AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador 
			AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario 
			AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON (CuotaConsolidadaBeneficiario.ccbCondicionPersonaBeneficiario = BeneficiarioDeSubsidio.cpeId
			AND CuotaConsolidadaBeneficiario.ccbNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON (CuotaConsolidadaGrupoFamiliar.cgfId = CuotaConsolidadaBeneficiario.ccbCuotaConsolidadaGrupoFamiliar
			AND CuotaConsOlidadaGrupoFamiliar.cgfNumeroRadicado = CuotaConsolidadaBeneficiario.ccbNumeroRadicado)
			INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON (DispersionMedioDePagoAdmin.dmpId = CuotaConsolidadaGrupoFamiliar.cgfDispersionMedioDePagoAdmin
			AND DispersionMedioDePagoAdmin.dmpNumeroRadicado = CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado)
			INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON AdministradorSubsidioLiquidacion.aslId = DispersionMedioDePagoAdmin.dmpAdministradorSubsidio
			INNER JOIN CondicionPersona AS AdministradorDeSubsidio WITH (NOLOCK) ON (AdministradorDeSubsidio.cpeId = AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio
			AND AdministradorDeSubsidio.cpeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND TrabajadorDeSubsidio.cpeId = CuotaConsolidadaGrupoFamiliar.cgfCondicionPersonaTrabajador
			AND EmpleadorDeSubsidio.cpePersona  in (select perId from Per);
			
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarPersonasSinDerecho.liquidacion.count">
		<description>Consulta que permite obtener la informaci√≥n de las personas sin derecho en una liquidaci√≥n</description>
		<query>
			SELECT
				COUNT(*)
			FROM (
				SELECT DISTINCT
				EmpleadorDeSubsidio.cpePersona as emp,
				TrabajadorDeSubsidio.cpePersona as tra,
				BeneficiarioDeSubsidio.cpePersona	as ben,		
				CondicionEmpleador.cemPeriodo as per,
				ResultadoValidacionLiquidacion.rvlId as idResultadoValidacionLiquidacion,
				ResultadoValidacionLiquidacion.rvlCondicionEmpleador as idCondicionEmpleador, 
				ResultadoValidacionLiquidacion.rvlCondicionTrabajador as idCondicionTrabajador, 
				ResultadoValidacionLiquidacion.rvlCondicionBeneficiario as idCondicionBeneficiario, 
				ResultadoValidacionLiquidacion.rvlNumeroRadicado,
				SolicitudLiquidacion.sllFechaInicio AS fechaLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacion AS tipoLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacionEspecifica AS subtipoLiquidacion,
				EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
				CondicionEmpleador.cemCodigoCIIU AS ciiu,
				CondicionEmpleador.cemAgropecuario AS condicionAgraria,
				CASE
					WHEN CondicionEmpleadorTrabajador.cetCodSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodSucursal
					ELSE CondicionEmpleador.cemCodigoSucursal
				END AS codigoSucursal,
				DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) AS anioBeneficio1429,
				TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
				TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
				CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
				BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
				BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
				CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
				CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario AS tipoSolicitante,
				CondicionAfiliadoPplBeneficiario.cabClasificacion AS clasificacion,
				ResultadoValidacionLiquidacion.rvlResultadoCausal AS razonesSinDerecho,
				CONVERT(VARCHAR(07), CondicionEmpleador.cemPeriodo) AS periodoLiquidado,
				CASE
					WHEN CondicionEmpleador.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
					THEN 'REG'
					ELSE 'RET'
				END AS tipoPeriodo
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
				LEFT JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajado AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO'
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			) AS a
			LEFT JOIN (
				SELECT DISTINCT
				emp.cpePersona as empPer,
				tra.cpePersona as traPer,
				ben.cpePersona as benPer,
				cemPeriodo per
				FROM ResultadoValidacionLiquidacion rvl2 WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = rvl2.rvlNumeroRadicado
				LEFT JOIN CondicionEmpleador cem WITH (NOLOCK) ON (cem.cemId = rvl2.rvlCondicionEmpleador AND cem.cemNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona emp WITH (NOLOCK) ON (emp.cpeId = cem.cemCondicionPersona AND emp.cpeNumeroRadicado = cem.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador ctr WITH (NOLOCK) ON (ctr.ctrId = rvl2.rvlCondicionTrabajador AND ctr.ctrNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona tra WITH (NOLOCK) ON (tra.cpeId = ctr.ctrCondicionPersona AND tra.cpeNumeroRadicado = ctr.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario cbe WITH (NOLOCK) ON (cbe.cbeId = rvl2.rvlCondicionBeneficiario AND cbe.cbeNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona ben WITH (NOLOCK) ON (ben.cpeId = cbe.cbeCondicionPersona AND ben.cpeNumeroRadicado = cbe.cbeNumeroRadicado)
				WHERE rvl2.rvlNumeroRadicado != :numeroRadicacion
				AND sllFechaInicio &lt; (SELECT sllFechaInicio 
						FROM SolicitudLiquidacion WITH (NOLOCK) 
						WHERE sllNumeroRadicacion = :numeroRadicacion)
				AND cem.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo != 'REGULAR')
			) AS b ON a.emp = b.empPer 
				AND (a.tra = b.traPer OR  (a.tra IS NULL AND b.traPer IS NULL))
				AND (a.ben = b.benPer OR (a.ben IS NULL AND  b.benPer IS NULL))
				AND a.per = b.per
			WHERE b.empPer IS NULL 
			AND b.traPer IS NULL 
			AND b.benPer IS NULL
			AND b.per IS NULL
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultarPersonasSinDerecho.liquidacion">
		<description>Consulta que permite obtener la informaci√≥n de las personas sin derecho en una liquidaci√≥n</description>
		<query>
			SELECT
				a.idResultadoValidacionLiquidacion,
				a.fechaLiquidacion, 
				a.tipoLiquidacion, 
				a.subtipoLiquidacion, 
				a.tipoIdentificacionEmpleador,
				a.numeroIdentificacionEmpleador, 
				a.nombreEmpleador, 
				a.ciiu, 
				a.condicionAgraria, 
				a.codigoSucursal, 
				a.anioBeneficio1429,
				a.numeroIdentificacionTrabajador, 
				a.tipoIdentificacionTrabajador, 
				a.nombreTrabajador, 
				a.numeroIdentificacionBeneficiario,
				a.tipoIdentificacionBeneficiario, 
				a.nombreBeneficiario, 
				a.tipoSolicitante, 
				a.clasificacion,
				a.razonesSinDerecho,
				a.periodoLiquidado,
				a.tipoPeriodo
			FROM (
				SELECT DISTINCT
				EmpleadorDeSubsidio.cpePersona as emp,
				TrabajadorDeSubsidio.cpePersona as tra,
				BeneficiarioDeSubsidio.cpePersona	as ben,		
				CondicionEmpleador.cemPeriodo as per,
				ResultadoValidacionLiquidacion.rvlId as idResultadoValidacionLiquidacion,
				ResultadoValidacionLiquidacion.rvlCondicionEmpleador as idCondicionEmpleador, 
				ResultadoValidacionLiquidacion.rvlCondicionTrabajador as idCondicionTrabajador, 
				ResultadoValidacionLiquidacion.rvlCondicionBeneficiario as idCondicionBeneficiario, 
				ResultadoValidacionLiquidacion.rvlNumeroRadicado,
				CAST(SolicitudLiquidacion.sllFechaInicio AS date) AS fechaLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacion AS tipoLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacionEspecifica AS subtipoLiquidacion,
				EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
				CondicionEmpleador.cemCodigoCIIU AS ciiu,
				CondicionEmpleador.cemAgropecuario AS condicionAgraria,
				CASE
					WHEN CondicionEmpleadorTrabajador.cetCodSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodSucursal
					ELSE CondicionEmpleador.cemCodigoSucursal
				END AS codigoSucursal,
				DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) AS anioBeneficio1429,
				TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
				TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
				CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
				BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
				BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
				CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
				CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario AS tipoSolicitante,
				CondicionAfiliadoPplBeneficiario.cabClasificacion AS clasificacion,
				ResultadoValidacionLiquidacion.rvlResultadoCausal AS razonesSinDerecho,
				CONVERT(VARCHAR(07), CondicionEmpleador.cemPeriodo) AS periodoLiquidado,
				CASE
					WHEN CondicionEmpleador.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
					THEN 'REG'
					ELSE 'RET'
				END AS tipoPeriodo
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
				LEFT JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO'
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			) AS a
			LEFT JOIN (
				SELECT DISTINCT
				emp.cpePersona as empPer,
				tra.cpePersona as traPer,
				ben.cpePersona as benPer,
				cemPeriodo per
				FROM ResultadoValidacionLiquidacion rvl2 WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = rvl2.rvlNumeroRadicado
				LEFT JOIN CondicionEmpleador cem WITH (NOLOCK) ON (cem.cemId = rvl2.rvlCondicionEmpleador AND cem.cemNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona emp WITH (NOLOCK) ON (emp.cpeId = cem.cemCondicionPersona AND emp.cpeNumeroRadicado = cem.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador ctr WITH (NOLOCK) ON (ctr.ctrId = rvl2.rvlCondicionTrabajador AND ctr.ctrNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona tra WITH (NOLOCK) ON (tra.cpeId = ctr.ctrCondicionPersona AND tra.cpeNumeroRadicado = ctr.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario cbe WITH (NOLOCK) ON (cbe.cbeId = rvl2.rvlCondicionBeneficiario AND cbe.cbeNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona ben WITH (NOLOCK) ON (ben.cpeId = cbe.cbeCondicionPersona AND ben.cpeNumeroRadicado = cbe.cbeNumeroRadicado)
				WHERE rvl2.rvlNumeroRadicado != :numeroRadicacion
				AND sllFechaInicio &lt; (SELECT sllFechaInicio 
						FROM SolicitudLiquidacion WITH (NOLOCK) 
						WHERE sllNumeroRadicacion = :numeroRadicacion)
				AND cem.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo != 'REGULAR')
			) AS b ON a.emp = b.empPer 
				AND (a.tra = b.traPer OR  (a.tra IS NULL AND b.traPer IS NULL))
				AND (a.ben = b.benPer OR (a.ben IS NULL AND  b.benPer IS NULL))
				AND a.per = b.per
			WHERE b.empPer IS NULL 
			AND b.traPer IS NULL 
			AND b.benPer IS NULL
			AND b.per IS NULL
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultarPersonasSinDerecho.liquidacion.empleador">
		<description>Consulta que permite obtener la informaci√≥n de las personas sin derecho en una liquidaci√≥n por empresa vista 360</description>
		<query>
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroIdentificacion
				and perTipoIdentificacion = :tipoIdentificacion
			)

			SELECT
				a.idResultadoValidacionLiquidacion,
				a.fechaLiquidacion, 
				a.tipoLiquidacion, 
				a.subtipoLiquidacion, 
				a.tipoIdentificacionEmpleador,
				a.numeroIdentificacionEmpleador, 
				a.nombreEmpleador, 
				a.ciiu, 
				a.condicionAgraria, 
				a.codigoSucursal, 
				a.anioBeneficio1429,
				a.numeroIdentificacionTrabajador, 
				a.tipoIdentificacionTrabajador, 
				a.nombreTrabajador, 
				a.numeroIdentificacionBeneficiario,
				a.tipoIdentificacionBeneficiario, 
				a.nombreBeneficiario, 
				a.tipoSolicitante, 
				a.clasificacion,
				a.razonesSinDerecho,
				a.periodoLiquidado,
				a.tipoPeriodo
			FROM (
				SELECT DISTINCT
				EmpleadorDeSubsidio.cpePersona as emp,
				TrabajadorDeSubsidio.cpePersona as tra,
				BeneficiarioDeSubsidio.cpePersona	as ben,		
				CondicionEmpleador.cemPeriodo as per,
				ResultadoValidacionLiquidacion.rvlId as idResultadoValidacionLiquidacion,
				ResultadoValidacionLiquidacion.rvlCondicionEmpleador as idCondicionEmpleador, 
				ResultadoValidacionLiquidacion.rvlCondicionTrabajador as idCondicionTrabajador, 
				ResultadoValidacionLiquidacion.rvlCondicionBeneficiario as idCondicionBeneficiario, 
				ResultadoValidacionLiquidacion.rvlNumeroRadicado,
				CAST(SolicitudLiquidacion.sllFechaInicio AS date) AS fechaLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacion AS tipoLiquidacion,
				SolicitudLiquidacion.sllTipoLiquidacionEspecifica AS subtipoLiquidacion,
				EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
				EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
				CondicionEmpleador.cemCodigoCIIU AS ciiu,
				CondicionEmpleador.cemAgropecuario AS condicionAgraria,
				CASE
					WHEN CondicionEmpleadorTrabajador.cetCodSucursal IS NOT NULL THEN CondicionEmpleadorTrabajador.cetCodSucursal
					ELSE CondicionEmpleador.cemCodigoSucursal
				END AS codigoSucursal,
				DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) AS anioBeneficio1429,
				TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
				TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
				CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
				BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
				BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
				CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
				CondicionAfiliadoPplBeneficiario.cabTipoBeneficiario AS tipoSolicitante,
				CondicionAfiliadoPplBeneficiario.cabClasificacion AS clasificacion,
				ResultadoValidacionLiquidacion.rvlResultadoCausal AS razonesSinDerecho,
				CONVERT(VARCHAR(07), CondicionEmpleador.cemPeriodo) AS periodoLiquidado,
				CASE
					WHEN CondicionEmpleador.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR')
					THEN 'REG'
					ELSE 'RET'
				END AS tipoPeriodo
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
				LEFT JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO'
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
				AND EmpleadorDeSubsidio.cpePersona in (select perId from Per)
			) AS a
			LEFT JOIN (
				SELECT DISTINCT
				emp.cpePersona as empPer,
				tra.cpePersona as traPer,
				ben.cpePersona as benPer,
				cemPeriodo per
				FROM ResultadoValidacionLiquidacion rvl2 WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = rvl2.rvlNumeroRadicado
				LEFT JOIN CondicionEmpleador cem WITH (NOLOCK) ON (cem.cemId = rvl2.rvlCondicionEmpleador AND cem.cemNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona emp WITH (NOLOCK) ON (emp.cpeId = cem.cemCondicionPersona AND emp.cpeNumeroRadicado = cem.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador ctr WITH (NOLOCK) ON (ctr.ctrId = rvl2.rvlCondicionTrabajador AND ctr.ctrNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona tra WITH (NOLOCK) ON (tra.cpeId = ctr.ctrCondicionPersona AND tra.cpeNumeroRadicado = ctr.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario cbe WITH (NOLOCK) ON (cbe.cbeId = rvl2.rvlCondicionBeneficiario AND cbe.cbeNumeroRadicado = rvl2.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona ben WITH (NOLOCK) ON (ben.cpeId = cbe.cbeCondicionPersona AND ben.cpeNumeroRadicado = cbe.cbeNumeroRadicado)
				WHERE rvl2.rvlNumeroRadicado != :numeroRadicacion
				AND sllFechaInicio &lt; (SELECT sllFechaInicio 
						FROM SolicitudLiquidacion WITH (NOLOCK) 
						WHERE sllNumeroRadicacion = :numeroRadicacion)
				AND cem.cemPeriodo IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo 
						FROM PeriodoLiquidacionSubsidio WITH (NOLOCK) 
						WHERE PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion
						AND PeriodoLiquidacionSubsidio.plsTipoPeriodo != 'REGULAR')
			) AS b ON a.emp = b.empPer 
				AND (a.tra = b.traPer OR  (a.tra IS NULL AND b.traPer IS NULL))
				AND (a.ben = b.benPer OR (a.ben IS NULL AND  b.benPer IS NULL))
				AND a.per = b.per
			WHERE b.empPer IS NULL 
			AND b.traPer IS NULL 
			AND b.benPer IS NULL
			AND b.per IS NULL
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarCantidadTrabajadoresMasXSubsidios">
		<description>Consulta que permite obtener la cantidad de trabajadores con mas subsidios que los parametrizados</description>
		<query>
			SELECT COUNT(*) AS cantidadTrabajadores
			FROM (SELECT COUNT(*) AS cantidadSubsidios
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionTrabajador.ctrCondicionPersona) AS CantidadSubsidiosTrabajador
			WHERE CantidadSubsidiosTrabajador.cantidadSubsidios &gt; :cantidadSubsidios
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarCantidadTrabajadoresMasXMonto">
		<description>Consulta que permite obtener la cantidad de trabajadores con mas monto de subsidios que el parametrizado</description>
		<query>
			SELECT COUNT(*) AS cantidadTrabajadores
			FROM (SELECT SUM(ResultadoValidacionLiquidacion.rvlValorCuotaAjustada) AS montoSubsidios
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionTrabajador.ctrCondicionPersona) AS MontoSubsidiosTrabajador
			WHERE MontoSubsidiosTrabajador.montoSubsidios &gt; :montoSubsidios
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarCantidadTrabajadoresMasXSubsidiosInvalidez">
		<description>Consulta que permite obtener la cantidad de trabajadores con mas subsidios de invalidez que los parametrizados</description>
		<query>
			SELECT COUNT(*) AS cantidadTrabajadores
			FROM (SELECT COUNT(*) AS cantidadSubsidios
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND ResultadoValidacionLiquidacion.rvlEsDiscapacidad = 1
			GROUP BY CondicionTrabajador.ctrCondicionPersona) AS CantidadSubsidiosInvalidezTrabajador
			WHERE CantidadSubsidiosInvalidezTrabajador.cantidadSubsidios &gt; :cantidadSubsidios
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarCantidadEmpresasMasXPeriodosRetroactivos">
		<description>Consulta que permite obtener la cantidad de empresas con m√°s de X periodos retroactivos que los parametrizados</description>
		<query>
			SELECT COUNT(*) AS cantidadEmpresas
			FROM (SELECT COUNT (DISTINCT CondicionEmpleador.cemPeriodo) AS cantidadPeriodosRetroactivos
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND CondicionEmpleador.cemPeriodo NOT IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo
			FROM PeriodoLiquidacionSubsidio WITH (NOLOCK)
			WHERE PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR'
			AND PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion)			
			GROUP BY CondicionEmpleador.cemCondicionPersona) AS CantidadPeriodosRetroactivosEmpleador
			WHERE CantidadPeriodosRetroactivosEmpleador.cantidadPeriodosRetroactivos &gt; :cantidadPeriodosRetroactivos
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consutlarCantidadEmpresas1429">
		<description>Consulta que permite obtener la cantidad de empresas que se encuentran en el a√±o 1 y 2 del beneficio 1429</description>
		<query>
			SELECT COUNT(*) AS cantidadEmpresas
			FROM (SELECT SUM(ResultadoValidacionLiquidacion.rvlValorCuotaAjustada) AS montoSubsidios
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) &lt;= 2
			GROUP BY CondicionEmpleador.cemCondicionPersona) AS MontoSubsidiosEmpresa
			WHERE MontoSubsidiosEmpresa.montoSubsidios &gt; 0
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarMontoDescontadoPersonas">
		<description>Consulta que permite obtener el monto total descontado para los beneficiarios de subsidio</description>
		<query>
			SELECT COALESCE(SUM(DescuentoLiquidacion.dlqValorPignoradoBeneficiario), 0) FROM DescuentoLiquidacion WITH (NOLOCK)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = DescuentoLiquidacion.dlqResultadoValidacionLiquidacion
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarCantidadPersonasConDescuento">
		<description>Consulta que permite obtener la cantidad de personas con descuentos</description>
		<query>
			SELECT COUNT(*) AS cantidadPersonas
			FROM (SELECT COUNT(CondicionBeneficiario.cbeCondicionPersona) AS cantidadDescuentos
			FROM DescuentoLiquidacion WITH (NOLOCK)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = DescuentoLiquidacion.dlqResultadoValidacionLiquidacion
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionBeneficiario.cbeCondicionPersona) AS CantidadTrabajadoresDescuento
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarTrabajadoresMasXSubsidios">
		<description>Consulta que permite obtener el detalle de los trabajadores con subsidios por encima del umbral</description>
		<query>
			SELECT 
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK)
			INNER JOIN (SELECT CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId 
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado 
			HAVING COUNT(*) &gt; :cantidadSubsidios) AS TrabajadoresCumplen
			ON (TrabajadorDeSubsidio.cpeId = TrabajadoresCumplen.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = TrabajadoresCumplen.ctrNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionEmpleador = CondicionEmpleador.cemId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (CondicionEmpleador.cemCondicionPersona = EmpleadorDeSubsidio.cpeId
			AND CondicionEmpleador.cemNumeroRadicado = EmpleadorDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioDeSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultarTrabajadoresMasXMonto">
		<description>Consulta que permite obtener el detalle de los trabajadores con monto liquidado por encima del umbral</description>
		<query>
			SELECT 
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK)
			INNER JOIN (SELECT CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId 
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado 
			HAVING SUM(ResultadoValidacionLiquidacion.rvlValorCuotaAjustada) &gt; :montoSubsidios) AS TrabajadoresCumplen
			ON (TrabajadorDeSubsidio.cpeId = TrabajadoresCumplen.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = TrabajadoresCumplen.ctrNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionEmpleador = CondicionEmpleador.cemId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (CondicionEmpleador.cemCondicionPersona = EmpleadorDeSubsidio.cpeId
			AND CondicionEmpleador.cemNumeroRadicado = EmpleadorDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioDeSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarTrabajadoresMasXSubsidiosInvalidez">
		<description>Consulta que permite obtener el detalle de los trabajadores con subsidios con invalidez por encima del umbral</description>
		<query>
			SELECT 
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK)
			INNER JOIN (SELECT CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId 
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND CondicionBeneficiario.cbeFechaInvalidez IS NOT NULL
			GROUP BY CondicionTrabajador.ctrCondicionPersona, CondicionTrabajador.ctrNumeroRadicado 
			HAVING COUNT(*) &gt; :cantidadSubsidiosInvalidez) AS TrabajadoresCumplen
			ON (TrabajadorDeSubsidio.cpeId = TrabajadoresCumplen.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = TrabajadoresCumplen.ctrNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionEmpleador = CondicionEmpleador.cemId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (CondicionEmpleador.cemCondicionPersona = EmpleadorDeSubsidio.cpeId
			AND CondicionEmpleador.cemNumeroRadicado = EmpleadorDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioDeSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND CondicionBeneficiario.cbeFechaInvalidez IS NOT NULL
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarEmpresasMasXPeriodosRetroactivos">
		<description>Consulta que permite obtener el detalle de las empresas con periodos retroactivos por encima del umbral</description>
		<query>
			SELECT
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK)
			INNER JOIN (SELECT CondicionEmpleador.cemCondicionPersona, CondicionEmpleador.cemNumeroRadicado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND CondicionEmpleador.cemPeriodo NOT IN (SELECT PeriodoLiquidacionSubsidio.plsPeriodo
			FROM PeriodoLiquidacionSubsidio WITH (NOLOCK)
			WHERE PeriodoLiquidacionSubsidio.plsTipoPeriodo = 'REGULAR'
			AND PeriodoLiquidacionSubsidio.plsNumeroRadicado = :numeroRadicacion)
			GROUP BY CondicionEmpleador.cemCondicionPersona, CondicionEmpleador.cemNumeroRadicado
			HAVING COUNT (DISTINCT CondicionEmpleador.cemPeriodo) &gt; :cantidadPeriodosRetroactivos) AS EmpleadoresCumplen
			ON (EmpleadorDeSubsidio.cpeId = EmpleadoresCumplen.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = EmpleadoresCumplen.cemNumeroRadicado)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorDeSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioDeSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultarEmpresas1429">
		<description>Consulta que permite obtener el detalle de las empresas 1429 en el a√±o 1 y 2 del beneficio con subsidio mayor a cero</description>
		<query>
			SELECT 
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) AS anioBeneficio1429,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorCuota AS valorCuota,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK)
			INNER JOIN (SELECT CondicionEmpleador.cemCondicionPersona, CondicionEmpleador.cemNumeroRadicado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) &lt;= 2
			GROUP BY CondicionEmpleador.cemCondicionPersona, CondicionEmpleador.cemNumeroRadicado
			HAVING SUM(ResultadoValidacionLiquidacion.rvlValorCuotaAjustada) &gt; 0) AS EmpleadoresCumplen
			ON (EmpleadorDeSubsidio.cpeId = EmpleadoresCumplen.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = EmpleadoresCumplen.cemNumeroRadicado)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN ResultadoValidacionLiquidacion WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorDeSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioDeSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultarDescuentosPersonas">
		<description>Consulta que permite obtener el detalle las personas con descuentos</description>
		<query>
			SELECT
			ResultadoValidacionLiquidacion.rvlId AS idResultadoValidacionLiquidacion,
			EmpleadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionEmpleador,
			EmpleadorDeSubsidio.cpeRazonSocial AS nombreEmpleador,
			DATEDIFF(YEAR, CondicionEmpleador.cemFechaVinculacionBeneficio1429, GETDATE()) AS anioBeneficio1429,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido) AS nombreBeneficiario,
			ResultadoValidacionLiquidacion.rvlValorDescuento AS valorDescuento,
			CondicionBeneficiario.cbePeriodo AS periodoLiquidado
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona
			AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			JOIN (SELECT DISTINCT rvl.rvlId
					FROM DescuentoLiquidacion dsc WITH (NOLOCK)
					INNER JOIN ResultadoValidacionLiquidacion rvl WITH (NOLOCK) ON rvl.rvlId = dsc.dlqResultadoValidacionLiquidacion
					WHERE RVL.rvlNumeroRadicado = :numeroRadicacion	
				 ) descu on descu.rvlId = ResultadoValidacionLiquidacion.rvlId			
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion			
			ORDER BY numeroIdentificacionBeneficiario
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultarParametrizacionCondiciones.radicacion">
		<description>Consulta que permite obtener la parametrizaci√≥n de condiciones asociada a una liquidaci√≥n</description>
		<query>
			SELECT pcs.pcsId, pcs.pcsAnioVigenciaParametrizacion,
			pcs.pcsPeriodoInicio, pcs.pcsPeriodoFin,
			pcs.pcsValorCuotaAnualBase,	pcs.pcsValorCuotaAnualAgraria,
			pcs.pcsProgramaDecreto4904,	pcs.pcsRetroactivoNovInvalidez,
			pcs.pcsRetroactivoReingresoEmpleadores,
			pcs.pcsCantidadSubsidiosLiquidados,
			pcs.pcsMontoSubsidiosLiquidados,
			pcs.pcsCantidadSubsidiosLiquidadosInvalidez,
			pcs.pcsCantidadPeriodosRetroactivosMes,
			pcs.pcsDiasNovedadFallecimiento
			FROM ParametrizacionCondicionesSubsidioLiquidacion pcs
			WHERE pcs.pcsNumeroRadicacion = :numeroRadicacion
			AND pcs.pcsPeriodoInicio &lt;=:periodo AND pcs.pcsPeriodoFin &gt;=:periodo
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.actualizar.estadoDerechoLiquidacion">
		<description>Consulta que permite actualizar el estado de derecho para los subsidios de un proceso de liquidaci√≥n</description>
		<query>
			UPDATE ResultadoValidacionLiquidacion
			SET ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'ASIGNAR_DERECHO'
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.totalDerechos.liquidacionEspecifica">
		<description>Consulta que permite obtener el total de derechos a siganar en un proceso de liquidaci√≥n espec√≠fica</description>
		<query>
   			SELECT COUNT(*) AS totalConDerecho 
   			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
   			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
   			AND ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
   		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.resultadoLiquidacion.fallecimiento">
		<description>Consulta que permite obtener el resultado de los subsidios asignados para una liquidaci√≥n de fallecimiento</description>
		<query>
   			SELECT
			CondicionBeneficiario.cbeId AS identificadorCondicionBeneficiario,
			BeneficiarioSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioSubsidio.cpePrimerNombre,' ',BeneficiarioSubsidio.cpeSegundoNombre,' ',BeneficiarioSubsidio.cpePrimerApellido, ' ',BeneficiarioSubsidio.cpeSegundoApellido)
			AS nombreBeneficiario,
			CondicionTrabajador.ctrId AS identificadorCondicionTrabajador,
			TrabajadorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorSubsidio.cpePrimerNombre,' ',TrabajadorSubsidio.cpeSegundoNombre,' ',TrabajadorSubsidio.cpePrimerApellido, ' ',TrabajadorSubsidio.cpeSegundoApellido)
			AS nombreTrabajador,
			AdministradorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			AdministradorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			CONCAT(AdministradorSubsidio.cpePrimerNombre,' ',AdministradorSubsidio.cpeSegundoNombre,' ',AdministradorSubsidio.cpePrimerApellido, ' ',AdministradorSubsidio.cpeSegundoApellido)
			AS nombreAdministrador,
			MedioDePagoLiquidacion.mpgNombre AS medioDePagoAdministrador,
			CondicionAfiliadoPplBeneficiario.cabClasificacion AS parentesco,
			ResultadoValidacionLiquidacion.rvlValorCuota AS totalDerecho,
			ResultadoValidacionLiquidacion.rvlValorDescuento AS totalDescuentos,
			ResultadoValidacionLiquidacion.rvlValorCuotaAjustada AS totalPagar,
			SolicitudLiquidacion.sllTipoLiquidacionEspecifica AS tipoLiquidacionFallecimiento,
			GestionSubsidioFallecimiento.gsfSubsidioGestionado AS indicadorGestionSubsidio,
			GestionSubsidioFallecimiento.gsfSubsidioConfirmado AS indicadorConfirmacionSubsidio,
			CondicionBeneficiario.cbeCondicionPersona AS idPersonaBeneficiario,
			CondicionTrabajador.ctrCondicionPersona AS idPersonaTrabajador,
			CASE
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario IS NULL THEN 'TRABAJADOR_NO_CUMPLE'
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario IS NOT NULL THEN 'BENEFICIARIO_NO_CUMPLE'
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('DERECHO_ASIGNADO','ASIGNAR_DERECHO') THEN 'BENEFICIARIO_ADMIN_CUMPLEN'
			END AS estadoCumplimiento,
			ResultadoValidacionLiquidacion.rvlDescuentoEntidad AS totalDescuentosEntidad
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionEmpleador = CondicionEmpleador.cemId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorSubsidio WITH (NOLOCK) ON (CondicionEmpleador.cemCondicionPersona = EmpleadorSubsidio.cpeId
			AND CondicionEmpleador.cemNumeroRadicado = EmpleadorSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorSubsidio.cpeNumeroRadicado)
			LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			LEFT JOIN CondicionPersona AS BeneficiarioSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioSubsidio.cpeNumeroRadicado)
			LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador
			AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionAfiliadoPplBeneficiario.cabNumeroRadicado)
			LEFT JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON (BeneficiarioSubsidio.cpeId = CuotaConsolidadaBeneficiario.ccbCondicionPersonaBeneficiario
			AND BeneficiarioSubsidio.cpeNumeroRadicado = CuotaConsolidadaBeneficiario.ccbNumeroRadicado)
			LEFT JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON (CuotaConsolidadaBeneficiario.ccbCuotaConsolidadaGrupoFamiliar = CuotaConsolidadaGrupoFamiliar.cgfId
			AND CuotaConsolidadaBeneficiario.ccbNumeroRadicado = CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado)
			LEFT JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON (CuotaConsolidadaGrupoFamiliar.cgfDispersionMedioDePagoAdmin = DispersionMedioDePagoAdmin.dmpId
			AND CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado = DispersionMedioDePagoAdmin.dmpNumeroRadicado)
			LEFT JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON DispersionMedioDePagoAdmin.dmpAdministradorSubsidio = AdministradorSubsidioLiquidacion.aslId
			LEFT JOIN CondicionPersona AS AdministradorSubsidio WITH (NOLOCK) ON (AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio = AdministradorSubsidio.cpeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = AdministradorSubsidio.cpeNumeroRadicado)
			LEFT JOIN MedioDePagoLiquidacion WITH (NOLOCK) ON (DispersionMedioDePagoAdmin.dmpMedioDePagoLiquidacion = MedioDePagoLiquidacion.mpgId
			AND DispersionMedioDePagoAdmin.dmpNumeroRadicado = MedioDePagoLiquidacion.mpgNumeroRadicado)
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlNumeroRadicado = SolicitudLiquidacion.sllNumeroRadicacion
			INNER JOIN GestionSubsidioFallecimiento WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = GestionSubsidioFallecimiento.gsfResultadoValidacionLiquidacion
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
   		</query>
	</named-native-query>
	
	
	<named-native-query
		name="SubsidioMonetario.consultar.resultadoLiquidacion.fallecimiento.confirmados">
		<description>Consulta que permite obtener el resultado de los subsidios asignados para una liquidaci√≥n de fallecimiento</description>
		<query>
   			SELECT
			CondicionBeneficiario.cbeId AS identificadorCondicionBeneficiario,
			BeneficiarioSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioSubsidio.cpePrimerNombre,' ',BeneficiarioSubsidio.cpeSegundoNombre,' ',BeneficiarioSubsidio.cpePrimerApellido, ' ',BeneficiarioSubsidio.cpeSegundoApellido)
			AS nombreBeneficiario,
			CondicionTrabajador.ctrId AS identificadorCondicionTrabajador,
			TrabajadorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorSubsidio.cpePrimerNombre,' ',TrabajadorSubsidio.cpeSegundoNombre,' ',TrabajadorSubsidio.cpePrimerApellido, ' ',TrabajadorSubsidio.cpeSegundoApellido)
			AS nombreTrabajador,
			AdministradorSubsidio.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			AdministradorSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			CONCAT(AdministradorSubsidio.cpePrimerNombre,' ',AdministradorSubsidio.cpeSegundoNombre,' ',AdministradorSubsidio.cpePrimerApellido, ' ',AdministradorSubsidio.cpeSegundoApellido)
			AS nombreAdministrador,
			MedioDePagoLiquidacion.mpgNombre AS medioDePagoAdministrador,
			CondicionAfiliadoPplBeneficiario.cabClasificacion AS parentesco,
			ResultadoValidacionLiquidacion.rvlValorCuota AS totalDerecho,
			ResultadoValidacionLiquidacion.rvlValorDescuento AS totalDescuentos,
			ResultadoValidacionLiquidacion.rvlValorCuotaAjustada AS totalPagar,
			SolicitudLiquidacion.sllTipoLiquidacionEspecifica AS tipoLiquidacionFallecimiento,
			GestionSubsidioFallecimiento.gsfSubsidioGestionado AS indicadorGestionSubsidio,
			GestionSubsidioFallecimiento.gsfSubsidioConfirmado AS indicadorConfirmacionSubsidio,
			CondicionBeneficiario.cbeCondicionPersona AS idPersonaBeneficiario,
			CondicionTrabajador.ctrCondicionPersona AS idPersonaTrabajador,
			CASE
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario IS NULL THEN 'TRABAJADOR_NO_CUMPLE'
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario IS NOT NULL THEN 'BENEFICIARIO_NO_CUMPLE'
				WHEN ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('DERECHO_ASIGNADO','ASIGNAR_DERECHO') THEN 'BENEFICIARIO_ADMIN_CUMPLEN'
			END AS estadoCumplimiento
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionEmpleador = CondicionEmpleador.cemId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorSubsidio WITH (NOLOCK) ON (CondicionEmpleador.cemCondicionPersona = EmpleadorSubsidio.cpeId
			AND CondicionEmpleador.cemNumeroRadicado = EmpleadorSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorSubsidio.cpeNumeroRadicado)
			LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			LEFT JOIN CondicionPersona AS BeneficiarioSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioSubsidio.cpeNumeroRadicado)
			LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador
			AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionAfiliadoPplBeneficiario.cabNumeroRadicado)
			LEFT JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON (BeneficiarioSubsidio.cpeId = CuotaConsolidadaBeneficiario.ccbCondicionPersonaBeneficiario
			AND BeneficiarioSubsidio.cpeNumeroRadicado = CuotaConsolidadaBeneficiario.ccbNumeroRadicado)
			LEFT JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON (CuotaConsolidadaBeneficiario.ccbCuotaConsolidadaGrupoFamiliar = CuotaConsolidadaGrupoFamiliar.cgfId
			AND CuotaConsolidadaBeneficiario.ccbNumeroRadicado = CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado)
			LEFT JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON (CuotaConsolidadaGrupoFamiliar.cgfDispersionMedioDePagoAdmin = DispersionMedioDePagoAdmin.dmpId
			AND CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado = DispersionMedioDePagoAdmin.dmpNumeroRadicado)
			LEFT JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON DispersionMedioDePagoAdmin.dmpAdministradorSubsidio = AdministradorSubsidioLiquidacion.aslId
			LEFT JOIN CondicionPersona AS AdministradorSubsidio WITH (NOLOCK) ON (AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio = AdministradorSubsidio.cpeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = AdministradorSubsidio.cpeNumeroRadicado)
			LEFT JOIN MedioDePagoLiquidacion WITH (NOLOCK) ON (DispersionMedioDePagoAdmin.dmpMedioDePagoLiquidacion = MedioDePagoLiquidacion.mpgId
			AND DispersionMedioDePagoAdmin.dmpNumeroRadicado = MedioDePagoLiquidacion.mpgNumeroRadicado)
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlNumeroRadicado = SolicitudLiquidacion.sllNumeroRadicacion
			INNER JOIN GestionSubsidioFallecimiento WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = GestionSubsidioFallecimiento.gsfResultadoValidacionLiquidacion
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			  AND GestionSubsidioFallecimiento.gsfSubsidioConfirmado = 1
   		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.actualizar.gestionFallecimiento.beneficiarioConfirmado">
		<description>Consulta que permite actualizar el indicador de confirmaci√≥n para un beneficiario en una liquidaci√≥n de fallecimiento</description>
		<query>
   			UPDATE GestionSubsidioFallecimiento 
			SET GestionSubsidioFallecimiento.gsfSubsidioConfirmado = 1
			FROM ResultadoValidacionLiquidacion, GestionSubsidioFallecimiento
			WHERE GestionSubsidioFallecimiento.gsfResultadoValidacionLiquidacion = ResultadoValidacionLiquidacion.rvlId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = :idCondicionBeneficiario
   		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.actualizar.gestionFallecimiento.confirmar.aporteMinimo">
		<description>Consulta que permite actualizar el indicador de confirmaci√≥n para los beneficiarios en una liquidaci√≥n de fallecimiento</description>
		<query>
   			UPDATE GestionSubsidioFallecimiento 
			SET GestionSubsidioFallecimiento.gsfSubsidioConfirmado = 1
			FROM ResultadoValidacionLiquidacion, GestionSubsidioFallecimiento
			WHERE GestionSubsidioFallecimiento.gsfResultadoValidacionLiquidacion = ResultadoValidacionLiquidacion.rvlId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
   		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.actualizar.gestionFallecimiento.afiliadoConfirmado">
		<description>Consulta que permite actualizar el indicador de confirmaci√≥n para los beneficiarios fallecidos asociados a un afiliado en una liquidaci√≥n de fallecimiento</description>
		<query>
			UPDATE GestionSubsidioFallecimiento
			SET GestionSubsidioFallecimiento.gsfSubsidioConfirmado = 1
			FROM ResultadoValidacionLiquidacion, GestionSubsidioFallecimiento
			WHERE GestionSubsidioFallecimiento.gsfResultadoValidacionLiquidacion = ResultadoValidacionLiquidacion.rvlId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND ResultadoValidacionLiquidacion.rvlCondicionTrabajador = :idCondicionTrabajador
   		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.detalleBeneficiario.subsidioFallecimiento">
		<description>Consulta que permite obtener el detalle de las cuotas proyectas para un beneficiario en una liquidaci√≥n de fallecimiento</description>
		<query>
	SELECT
			min(ProyeccionCuotaFallecimiento.pcfId) AS identificadorProyeccion,
			BeneficiarioSubsidio.cpeRazonSocial AS nombreBeneficiario,
			BeneficiarioSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CondicionAfiliadoPplBeneficiario.cabClasificacion AS parentesco,
			min(ProyeccionCuotaFallecimiento.pcfPeriodo) AS periodoCuotaFallecimiento,
			sum(ProyeccionCuotaFallecimiento.pcfValorCuota) AS cuotaLiquidada,
			sum(ProyeccionCuotaFallecimiento.pcfValorDescuentoPagoCuota) AS descuentoPagoCuota,
			sum(ProyeccionCuotaFallecimiento.pcfValorDescuentoEntidades) AS descuentoEntidades,
			sum(ProyeccionCuotaFallecimiento.pcfValorCuotaAjustada) AS totalPagar,
			PrioridadesEntidadesDescuentoLiquidacion.pedCodigoEntidadDescuento AS codigoEntidad,
			PrioridadesEntidadesDescuentoLiquidacion.pedNombreEntidadDescuento AS nombreEntidad,
			DescuentoEntidad.denValorPignoradoBeneficiario AS descuentoEntidad,
			PeriodoLiquidacionSubsidio.plsPeriodo,
			min(ProyeccionCuotaFallecimiento.pcfValorCuota)
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador
			AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionAfiliadoPplBeneficiario.cabNumeroRadicado)
			INNER JOIN ProyeccionCuotaFallecimiento WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = ProyeccionCuotaFallecimiento.pcfResultadoValidacionLiquidacion
			LEFT JOIN DescuentoEntidad WITH (NOLOCK) ON ProyeccionCuotaFallecimiento.pcfId = DescuentoEntidad.denProyeccionCuotaFallecimiento			
			LEFT JOIN SubsidioMonetarioValorPignorado WITH (NOLOCK) ON DescuentoEntidad.denSubsidiomonetarioValorPignorado = SubsidioMonetarioValorPignorado.smvId
			LEFT JOIN ArchivoEntidadDescuentoSubsidioPignorado AS Archivo WITH (NOLOCK) ON SubsidiomonetarioValorPignorado.smvArchivoEntidadDescuentoSubsidioPignorado = Archivo.ardId
			LEFT JOIN PrioridadesEntidadesDescuentoLiquidacion WITH (NOLOCK) ON (Archivo.ardEntidadDescuento = PrioridadesEntidadesDescuentoLiquidacion.pedEntidadDescuento
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = PrioridadesEntidadesDescuentoLiquidacion.pedNumeroRadicacion)
			INNER JOIN PeriodoLiquidacionSubsidio WITH (NOLOCK) ON  ResultadoValidacionLiquidacion.rvlNumeroRadicado = PeriodoLiquidacionSubsidio.plsNumeroRadicado
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND CondicionBeneficiario.cbeId = :idCondicionBeneficiario
			GROUP BY BeneficiarioSubsidio.cpeRazonSocial,
			BeneficiarioSubsidio.cpeTipoIdentificacion,
			BeneficiarioSubsidio.cpeNumeroIdentificacion,
			CondicionAfiliadoPplBeneficiario.cabClasificacion,
			PrioridadesEntidadesDescuentoLiquidacion.pedCodigoEntidadDescuento,
			PrioridadesEntidadesDescuentoLiquidacion.pedNombreEntidadDescuento,
			DescuentoEntidad.denValorPignoradoBeneficiario,
			PeriodoLiquidacionSubsidio.plsPeriodo,
			ResultadoValidacionLiquidacion.rvlValorCuotaAjustada
   		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultarProyeccionSubsidio.por.numeroRadicacion">
		<description>Consulta que permite obtener las cuotas proyectadas de una liquidacion de fallecimiento por numero de radicado</description>
		<query>
			SELECT	min(CondicionBeneficiario.cbeId) AS condicionBeneficiario,
			min(cpeAdmin.cpeId) AS condicionTrabajador,
			cpeAdmin.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			cpeAdmin.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			cpeAdmin.cpeRazonSocial AS nombreAdministrador,
			b.banNombre,
			mpl.mpgTipoCuenta,
			mpl.mpgNumeroCuenta,
			mpl.mpgNombreTitularCuenta,
			BeneficiarioSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			BeneficiarioSubsidio.cpeRazonSocial AS nombreBeneficiario,
			min(ProyeccionCuotaFallecimiento.pcfPeriodo) AS periodoCuotaFallecimiento,
			sum(ProyeccionCuotaFallecimiento.pcfValorCuotaAjustada) AS totalPagar,
			CONCAT(REPLICATE('*',LEN(LEFT(met.mtrNumeroTarjeta, LEN(met.mtrNumeroTarjeta) - 4))), RIGHT(met.mtrNumeroTarjeta,4)) AS numeroTarjeta,
			met.mtrEstadoTarjetaMultiservicios AS estadoTarjeta
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioSubsidio WITH (NOLOCK) ON (CondicionBeneficiario.cbeCondicionPersona = BeneficiarioSubsidio.cpeId
			AND CondicionBeneficiario.cbeNumeroRadicado = BeneficiarioSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorSubsidio WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = TrabajadorSubsidio.cpeId
			AND CondicionTrabajador.ctrNumeroRadicado = TrabajadorSubsidio.cpeNumeroRadicado)
			INNER JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador
			AND ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionAfiliadoPplBeneficiario.cabNumeroRadicado)
			INNER JOIN ProyeccionCuotaFallecimiento WITH (NOLOCK) ON ResultadoValidacionLiquidacion.rvlId = ProyeccionCuotaFallecimiento.pcfResultadoValidacionLiquidacion
			LEFT JOIN DescuentoEntidad WITH (NOLOCK) ON ProyeccionCuotaFallecimiento.pcfId = DescuentoEntidad.denProyeccionCuotaFallecimiento			
			LEFT JOIN SubsidioMonetarioValorPignorado WITH (NOLOCK) ON DescuentoEntidad.denSubsidiomonetarioValorPignorado = SubsidioMonetarioValorPignorado.smvId
			LEFT JOIN ArchivoEntidadDescuentoSubsidioPignorado AS Archivo WITH (NOLOCK) ON SubsidiomonetarioValorPignorado.smvArchivoEntidadDescuentoSubsidioPignorado = Archivo.ardId
			LEFT JOIN PrioridadesEntidadesDescuentoLiquidacion WITH (NOLOCK) ON (Archivo.ardEntidadDescuento = PrioridadesEntidadesDescuentoLiquidacion.pedEntidadDescuento
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = PrioridadesEntidadesDescuentoLiquidacion.pedNumeroRadicacion)
			INNER JOIN PeriodoLiquidacionSubsidio WITH (NOLOCK) ON  ResultadoValidacionLiquidacion.rvlNumeroRadicado = PeriodoLiquidacionSubsidio.plsNumeroRadicado
			INNER JOIN dbo.CuotaConsolidadaBeneficiario ccb ON (ccb.ccbCondicionPersonaBeneficiario = BeneficiarioSubsidio.cpeId
															AND ccb.ccbNumeroRadicado = BeneficiarioSubsidio.cpeNumeroRadicado)
			INNER JOIN dbo.CuotaConsolidadaGrupoFamiliar ccg ON (ccg.cgfId = ccb.ccbCuotaConsolidadaGrupoFamiliar
															AND ccg.cgfNumeroRadicado = ccb.ccbNumeroRadicado
															AND TrabajadorSubsidio.cpeId = ccg.cgfCondicionPersonaTrabajador)
			INNER JOIN dbo.DispersionMedioDePagoAdmin dmp ON (dmp.dmpId = ccg.cgfDispersionMedioDePagoAdmin
															AND dmp.dmpNumeroRadicado = ccg.cgfNumeroRadicado)
			INNER JOIN dbo.MedioDePagoLiquidacion mpl ON (mpl.mpgId = dmp.dmpMedioDePagoLiquidacion)
			LEFT JOIN dbo.Banco b on b.banCodigo = mpl.mpgCodigoBanco 
			INNER JOIN dbo.AdministradorSubsidioLiquidacion asl ON (asl.aslId = dmp.dmpAdministradorSubsidio)
			INNER JOIN dbo.CondicionPersona cpeAdmin ON cpeAdmin.cpeId = asl.aslCondicionPersonaAdministradorSubisidio AND cpeAdmin.cpeNumeroRadicado = asl.aslNumeroRadicado 
			LEFT JOIN MedioTarjeta met ON mpl.mpgMedioDePago = met.mdpId
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			AND cpeAdmin.cpeId = :identificadorCondicion
		GROUP BY
			cpeAdmin.cpeTipoIdentificacion,
			cpeAdmin.cpeNumeroIdentificacion,
			cpeAdmin.cpeRazonSocial,
			b.banNombre,
			mpl.mpgTipoCuenta,
			mpl.mpgNumeroCuenta,
			mpl.mpgNombreTitularCuenta,
			BeneficiarioSubsidio.cpeTipoIdentificacion,
			BeneficiarioSubsidio.cpeNumeroIdentificacion,
			BeneficiarioSubsidio.cpeRazonSocial,
			met.mtrNumeroTarjeta,
			met.mtrEstadoTarjetaMultiservicios		
			ORDER BY condicionBeneficiario, periodoCuotaFallecimiento
   		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.estadoDerechoLiquidacion.beneficiario">
		<description> Consulta para determinar el resultado de un estado de derecho para un beneficiario en un periodo especifico </description>
		<query>
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroDocumento
				and perTipoIdentificacion = :tipoDocumento
			)
		
			SELECT TOP 1 rvl.rvlEstadoDerechoLiquidacion  
			FROM dbo.ResultadoValidacionLiquidacion rvl WITH (NOLOCK)
			INNER JOIN dbo.CondicionBeneficiario cbe WITH (NOLOCK) ON (rvl.rvlCondicionBeneficiario = cbe.cbeId 
			AND rvl.rvlNumeroRadicado = cbe.cbeNumeroRadicado)
			INNER JOIN dbo.CondicionPersona cpe WITH (NOLOCK) ON (cbe.cbeCondicionPersona = cpe.cpeId 
			AND cbe.cbeNumeroRadicado = cpe.cpeNumeroRadicado)
			WHERE cpe.cpePersona   in (select perId from Per)
			ORDER BY rvl.rvlId DESC
			<!-- AND cbe.cbePeriodo = :periodo -->
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.condicionesPersonas.liquidacion">
		<description> Consulta que permite obtener la informaci√≥n de la condici√≥n de las personas en un proceso de liquidaci√≥n </description>
		<query>
			SELECT
			CondicionPersona.cpeId AS idCondicionPersona,
			CondicionPersona.cpeTipoIdentificacion AS tipoIdentificacion,
			CondicionPersona.cpeNumeroIdentificacion AS numeroIdentificacion,
			CondicionPersona.cpeRazonSocial AS razonSocial,
			CondicionPersona.cpePrimerNombre AS primerNombre,
			CondicionPersona.cpePrimerApellido AS primerApellido,
			CondicionPersona.cpeSegundoNombre AS segundoNombre,
			CondicionPersona.cpeSegundoApellido AS segundoApellido
			FROM CondicionPersona WITH (NOLOCK)
			WHERE CondicionPersona.cpeNumeroRadicado = :numeroRadicacion
			AND CondicionPersona.cpeId IN (:identificadoresCondiciones)
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.condicionesEntidadesDescuento.liquidacion">
		<description> Consulta que permite obtener la informaci√≥n de la condici√≥n de las entidades de desuento en un proceso de liquidaci√≥n </description>
		<query>
			SELECT
			PrioridadesEntidadesDescuentoLiquidacion.pedId AS idCondicionEntidad,
			PrioridadesEntidadesDescuentoLiquidacion.pedNombreEntidadDescuento AS nombreEntidad
			FROM PrioridadesEntidadesDescuentoLiquidacion
			WHERE PrioridadesEntidadesDescuentoLiquidacion.pedNumeroRadicacion = :numeroRadicacion
			AND PrioridadesEntidadesDescuentoLiquidacion.pedId IN (:identificadoresCondiciones)
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.periodoFallecimiento.afiliado">
		<description> Consulta que permite obtener la fecha de fallecimiento del afiliado principal </description>
		<query>
			SELECT CondicionTrabajador.ctrFechaFallecimiento
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY CondicionTrabajador.ctrFechaFallecimiento
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.periodoFallecimiento.beneficiario">
		<description> Consulta que permite obtener la fecha de fallecimiento del beneficiario(s) </description>
		<query>
			SELECT TOP 1 CondicionBeneficiario.cbeFechaFallecimiento
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
			AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.estadoAporte.afiliado">
		<description> Consulta que permite obtener el estado del aporte para el afiliado en la liquidaci√≥n de fallecimiento </description>
		<query>
			SELECT 
			CASE WHEN 'OK' IN
				(SELECT CondicionEmpleadorTrabajador.cetAportesOK AS estadoAporte
				FROM CondicionPersona WITH (NOLOCK)
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionPersona.cpeId = CondicionTrabajador.ctrCondicionPersona
				AND CondicionPersona.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				INNER JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = CondicionEmpleadorTrabajador.cetCondicionTrabajador
				AND CondicionTrabajador.ctrNumeroRadicado = CondicionEmpleadorTrabajador.cetNumeroRadicado)
				WHERE CondicionPersona.cpeId = (SELECT CondicionPersona.cpeId AS identificadorPersona
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				INNER JOIN CondicionPersona WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = CondicionPersona.cpeId
				AND CondicionTrabajador.ctrNumeroRadicado = CondicionPersona.cpeNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlId = (SELECT TOP 1 ResultadoValidacionLiquidacion.rvlId
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion))
				AND CondicionTrabajador.ctrPeriodo = CAST (:periodo AS DATE)
				GROUP BY CondicionEmpleadorTrabajador.cetAportesOK)
			THEN 'OK'
				WHEN 'NO_OK' IN
				(SELECT CondicionEmpleadorTrabajador.cetAportesOK AS estadoAporte
				FROM CondicionPersona WITH (NOLOCK)
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionPersona.cpeId = CondicionTrabajador.ctrCondicionPersona
				AND CondicionPersona.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				INNER JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = CondicionEmpleadorTrabajador.cetCondicionTrabajador
				AND CondicionTrabajador.ctrNumeroRadicado = CondicionEmpleadorTrabajador.cetNumeroRadicado)
				WHERE CondicionPersona.cpeId = (SELECT CondicionPersona.cpeId AS identificadorPersona
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				INNER JOIN CondicionPersona WITH (NOLOCK) ON (CondicionTrabajador.ctrCondicionPersona = CondicionPersona.cpeId
				AND CondicionTrabajador.ctrNumeroRadicado = CondicionPersona.cpeNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlId = (SELECT TOP 1 ResultadoValidacionLiquidacion.rvlId
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion))
				AND CondicionTrabajador.ctrPeriodo = CAST (:periodo AS DATE)
				GROUP BY CondicionEmpleadorTrabajador.cetAportesOK)
			THEN 'NO_OK'
			ELSE 'SIN_INFORMACION'
			END AS estadoAporteAfiliado 
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.estadoAfiliacionFechaDefuncion.beneficiario">
		<description> HU-317-506: C6 (Liquidaci√≥n no procedente ‚Äì Beneficiario): Validar que el beneficiario al menos al d√≠a anterior 
			a la ‚ÄúFecha de defunci√≥n‚Äù tenga ‚ÄúEstado de afiliaci√≥n con respecto al afiliado principal‚Äù igual a ‚ÄúActivo‚Äù:
		</description>
		<query>
			SELECT cab.cabActivoAntesFallecimiento 
			FROM staging.CondicionPersona cpe WITH (NOLOCK)
			INNER JOIN staging.CondicionBeneficiario cbe ON (cbe.cbeCondicionPersona = cpe.cpeId)
			INNER JOIN staging.CondicionAfiliadoPplBeneficiario cab ON (cbe.cbeId = cab.cabCondicionBeneficiario)
			INNER JOIN staging.CondicionTrabajador cnt ON (cnt.ctrId = cab.cabCondicionTrabajador)
			INNER JOIN staging.CondicionPersona cnp ON (cnp.cpeId = cnt.ctrCondicionPersona)
			WHERE cpe.cpeNumeroIdentificacion = :numeroDocumento
			AND cpe.cpeTipoIdentificacion = :tipoDocumento
			AND cbe.cbePeriodo = :periodo	
			AND cnp.cpePersona = :idPersona		
		</query>	
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultar.subsidio.fallecimiento.beneficiario">
		<query>
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroIdentificacion
				and perTipoIdentificacion = :tipoIdentificacion
			)
			
			SELECT CASE when exists (
				SELECT 1 
					FROM dbo.ResultadoValidacionLiquidacion rvl with(nolock)
					INNER JOIN dbo.CondicionTrabajador ctr with(nolock) ON ctr.ctrId = rvl.rvlCondicionTrabajador AND ctr.ctrNumeroRadicado = rvl.rvlNumeroRadicado
					INNER JOIN dbo.CondicionPersona cpt with(nolock) ON cpt.cpeId = ctr.ctrCondicionPersona AND ctr.ctrNumeroRadicado = cpt.cpeNumeroRadicado
					INNER JOIN dbo.CondicionBeneficiario cbe with(nolock) ON cbe.cbeId = rvl.rvlCondicionBeneficiario AND cbe.cbeNumeroRadicado = rvl.rvlNumeroRadicado
					INNER JOIN dbo.CondicionPersona cpb with(nolock) ON cpb.cpeId = cbe.cbeCondicionPersona AND cbe.cbeNumeroRadicado = cpb.cpeNumeroRadicado
					INNER JOIN dbo.SolicitudLiquidacion with(nolock) ON rvlnumeroradicado = sllNumeroRadicacion
					INNER JOIN dbo.PersonaDetalle with(nolock) ON cpb.cpePersona = pedPersona
					WHERE rvl.rvlEstadoDerechoLiquidacion IN ('DERECHO_ASIGNADO','ASIGNAR_DERECHO') 	
					AND cpt.cpePersona in (select perId from Per)
					AND cpb.cpePersona in (select perId from Per)	
					AND sllTipoLiquidacion IN ('MASIVA','RECONOCIMIENTO_DE_SUBSIDIOS')
					AND DATEADD(DAY, 1, EOMONTH(pedFechaDefuncion, -1)) = cbeperiodo ) THEN 1 ELSE 0
			END AS cumpleSubsidioPeriodoFallecimiento
		</query>	
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultar.beneficiarioActvoAlMorirAfiliado.trabajador">
		<description> HU-317-503: C5 (Liquidaci√≥n no procedente): Validar que exista al menos un beneficiario distinto 
			a ‚ÄúC√≥nyuge‚Äù, que al d√≠a anterior al fallecimiento del afiliado tenga ‚ÄúEstado con respecto al afiliado principal‚Äù 
			igual a ‚ÄúActivo‚Äù
		</description>
		<query>
			SELECT COUNT(*)
			FROM staging.CondicionPersona cpe WITH (NOLOCK)
			INNER JOIN staging.CondicionTrabajador ctr WITH (NOLOCK) ON (ctr.ctrCondicionPersona = cpe.cpeId)
			INNER JOIN staging.CondicionAfiliadoPplBeneficiario cab WITH (NOLOCK) ON (ctr.ctrId = cab.cabCondicionTrabajador)
			INNER JOIN staging.CondicionBeneficiario cbe WITH (NOLOCK) ON (cbe.cbeId = cab.cabCondicionBeneficiario)
			WHERE cpe.cpeNumeroIdentificacion = :numeroDocumento
			AND cpe.cpeTipoIdentificacion = :tipoDocumento
			AND ctr.ctrPeriodo = :periodo
			AND (
				(cab.cabActivoAntesFallecimiento = 0 AND cbe.cbeFechaFallecimiento IS NULL) OR
				(cab.cabActivoAntesFallecimiento = 1 AND cbe.cbeFechaFallecimiento IS NOT NULL)
				)
		</query>	
	</named-native-query>	
	
	<named-native-query name="SubsidioMonetario.consultar.validacionFallida.personaFallecimiento">
		<description>Consulta que permite obtener la informaci√≥n de la validaci√≥n fallida para una persona en el proceso de liquidaci√≥n</description>
		<query>
			SELECT AplicacionValidacionSubsidio.avsTipoValidacion
			FROM AplicacionValidacionSubsidio
			WHERE AplicacionValidacionSubsidio.avsNumeroRadicado = :numeroRadicacion
			AND AplicacionValidacionSubsidio.avsBeneficiario = :condicionPersona
		</query>	
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.validacionFallida.persona">
		<description>Consulta que permite obtener la informaci√≥n de la validaci√≥n fallida par aun n√∫mero de radicado en el proceso de liquidaci√≥n</description>
		<query>
			SELECT AplicacionValidacionSubsidio.avsTipoValidacion
			FROM AplicacionValidacionSubsidio
			WHERE AplicacionValidacionSubsidio.avsNumeroRadicado = :numeroRadicacion
			AND AplicacionValidacionSubsidio.avsTipoValidacion = :tipoValidacion
		</query>	
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.condicionPersonaPorRadicacion">
		<description>Consulta que permite obtener la informaci√≥n de la validaci√≥n fallida par aun n√∫mero de radicado en el proceso de liquidaci√≥n</description>
		<query>
			SELECT ct.ctrCondicionPersona 
			FROM ResultadoValidacionLiquidacion rvl 
			JOIN CondicionTrabajador ct on ct.ctrId = rvl.rvlCondicionTrabajador 
			WHERE rvl.rvlNumeroRadicado = :numeroRadicacion
		</query>	
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.identificadorPersona.core">
		<description>Consulta que permite obtener el identificador de la persona en core</description>
		<query>
			SELECT CondicionPersona.cpePersona
			FROM CondicionPersona WITH (NOLOCK)
			WHERE CondicionPersona.cpeNumeroRadicado = :numeroRadicacion
			AND CondicionPersona.cpeId = :condicionPersona
		</query>	
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.comunicado63.masivo.dispersion.pagos.empleador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 63</description>
		<query>
			SELECT 
				a.cpePersona, trabajadores, valorCuota, periodo
			FROM 
				(SELECT cpePersona, COUNT(DISTINCT ctrCondicionPersona) AS trabajadores, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON cemCondicionPersona = cpeId AND cemNumeroRadicado = cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona) AS a,
				(SELECT cpePersona, cemPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON cemCondicionPersona = cpeId AND cemNumeroRadicado = cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona, cemPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.numero.valores.comunicado63.masivo.dispersion.pagos.empleador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 63</description>
		<query>
			SELECT 
				COUNT(*)
			FROM 
				(SELECT cpePersona, COUNT(DISTINCT ctrCondicionPersona) AS trabajadores, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON cemCondicionPersona = cpeId AND cemNumeroRadicado = cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona) AS a,
				(SELECT cpePersona, cemPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON cemCondicionPersona = cpeId AND cemNumeroRadicado = cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona, cemPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.comunicado64.masivo.dispersion.pagos.trabajador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 64</description>
		<query>
			SELECT 
				a.cpePersona, beneficiarios, valorCuota, periodo
			FROM 
				(SELECT cpePersona, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON ctrCondicionPersona = cpeId AND ctrNumeroRadicado = cpeNumeroRadicado
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona) AS a,
				(SELECT cpePersona, ctrPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON ctrCondicionPersona = cpeId AND ctrNumeroRadicado = cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona, ctrPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.numero.valores.comunicado64.masivo.dispersion.pagos.trabajador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 64</description>
		<query>
			SELECT 
				COUNT(*)
			FROM 
				(SELECT cpePersona, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON ctrCondicionPersona = cpeId AND ctrNumeroRadicado = cpeNumeroRadicado
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona) AS a,
				(SELECT cpePersona, ctrPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona WITH (NOLOCK) ON ctrCondicionPersona = cpeId AND ctrNumeroRadicado = cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY cpePersona, ctrPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.comunicado65.masivo.dispersion.pagos.admin">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 65, 75 y 78</description>
		<query>
			SELECT 
				a.cpePersona, beneficiarios, valorCuota, periodo
			FROM 
				(SELECT pa.cpePersona, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
						INNER JOIN CondicionPersona pb WITH (NOLOCK) ON cbeCondicionPersona = pb.cpeId AND cbeNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON ccbCondicionPersonaBeneficiario = pb.cpeId AND ccbNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON ccbCuotaConsolidadaGrupoFamiliar = cgfId AND ccbNumeroRadicado = cgfNumeroRadicado
						INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON cgfDispersionMedioDePagoAdmin = dmpId AND cgfNumeroRadicado = dmpNumeroRadicado
						INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON dmpAdministradorSubsidio = aslId AND dmpNumeroRadicado = aslNumeroRadicado				
						INNER JOIN CondicionPersona pa WITH (NOLOCK) ON aslCondicionPersonaAdministradorSubisidio = pa.cpeId AND aslNumeroRadicado = pa.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND cbeNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
						AND pt.cpeId = cgfCondicionPersonaTrabajador
					GROUP BY pa.cpePersona) AS a,
				(SELECT pa.cpePersona, cbePeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
						INNER JOIN CondicionPersona pb WITH (NOLOCK) ON cbeCondicionPersona = pb.cpeId AND cbeNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON ccbCondicionPersonaBeneficiario = pb.cpeId AND ccbNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON ccbCuotaConsolidadaGrupoFamiliar = cgfId AND ccbNumeroRadicado = cgfNumeroRadicado
						INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON cgfDispersionMedioDePagoAdmin = dmpId AND cgfNumeroRadicado = dmpNumeroRadicado
						INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON dmpAdministradorSubsidio = aslId AND dmpNumeroRadicado = aslNumeroRadicado				
						INNER JOIN CondicionPersona pa WITH (NOLOCK) ON aslCondicionPersonaAdministradorSubisidio = pa.cpeId AND aslNumeroRadicado = pa.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND cbeNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
						AND pt.cpeId = cgfCondicionPersonaTrabajador
					GROUP BY pa.cpePersona, cbePeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.numero.valores.comunicado65.masivo.dispersion.pagos.admin">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 65, 75 y 78</description>
		<query>
			SELECT 
				COUNT(*)
			FROM 
				(SELECT pa.cpePersona, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
						INNER JOIN CondicionPersona pb WITH (NOLOCK) ON cbeCondicionPersona = pb.cpeId AND cbeNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON ccbCondicionPersonaBeneficiario = pb.cpeId AND ccbNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON ccbCuotaConsolidadaGrupoFamiliar = cgfId AND ccbNumeroRadicado = cgfNumeroRadicado
						INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON cgfDispersionMedioDePagoAdmin = dmpId AND cgfNumeroRadicado = dmpNumeroRadicado
						INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON dmpAdministradorSubsidio = aslId AND dmpNumeroRadicado = aslNumeroRadicado				
						INNER JOIN CondicionPersona pa WITH (NOLOCK) ON aslCondicionPersonaAdministradorSubisidio = pa.cpeId AND aslNumeroRadicado = pa.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND cbeNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
						AND pt.cpeId = cgfCondicionPersonaTrabajador
					GROUP BY pa.cpePersona) AS a,
				(SELECT pa.cpePersona, cbePeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
						INNER JOIN CondicionPersona pb WITH (NOLOCK) ON cbeCondicionPersona = pb.cpeId AND cbeNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON ccbCondicionPersonaBeneficiario = pb.cpeId AND ccbNumeroRadicado = pb.cpeNumeroRadicado
						INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON ccbCuotaConsolidadaGrupoFamiliar = cgfId AND ccbNumeroRadicado = cgfNumeroRadicado
						INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON cgfDispersionMedioDePagoAdmin = dmpId AND cgfNumeroRadicado = dmpNumeroRadicado
						INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON dmpAdministradorSubsidio = aslId AND dmpNumeroRadicado = aslNumeroRadicado				
						INNER JOIN CondicionPersona pa WITH (NOLOCK) ON aslCondicionPersonaAdministradorSubisidio = pa.cpeId AND aslNumeroRadicado = pa.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND cbeNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
						AND pt.cpeId = cgfCondicionPersonaTrabajador
					GROUP BY pa.cpePersona, cbePeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.comunicado_74_77.fallecimiento.dispersion.pagos.trabajador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 74 y 77</description>
		<query>
			SELECT 
				CASE
					WHEN a.sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' AND a.cpePersonaConyuge IS NOT NULL THEN a.cpePersonaConyuge
				ELSE
					a.cpePersona
				END, 
				beneficiarios, valorCuota, periodo
			FROM 
				(SELECT pt.cpePersona, pc.cpePersona AS cpePersonaConyuge, sllTipoLiquidacionEspecifica, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND ctrNumeroRadicado = pt.cpeNumeroRadicado
						LEFT JOIN CondicionPersona pc WITH (NOLOCK) ON ctrCondicionPersonaConyuge = pc.cpeId AND ctrNumeroRadicado = pc.cpeNumeroRadicado
						INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON ctrNumeroRadicado = sllNumeroRadicacion
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY pt.cpePersona, pc.cpePersona, sllTipoLiquidacionEspecifica) AS a,
				(SELECT pt.cpePersona, ctrPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND ctrNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY pt.cpePersona, ctrPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.numero.valores.comunicado_74_77.fallecimiento.dispersion.pagos.trabajador">
		<description>Consulta que permite obtener la informaci√≥n relacionada con el comunicado 74 y 77</description>
		<query>
			SELECT 
					COUNT(*)
			FROM 
				(SELECT pt.cpePersona, pc.cpePersona AS cpePersonaConyuge, sllTipoLiquidacionEspecifica, COUNT(DISTINCT cbeCondicionPersona) AS beneficiarios, CAST(SUM(rvlValorCuota) AS NUMERIC) AS valorCuota
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND ctrNumeroRadicado = pt.cpeNumeroRadicado
						LEFT JOIN CondicionPersona pc WITH (NOLOCK) ON ctrCondicionPersonaConyuge = pc.cpeId AND ctrNumeroRadicado = pc.cpeNumeroRadicado
						INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON ctrNumeroRadicado = sllNumeroRadicacion
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado 
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY pt.cpePersona, pc.cpePersona, sllTipoLiquidacionEspecifica) AS a,
				(SELECT pt.cpePersona, ctrPeriodo as periodo
					FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
						INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND ctrNumeroRadicado = pt.cpeNumeroRadicado
					WHERE rvlNumeroRadicado = :numeroRadicacion
						AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
					GROUP BY pt.cpePersona, ctrPeriodo) AS b
			WHERE a.cpePersona = b.cpePersona
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.comunicado_74_75_77_78.fallecimiento.dispersion.pagos">
		<description>Consulta que permite obtener el nombre del fallecido para el comunicado 74, 75, 77 y 78</description>
		<query>
			SELECT DISTINCT pt.cpePersona, 
				CASE
					WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' THEN pt.cpeRazonSocial
				ELSE
					pb.cpeRazonSocial
				END AS nombre
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado 
				INNER JOIN CondicionPersona pt WITH (NOLOCK) ON ctrCondicionPersona = pt.cpeId AND ctrNumeroRadicado = pt.cpeNumeroRadicado
				INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado
				INNER JOIN CondicionPersona pb WITH (NOLOCK) ON cbeCondicionPersona = pb.cpeId AND cbeNumeroRadicado = pb.cpeNumeroRadicado
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON ctrNumeroRadicado = sllNumeroRadicacion
			WHERE rvlNumeroRadicado = :numeroRadicacion
				AND rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO'
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.porcentajeAvance.liquidacion">
		<description>Consulta que permite obtener el porcentaje de avance sobre el proceso de liquidaci√≥n</description>
		<query>
			SELECT aplPorcentaje FROM AvanceProcesoLiquidacion WITH (NOLOCK) WHERE aplNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.registrar.cancelacion.procesoLiquidacion">
		<description>Consulta que permite realizar el registro de cancelaci√≥n sobre un proceso de liquidaci√≥n</description>
		<query>
			UPDATE AvanceProcesoLiquidacion SET aplCancelado = 1 WHERE aplNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.cancelacion.procesoLiquidacion">
		<description>Consulta que permite determinar si se efectu√≥ la cancelaci√≥n de un proceso de liquidaci√≥n</description>
		<query>
			SELECT aplCancelado FROM AvanceProcesoLiquidacion WHERE aplNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.avance.proceso.liquidacion">
		<description>Consulta que permite obtener el porcentaje de avance sobre el proceso de liquidaci√≥n</description>
		<query>
			SELECT aplId ,
			aplPorcentaje ,
			aplTipoLiquidacion ,
			aplTipoLiquidacionEspecifica ,
			aplCancelado ,
			aplFechaInicio ,
			aplFechaFin 
			FROM AvanceProcesoLiquidacion WITH (NOLOCK) 
			WHERE aplNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.trabadorActivo.alFallecerBeneficiario.hu506.caso3">
		<description>Consulta que permite saber si el trabajador estuvo al menos un d√≠a activo en el periodo en el cual fallece el o los beneficiarios</description>
		<query>
			SELECT CASE WHEN 
			EXISTS(
				SELECT 1
				FROM subsidio.staging.CondicionPersona cPer
				INNER JOIN subsidio.staging.CondicionTrabajador cTra ON cPer.cpeId = cTra.ctrCondicionPersona
				INNER JOIN subsidio.staging.CondicionAfiliadoPplBeneficiario cAfiBen ON cPer.cpeId = cAfiBen.cabCondicionPersonaSegundoAfiliadoPpal
				WHERE CONVERT(VARCHAR(7), cTra.ctrPeriodo) = CONVERT(VARCHAR(7),:fechaFallecimiento)
				AND cAfiBen.cabActivoAlMenosUnDia = 1 
				AND cPer.cpePersona = :idTrabajador
				UNION
				SELECT 1
				FROM subsidio.staging.CondicionPersona cPer
				INNER JOIN subsidio.staging.CondicionTrabajador cTra ON cPer.cpeId = cTra.ctrCondicionPersona
				INNER JOIN subsidio.staging.CondicionAfiliadoPplBeneficiario cAfiBen ON cAfiBen.cabCondicionTrabajador = cTra.ctrId
				WHERE CONVERT(VARCHAR(7), cTra.ctrPeriodo) = CONVERT(VARCHAR(7),:fechaFallecimiento)
				AND cAfiBen.cabActivoAlMenosUnDia = 1 
				AND cPer.cpePersona = :idTrabajador  
			)THEN 0 ELSE 1 END;
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.consultar.admonSubsidio.porBeneficiario.hu506.caso9">
		<query>
		SELECT CASE WHEN EXISTS (
			SELECT 1
			FROM Beneficiario ben
			INNER JOIN GrupoFamiliar GF ON ben.benGrupoFamiliar = GF.grfId
			INNER JOIN AdminSubsidioGrupo ASG ON GF.grfId = ASG.asgGrupoFamiliar
			INNER JOIN Persona per ON per.perId = ben.benPersona
			WHERE per.perTipoIdentificacion = :tipoDocumentoBeneficiario
			AND per.perNumeroIdentificacion = :numeroIdentificacionBeneficiario
		) THEN 0 ELSE 1 END AS TieneAdmin
		</query>
	</named-native-query>
	<named-native-query name="SubsidioMonetario.registrar.avance.procesoLiquidacion">
		<description>Consulta que permite realizar el registro de cancelaci√≥n sobre un proceso de liquidaci√≥n</description>
		<query>
			INSERT INTO AvanceProcesoLiquidacion(aplPorcentaje, aplTipoLiquidacion, aplNumeroRadicado, aplCancelado) VALUES (0, 'MASIVA', :numeroRadicacion, 0);
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.registrar.inicio.procesoEliminacion">
		<description>Consulta que permite realizar el registro de cancelaci√≥n sobre un proceso de liquidaci√≥n</description>
		<query>
			INSERT INTO ProcesoEliminacion(preEjecucionDateTime,preNumeroRadicado) VALUES (:fechaInicio,:numeroRadicado)
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.insertar.bloqueo.afiliado.relacion.beneficiario">
		<description>Consulta que permite insertar el bloqueo para un beneficiario con relacion al afiliado</description>
		<query>
			INSERT INTO BloqueoAfiliadoBeneficiarioCM(
				babTipoIdentificacionAfiliado, 
				babNumeroIdentificacionAfiliado, 
				babPersonaAfiliado, 
				babTipoIdentificacionBeneficiario, 
				babNumeroIdentificacionBeneficiario, 
				babPersonaBeneficiario, 
				babMotivoNoAcreditado, 
				babMotivoFraude, 
				babMotivoOtro, 
				babBloqueado, 
				babPeriodoInicio, 
				babPeriodoFin,
				babBbcId,
				babCausalBloqueo
			) VALUES (
				:tipoIdentificacionAfiliado, 
				:numeroIdentificacionAfiliado, 
				:personaAfiliado, 
				:tipoIdentificacionBeneficiario, 
				:numeroIdentificacionBeneficiario, 
				:personaBeneficiario, 
				:motivoNoAcreditado, 
				:motivoFraude, 
				:motivoOtro, 
				:bloqueado, 
				:periodoInicio, 
				:periodoFin,
				:bbcId,
				:causalBloqueo
			);
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultarBeneficiariosAfiliadoDistinct.beneficiario">
		<description>Consulta los beneficiarios de un afiliado, sin empleador, esta consulta arroja los resultados
		que se muestran en pantalla para seleccion</description>
		<query>
			SELECT DISTINCT new com.asopagos.dto.subsidiomonetario.liquidacion.BeneficiariosAfiliadoDTO
			(
				per.tipoIdentificacion,
				per.numeroIdentificacion,
				per.primerNombre,
				per.segundoNombre,
				per.primerApellido,
				per.segundoApellido,
				ben.tipoBeneficiario,
				ben.grupoFamiliar.idGrupoFamiliar,
				ben.estadoBeneficiarioAfiliado,
				ben.idBeneficiario,
				ben.afiliado.idAfiliado,
				ben.idBeneficiarioDetalle,
				pde.fechaFallecido				
			)
			FROM Beneficiario ben, RolAfiliado roa, Persona per, Afiliado afi, PersonaDetalle pde
			WHERE ben.afiliado.idAfiliado = afi.idAfiliado
			AND afi.idAfiliado = roa.afiliado.idAfiliado
			AND per.idPersona = ben.persona.idPersona
			AND roa.tipoAfiliado IN (:tipoAfiliado)			
			AND (:idPersona IS NULL OR afi.persona.idPersona = (:idPersona))
			AND pde.idPersona = per.idPersona
			AND ben.tipoBeneficiario &lt;&gt; com.asopagos.enumeraciones.personas.TipoBeneficiarioEnum.CONYUGE
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.vista360.empleador.liquidacion">
		<description>Consulta que permite realizar la consulta del proceso de liquidaci√≥n por empleador</description>
		<query>
	DECLARE @F as table (
		cbenumeroradicado varchar(100),
		periodofallecimientoBeneficiario date
		);
		DECLARE @E as table (
		ctrNumeroradicado varchar(100),
		periodofallecimiento date
		);

		DECLARE @D as table (
		rvlnumeroradicado varchar(100),
		montoliquidado numeric(15,5),
		montodescontado numeric(15,5),
		montoparaPago numeric(15,5)
		);
		DECLARE @C as table (
		rvlnumeroradicado varchar(100),
		numerotrabajadores  bigint
		);

		DECLARE @Razon as table (
		rvlnumeroradicado varchar(100),
		rvlresultadocausal varchar(max),
		ID  bigint
		);
		DECLARE @A as table (
		slltipoliquidacion varchar(100),
		slltipoliquidacionespecifica varchar(100),
		rvlnumeroradicado varchar(100) INDEX IX1 NONCLUSTERED,
		sllfechainicio datetime,
		cumple varchar(10),
		razon varchar(200)
		);
		DECLARE @B AS TABLE (
		rvlnumeroradicado varchar(100),
		periodo date)


		DECLARE @perid bigint
		SELECT @perid = perId  
		FROM Persona
		WHERE perTipoIdentificacion =:tipoIdentificacion
		AND perNumeroIdentificacion = :numeroIdentificacion


		INSERT INTO @B(rvlnumeroradicado, periodo)
      	SELECT
            rvlNumeroRadicado,
            CONVERT (VARCHAR(10), MAX(plsPeriodo)) AS periodo
		
        FROM
            ResultadoValidacionLiquidacion WITH (NOLOCK)
            INNER JOIN PeriodoLiquidacionSubsidio ON plsNumeroRadicado = rvlNumeroRadicado
            INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId
            AND cemNumeroRadicado = rvlNumeroRadicado
            INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId
            AND cemNumeroRadicado = cpe.cpeNumeroRadicado
        WHERE
            plsTipoPeriodo = 'REGULAR'
            AND cpePersona =@perid
        GROUP BY
            rvlNumeroRadicado

		INSERT INTO @C(rvlnumeroradicado, numerotrabajadores)
 		SELECT
            rvlNumeroRadicado,
            COUNT(DISTINCT cpt.cpePersona) AS numeroTrabajadores
			
        FROM
            ResultadoValidacionLiquidacion WITH (NOLOCK)
            INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId
            AND cemNumeroRadicado = rvlNumeroRadicado
            INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId
            AND cemNumeroRadicado = cpe.cpeNumeroRadicado
            INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId
            AND ctrNumeroRadicado = rvlNumeroRadicado
            INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId
            AND ctrNumeroRadicado = cpt.cpeNumeroRadicado
        WHERE
            cpe.cpePersona =@perid
            AND rvlestadoderecholiquidacion = 'DERECHO_ASIGNADO'
        GROUP BY
            rvlNumeroRadicado
	
		INSERT INTO @D(rvlNumeroRadicado,montoLiquidado,montoDescontado,montoParaPago)
 		SELECT
            rvlNumeroRadicado,
            SUM(rvlValorCuota) AS montoLiquidado,
            SUM(rvlValorDescuento) AS montoDescontado,
            SUM(rvlValorCuotaAjustada) AS montoParaPago
	
        FROM
            ResultadoValidacionLiquidacion WITH (NOLOCK)
            INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId
            AND cemNumeroRadicado = rvlNumeroRadicado
            INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId
            AND cemNumeroRadicado = cpe.cpeNumeroRadicado
        WHERE
            cpePersona =@perid
        GROUP BY
            rvlNumeroRadicado

		INSERT INTO @Razon (rvlnumeroradicado, rvlresultadocausal, ID)
		SELECT
			rvlNumeroRadicado, rvlResultadoCausal, ROW_NUMBER() OVER (PARTITION BY rvlnumeroradicado order by rvlresultadocausal desc) as ID	
		FROM
			ResultadoValidacionLiquidacion rvl1 WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion ON sllNumeroRadicacion = rvl1.rvlNumeroRadicado
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId
			AND cemNumeroRadicado = rvl1.rvlNumeroRadicado
			INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId
			AND cemNumeroRadicado = cpe.cpeNumeroRadicado
		WHERE
			cpe.cpePersona =@perid
			AND rvl1.rvlCondicionBeneficiario IS NULL
			AND rvl1.rvlCondicionTrabajador IS NULL
			and (:numeroRadicado IS NULL OR rvlNumeroRadicado = :numeroRadicado)
	
		INSERT INTO @A(slltipoliquidacion,slltipoliquidacionespecifica,rvlnumeroradicado,sllfechainicio,cumple,razon)
 		SELECT
            sllTipoLiquidacion,
            sllTipoLiquidacionEspecifica,
            rvlNumeroRadicado,
            sllFechaInicio,
            cumple,
         	razon
     
        FROM
            (
                    SELECT DISTINCT
                        sllTipoLiquidacion,
                        sllTipoLiquidacionEspecifica,
                        rvl0.rvlNumeroRadicado,
                        sllFechaInicio,
                        case when cteR.rvlResultadoCausal is null then 1 else 0 end AS cumple,
                       cteR.rvlResultadoCausal AS razon
                    FROM
                        ResultadoValidacionLiquidacion rvl0 WITH (NOLOCK)
                        INNER JOIN SolicitudLiquidacion ON sllNumeroRadicacion = rvl0.rvlNumeroRadicado
                        INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId
                        AND cemNumeroRadicado = rvl0.rvlNumeroRadicado
                        INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId
                        AND cemNumeroRadicado = cpe.cpeNumeroRadicado
						LEFT JOIN @Razon cteR on cteR.rvlNumeroRadicado = rvl0.rvlNumeroRadicado and cteR.ID=1
                    WHERE
                        cpe.cpePersona =@perid
                    GROUP BY
                        sllTipoLiquidacion,
                        rvl0.rvlNumeroRadicado,
                        sllTipoLiquidacionEspecifica,
                        sllFechaInicio,
                        rvl0.rvlId,
						cteR.rvlResultadoCausal
            ) AS liquidaciones

		INSERT INTO @E(ctrnumeroradicado, periodofallecimiento)
		SELECT 
			ctrNumeroRadicado,
			max(CondicionTrabajador.ctrFechaFallecimiento) as periodoFallecimiento

		FROM
			ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion sl on sl.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado and sl.sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE'

			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (
				ResultadoValidacionLiquidacion.rvlCondicionTrabajador = CondicionTrabajador.ctrId
				AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado
			)
			INNER JOIN @A AS a on a.rvlNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
		GROUP BY
			ctrNumeroRadicado
	
		INSERT INTO @F(cbeNumeroRadicado, periodofallecimientoBeneficiario)
 		SELECT
            cbeNumeroRadicado,
            max(CondicionBeneficiario.cbeFechaFallecimiento) periodoFallecimientoBeneficiario
           
        FROM
            ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion sl on sl.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado and sl.sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO'
   
            INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (
                ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = CondicionBeneficiario.cbeId
                AND ResultadoValidacionLiquidacion.rvlNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado
            )
            INNER JOIN @A AS a on a.rvlNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
        GROUP BY
            cbeNumeroRadicado
    	
			SELECT
				a.sllTipoLiquidacion,
				a.sllTipoLiquidacionEspecifica,
				a.rvlNumeroRadicado,
				a.sllFechaInicio,
				a.cumple,
				a.razon,
				case
					when (
						a.sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE'
					) then e.periodoFallecimiento
					when (
						a.sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO'
					) then f.periodoFallecimientoBeneficiario
					else b.periodo
				end as periodo,
				c.numeroTrabajadores,
				d.montoLiquidado,
				d.montoDescontado,
				d.montoParaPago
			FROM @A AS a
			LEFT JOIN @B AS b ON a.rvlNumeroRadicado = b.rvlNumeroRadicado
			LEFT JOIN @C AS c ON a.rvlNumeroRadicado = c.rvlNumeroRadicado
			LEFT JOIN @D AS d ON a.rvlNumeroRadicado = d.rvlNumeroRadicado
			LEFT JOIN @E AS e ON a.rvlNumeroRadicado = e.ctrNumeroRadicado
			LEFT JOIN @F AS f ON a.rvlNumeroRadicado = f.cbeNumeroRadicado

			WHERE (:periodo = '' OR periodo in (:periodo))
			AND (:fechaInicio = '' OR CAST(sllFechaInicio AS DATE) &gt;= CAST(:fechaInicio AS DATE))
			AND (:fechaFin = '' OR CAST(sllFechaInicio AS DATE) &lt;= CAST(:fechaFin AS DATE))
			AND (:numeroRadicado = '' OR a.rvlNumeroRadicado = :numeroRadicado)
	</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.vista360.trabajador.liquidacion">
		<description>Consulta que permite realizar la consulta del proceso de liquidaci√≥n por trabajador</description>
		<query>	
			declare @perid bigint
			select @perid = perId  
			from Persona
			where perTipoIdentificacion = :tipoIdentificacion
			and perNumeroIdentificacion = :numeroIdentificacion

			declare @ValidacionLiquidacion table (sllTipoLiquidacion varchar(33), sllTipoLiquidacionEspecifica varchar(32), rvlNumeroRadicado varchar(23), sllFechaInicio date, cpeRazonSocial varchar (250)
			, cumple int, cpeTipoIdentificacion varchar (32), cpeNumeroIdentificacion varchar(16), cpeEmp bigint,cpeTrb bigint, rvlEstadoDerechoLiquidacion varchar(50))
			insert @ValidacionLiquidacion
			SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
			1 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb, rvlEstadoDerechoLiquidacion
			FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN dbo.SolicitudLiquidacion WITH (NOLOCK) ON sllNumeroRadicacion = rvlNumeroRadicado
			INNER JOIN dbo.CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvlNumeroRadicado = cpe.cpeNumeroRadicado
			INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
			WHERE rvlCondicionBeneficiario IS NOT NULL
			AND rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO')
			AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
			and sllTipoLiquidacion  &lt;&gt; 'SUBSUDIO_DE_DEFUNCION'
			and cpt.cpePersona = @perid
			union
			SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvl.rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
			0 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb, rvlEstadoDerechoLiquidacion
			FROM dbo.ResultadoValidacionLiquidacion as rvl WITH (NOLOCK)
			INNER JOIN dbo.SolicitudLiquidacion WITH (NOLOCK) ON sllNumeroRadicacion = rvl.rvlNumeroRadicado
			INNER JOIN dbo.CondicionEmpleador WITH (NOLOCK) ON rvl.rvlCondicionEmpleador = cemId AND rvl.rvlNumeroRadicado = cemNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvl.rvlNumeroRadicado = cpe.cpeNumeroRadicado
			INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON rvl.rvlCondicionTrabajador = ctrId AND rvl.rvlNumeroRadicado = ctrNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvl.rvlNumeroRadicado = cpt.cpeNumeroRadicado
			WHERE rvl.rvlEstadoDerechoLiquidacion NOT IN ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO')
			AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
			and sllTipoLiquidacion  &lt;&gt; 'SUBSUDIO_DE_DEFUNCION'
			and cpt.cpePersona = @perid
			union
			SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
			0 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb, rvlEstadoDerechoLiquidacion
			FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN dbo.SolicitudLiquidacion WITH (NOLOCK) ON sllNumeroRadicacion = rvlNumeroRadicado
			INNER JOIN dbo.CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvlNumeroRadicado = cpe.cpeNumeroRadicado
			INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
			INNER JOIN dbo.CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
			WHERE rvlCondicionBeneficiario IS NULL
			AND rvlNumeroRadicado NOT IN (SELECT DISTINCT rvlNumeroRadicado FROM ResultadoValidacionLiquidacion WITH (NOLOCK) WHERE rvlCondicionBeneficiario IS NOT NULL)
			AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
			and sllTipoLiquidacion  &lt;&gt; 'SUBSUDIO_DE_DEFUNCION'
			and cpt.cpePersona = @perid;
								
			WITH LiquidacionData AS (
			SELECT rvlNumeroRadicado, 
								SUM(rvlValorCuota) 			AS montoLiquidado, 
								SUM(rvlValorDescuento) 		AS montoDescontado, 
								SUM(rvlValorCuotaAjustada) 	AS montoParaPago,
								cpe.cpeId cpeEmp,cpt.cpeId cpeTrb
								, rvlEstadoDerechoLiquidacion 
						FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
						INNER JOIN dbo.CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
						INNER JOIN dbo.CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
						INNER JOIN dbo.CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvlNumeroRadicado = cpe.cpeNumeroRadicado
						WHERE cpt.cpePersona = @perid
						GROUP BY rvlNumeroRadicado, cpe.cpeId,cpt.cpeId,rvlEstadoDerechoLiquidacion)
			,RankedRows as (
				SELECT 
					ROW_NUMBER() OVER(PARTITION BY rvlNumeroRadicado, cpeTipoIdentificacion, cpeNumeroIdentificacion
									   ORDER BY cumple DESC) AS [Row Number], 
					rvlNumeroRadicado, sllFechaInicio, sllTipoLiquidacion, sllTipoLiquidacionEspecifica, 
					cpeRazonSocial, cumple, cpeTipoIdentificacion, cpeNumeroIdentificacion, cpeEmp,cpeTrb,rvlEstadoDerechoLiquidacion
				FROM @ValidacionLiquidacion
			)		
				SELECT  
				a.rvlNumeroRadicado, a.sllFechaInicio, a.sllTipoLiquidacion, a.sllTipoLiquidacionEspecifica, a.cpeRazonSocial, a.cumple, 
						c.montoLiquidado, c.montoDescontado, c.montoParaPago, a.cpeTipoIdentificacion, a.cpeNumeroIdentificacion
					FROM RankedRows a
					LEFT JOIN (
						SELECT rvlNumeroRadicado, CONVERT (VARCHAR(10), MAX(plsPeriodo)) AS periodo 
						FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN dbo.PeriodoLiquidacionSubsidio WITH (NOLOCK) ON plsNumeroRadicado = rvlNumeroRadicado
						INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
						INNER JOIN dbo.CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
						INNER JOIN dbo.CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
						INNER JOIN dbo.CondicionPersona cpemp WITH (NOLOCK) ON cemCondicionPersona = cpemp.cpeId AND rvlNumeroRadicado = cpemp.cpeNumeroRadicado
						WHERE plsTipoPeriodo = 'REGULAR'
						and cpt.cpePersona = @perid
						GROUP BY rvlNumeroRadicado
						) AS b ON a.rvlNumeroRadicado = b.rvlNumeroRadicado 		
					LEFT JOIN LiquidacionData AS c ON a.rvlNumeroRadicado = c.rvlNumeroRadicado AND a.cpeTrb = c.cpeTrb  AND a.cpeEmp = c.cpeEmp   AND a.rvlEstadoDerechoLiquidacion = c.rvlEstadoDerechoLiquidacion
				WHERE [Row Number] = 1
					AND (:numPeriodo = 0 OR periodo in (:periodo))
					AND (:fechaInicio IS NULL OR CAST(sllFechaInicio AS DATE) &gt;= CAST(:fechaInicio AS DATE))
					AND (:fechaFin IS NULL OR CAST(sllFechaInicio AS DATE) &lt;= CAST(:fechaFin AS DATE))
					AND (:numeroRadicado IS NULL OR a.rvlNumeroRadicado = :numeroRadicado)
					ORDER BY sllFechaInicio desc
		</query>
	</named-native-query>

	<named-native-query name="SubsidioMonetario.vista360.trabajador.liquidacion.2">
		<description>Consulta que permite realizar la consulta del proceso de liquidaci√≥n por trabajador</description>
		<query>
			declare @perid bigint
			select @perid = perId  
			from Persona
			where perTipoIdentificacion = :tipoIdentificacion
			and perNumeroIdentificacion = :numeroIdentificacion

				SELECT  a.rvlNumeroRadicado, a.sllFechaInicio, a.sllTipoLiquidacion, a.sllTipoLiquidacionEspecifica, a.cpeRazonSocial, a.cumple, c.montoLiquidado, c.montoDescontado, c.montoParaPago, a.cpeTipoIdentificacion, a.cpeNumeroIdentificacion, c.descuentoEntidad,
				CASE when exists (
				SELECT 1 
					FROM dbo.ResultadoValidacionLiquidacion rvl with(nolock)
					INNER JOIN dbo.CondicionTrabajador ctr with(nolock) ON ctr.ctrId = rvl.rvlCondicionTrabajador AND ctr.ctrNumeroRadicado = rvl.rvlNumeroRadicado
					INNER JOIN dbo.CondicionPersona cpt with(nolock) ON cpt.cpeId = ctr.ctrCondicionPersona AND ctr.ctrNumeroRadicado = cpt.cpeNumeroRadicado
					INNER JOIN dbo.CondicionBeneficiario cbe with(nolock) ON cbe.cbeId = rvl.rvlCondicionBeneficiario AND cbe.cbeNumeroRadicado = rvl.rvlNumeroRadicado
					INNER JOIN dbo.CondicionPersona cpb with(nolock) ON cpb.cpeId = cbe.cbeCondicionPersona AND cbe.cbeNumeroRadicado = cpb.cpeNumeroRadicado
					INNER JOIN dbo.SolicitudLiquidacion with(nolock) ON rvlnumeroradicado = sllNumeroRadicacion
					INNER JOIN dbo.PersonaDetalle with(nolock) ON cpb.cpePersona = pedPersona
					WHERE rvl.rvlEstadoDerechoLiquidacion IN ('DERECHO_ASIGNADO','ASIGNAR_DERECHO') 	
					AND cpt.cpePersona = @perid
					AND cpb.cpePersona = @perid
					AND sllTipoLiquidacion IN ('MASIVA','RECONOCIMIENTO_DE_SUBSIDIOS')
					AND DATEADD(DAY, 1, EOMONTH(pedFechaDefuncion, -1)) = cbeperiodo ) THEN 1 ELSE 0
				END AS cumpleSubsidioPeriodoFallecimiento
		FROM (
			SELECT rvlNumeroRadicado, sllFechaInicio, sllTipoLiquidacion, sllTipoLiquidacionEspecifica, cpeRazonSocial, cumple, cpeTipoIdentificacion, cpeNumeroIdentificacion, cpeEmp,cpeTrb,rvlEstadoDerechoLiquidacion, CONVERT (VARCHAR(10), periodoFallecimiento) AS periodoFallecimiento
			FROM (
				(SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpeRazonSocial, cumple, cpeTipoIdentificacion, cpeNumeroIdentificacion, cpeEmp,cpeTrb,rvlEstadoDerechoLiquidacion, CONVERT (VARCHAR(10), periodoFallecimiento) AS periodoFallecimiento
				FROM (
						(SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
						1 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb,rvlEstadoDerechoLiquidacion,
						CASE
							WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' THEN ctrPeriodo
							WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO' THEN cbePeriodo
						END AS periodoFallecimiento
						FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
						INNER JOIN SolicitudLiquidacion ON sllNumeroRadicacion = rvlNumeroRadicado
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
						INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvlNumeroRadicado = cpe.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
						INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
						INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado
						INNER JOIN CondicionPersona cbe WITH (NOLOCK) ON cbeCondicionPersona = cbe.cpeId AND rvlNumeroRadicado = cbe.cpeNumeroRadicado
						WHERE rvlCondicionBeneficiario IS NOT NULL
						AND rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO')
						AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
						and sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION'
						AND cpt.cpePersona = @perid
						)
						UNION (
						SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
						0 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb,rvlEstadoDerechoLiquidacion,
						CASE
							WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' THEN ctrPeriodo
							WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO' THEN cbePeriodo
						END AS periodoFallecimiento
						FROM ResultadoValidacionLiquidacion rvl WITH (NOLOCK)
						INNER JOIN SolicitudLiquidacion ON sllNumeroRadicacion = rvl.rvlNumeroRadicado
						INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvl.rvlCondicionEmpleador = cemId AND rvl.rvlNumeroRadicado = cemNumeroRadicado
						INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvl.rvlNumeroRadicado = cpe.cpeNumeroRadicado
						INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvl.rvlCondicionTrabajador = ctrId AND rvl.rvlNumeroRadicado = ctrNumeroRadicado
						INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
						LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON rvl.rvlCondicionBeneficiario = cbeId AND rvl.rvlNumeroRadicado = cbeNumeroRadicado
						LEFT JOIN CondicionPersona cbe WITH (NOLOCK) ON cbeCondicionPersona = cbe.cpeId AND rvl.rvlNumeroRadicado = cbe.cpeNumeroRadicado
						WHERE rvl.rvlEstadoDerechoLiquidacion NOT IN ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO')
						AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
						and sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION'
						AND cpt.cpePersona = @perid
						)
					) AS a1
				)
				UNION
				(SELECT sllTipoLiquidacion, sllTipoLiquidacionEspecifica, rvlNumeroRadicado, sllFechaInicio, cpe.cpeRazonSocial,
				0 AS cumple, cpe.cpeTipoIdentificacion, cpe.cpeNumeroIdentificacion,cpe.cpeId cpeEmp,cpt.cpeId cpeTrb,rvlEstadoDerechoLiquidacion, 
				CASE
					WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' THEN ctrPeriodo
					WHEN sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO' THEN cbePeriodo
				END AS periodoFallecimiento
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON sllNumeroRadicacion = rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
				INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND rvlNumeroRadicado = cpe.cpeNumeroRadicado
				INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
				INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
				LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON rvlCondicionBeneficiario = cbeId AND rvlNumeroRadicado = cbeNumeroRadicado
				LEFT JOIN CondicionPersona cbe WITH (NOLOCK) ON cbeCondicionPersona = cbe.cpeId AND rvlNumeroRadicado = cbe.cpeNumeroRadicado
				WHERE rvlCondicionBeneficiario IS NULL
				AND rvlNumeroRadicado NOT IN (SELECT DISTINCT rvlNumeroRadicado FROM ResultadoValidacionLiquidacion WITH (NOLOCK) WHERE rvlCondicionBeneficiario IS NOT NULL)
				and sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION'
				AND (:tipoLiquidacion IS NULL OR sllTipoLiquidacion = :tipoLiquidacion)
				AND cpt.cpePersona = @perid
				)
			) AS liquidaciones) AS a
		LEFT JOIN (
			SELECT rvlNumeroRadicado, CONVERT (VARCHAR(10), MAX(plsPeriodo)) AS periodo 
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN PeriodoLiquidacionSubsidio ON plsNumeroRadicado = rvlNumeroRadicado
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
			INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
			WHERE plsTipoPeriodo = 'REGULAR'
			AND cpt.cpePersona = @perid
			GROUP BY rvlNumeroRadicado
			) AS b  ON a.rvlNumeroRadicado = b.rvlNumeroRadicado 
		LEFT JOIN (
			SELECT rvlNumeroRadicado, 
			SUM(rvlValorCuota) AS montoLiquidado, 
			SUM(rvlDescuentoEntidad) AS descuentoEntidad,
			SUM(rvlValorDescuento) AS montoDescontado, 
			SUM(rvlValorCuotaAjustada) AS montoParaPago,
			cpemp.cpeId cpeEmp,cpt.cpeId cpeTrb
			,rvlEstadoDerechoLiquidacion 
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado
			INNER JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
						
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
			INNER JOIN CondicionPersona cpemp WITH (NOLOCK) ON cemCondicionPersona = cpemp.cpeId AND rvlNumeroRadicado = cpemp.cpeNumeroRadicado

			WHERE rvlEnviadoAPagos = 1
			AND cpt.cpePersona = @perid
			GROUP BY rvlNumeroRadicado, cpemp.cpeId,cpt.cpeId,rvlEstadoDerechoLiquidacion
			) AS c ON a.rvlNumeroRadicado = c.rvlNumeroRadicado AND a.cpeTrb = c.cpeTrb  AND a.cpeEmp = c.cpeEmp AND a.rvlEstadoDerechoLiquidacion = c.rvlEstadoDerechoLiquidacion
		WHERE (:numPeriodo = 0 OR a.periodoFallecimiento in (:periodo))
		AND (:fechaInicio IS NULL OR CAST(sllFechaInicio AS DATE) &gt;= CAST(:fechaInicio AS DATE))
		AND (:fechaFin IS NULL OR CAST(sllFechaInicio AS DATE) &lt;= CAST(:fechaFin AS DATE))
		AND (:numeroRadicado IS NULL OR a.rvlNumeroRadicado = :numeroRadicado)
		ORDER BY sllFechaInicio
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.vista360.trabajador.detalleValidacionesEmpleador">
		<description>Consulta que permite realizar la consulta el resultado las validaciones de la liquidaci√≥n por trabajador</description>
		<query>

			declare @condPerEmple bigInt = null
			select @condPerEmple = perId
			from dbo.Persona with(nolock)
			where perTipoIdentificacion = :tipoIdentificacionEmpl and perNumeroIdentificacion = :numeroIdentificacionEmpl
			
			declare @condPerTra bigInt = null
			select @condPerTra = perId
			from dbo.Persona with(nolock)
			where perTipoIdentificacion = :tipoIdentificacion and perNumeroIdentificacion = :numeroIdentificacion

			SELECT DISTINCT plsTipoPeriodo, plsPeriodo, 
				CASE WHEN (rvlCondicionTrabajador IS NULL) THEN 0 ELSE 1 END AS cumple, 
				case when ISNULL(cemEnColaProcesoPorNovedad,0) =0 then ctrEnColaProcesoPorNovedad else cemEnColaProcesoPorNovedad end EnColaProcesoPorNovedad,
				case when ISNULL(cemEnColaProcesoPorAporte,0) =0 then ctrEnColaProcesoPorAporte else cemEnColaProcesoPorAporte end EnColaProcesoPorAporte,
				cemPresentaReingreso,
				CASE WHEN (rvlCondicionTrabajador IS NULL) THEN rvlResultadoCausal ELSE NULL END AS rvlResultadoCausal
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion ON sllNumeroRadicacion = rvlNumeroRadicado
				LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (rvlCondicionTrabajador = ctrId AND rvlNumeroRadicado = ctrNumeroRadicado)
				LEFT JOIN CondicionPersona cpt WITH (NOLOCK) ON ctrCondicionPersona = cpt.cpeId AND rvlNumeroRadicado = cpt.cpeNumeroRadicado
				LEFT JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON rvlCondicionEmpleador = cetCondicionEmpleador AND rvlCondicionTrabajador = cetCondicionTrabajador AND rvlNumeroRadicado = cetNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND rvlNumeroRadicado = cemNumeroRadicado
				INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND cemNumeroRadicado = cpe.cpeNumeroRadicado
				INNER JOIN PeriodoLiquidacionSubsidio ON plsNumeroRadicado = rvlNumeroRadicado AND plsPeriodo = cemPeriodo
			WHERE rvlNumeroRadicado = :numeroRadicado
				AND (cpe.cpePersona = @condPerEmple)
				AND (cpt.cpePersona = @condPerTra)
				AND ((rvlExcluirSD IS NULL OR rvlExcluirSD = 0) OR (rvlExcluirSD = 1 AND rvlCondicionTrabajador IS NOT NULL)) 
			ORDER BY plsPeriodo DESC
		</query>
	</named-native-query>			
	
	<named-native-query name="SubsidioMonetario.vista360.trabajador.detalleGruposFamiliaresTrabajador">
		<description>Consulta que permite realizar la consulta grupos familiares de una liquidacion de un trabajador</description>
		<query>
		declare @perid bigint
		select @perid = perId  
		from Persona WITH(NOLOCK)
		where perTipoIdentificacion = :tipoIdentificacion
		and perNumeroIdentificacion = :numeroIdentificacion
		
		declare @peridEm bigint
		select @peridEm = perId  
		from Persona WITH(NOLOCK)
		where perTipoIdentificacion = :tipoIdentificacionEmp
		and perNumeroIdentificacion = :numeroIdentificacionEmp


	;with RecibeCuota as (
		SELECT  rvl2.rvlNumeroRadicado,rvl2.rvlCondicionBeneficiario,ctr2.ctrPeriodo,ctr2.ctrCondicionPersona, COUNT(rvlId) sapRecibeCuota
		FROM ResultadoValidacionLiquidacion rvl2 WITH (NOLOCK)
		INNER JOIN CondicionTrabajador ctr2 WITH (NOLOCK) ON ctr2.ctrId = rvl2.rvlCondicionTrabajador AND ctr2.ctrNumeroRadicado = rvl2.rvlNumeroRadicado
		INNER JOIN CondicionPersona tra2 WITH (NOLOCK) ON tra2.cpeId = ctr2.ctrCondicionPersona AND tra2.cpeNumeroRadicado = ctr2.ctrNumeroRadicado
		WHERE rvl2.rvlEstadoDerechoLiquidacion in ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO')
		AND rvl2.rvlNumeroRadicado = :numeroRadicado
		AND tra2.cpePersona = @perid
		group by rvl2.rvlNumeroRadicado,rvl2.rvlCondicionBeneficiario,ctr2.ctrPeriodo,ctr2.ctrCondicionPersona)
	,ActivoRespectoSap as (
		SELECT cab2.cabCondicionBeneficiario,ctr2.ctrPeriodo,ctr2.ctrCondicionPersona,cabActivoRespectoTrabajador as sapActivoRespectoSap
		FROM CondicionAfiliadoPplBeneficiario cab2 WITH (NOLOCK)
		INNER JOIN CondicionTrabajador ctr2 WITH (NOLOCK) ON ctr2.ctrId = cab2.cabCondicionTrabajador AND ctr2.ctrNumeroRadicado = cab2.cabNumeroRadicado
		WHERE cab2.cabNumeroRadicado = :numeroRadicado
		AND cab2.cabActivoRespectoTrabajador = 1)
	,Resultado as (
		select rvlId,rvlCondicionTrabajador,rvlCondicionBeneficiario,rvlCondicionEmpleador,rvlNumeroRadicado,rvlEstadoDerechoLiquidacion,rvlResultadoCausal,rvlEsDiscapacidad,rvlEsAgrario,rvlValorCuota,rvlValorDescuento,rvlValorCuotaAjustada,rvlEsConyugeCuidador,rvlDescuentoEntidad
		from ResultadoValidacionLiquidacion with (nolock) where rvlNumeroRadicado = :numeroRadicado)

		SELECT DISTINCT
			cabTipoBeneficiario AS parentesco,
			ben.cpeRazonSocial AS benRazonSocial,
			ben.cpeTipoIdentificacion AS benTipoIdentificacion, 
			ben.cpeNumeroIdentificacion AS benNumeroIdentificacion, 
			cbePeriodo AS periodo,
			CASE WHEN cab.cabActivoRespectoTrabajador = 1 THEN 'ACTIVO'
				WHEN ISNULL(cab.cabActivoRespectoTrabajador,0) = 0 AND cabActivoAlMenosUnDia = 1 THEN 'ACTIVO'
				WHEN ISNULL(cab.cabActivoRespectoTrabajador,0) = 0 AND ISNULL(cabActivoAlMenosUnDia,0) = 0 THEN 'INACTIVO'
				END AS estadoRespectoEmpleador,  
			IIF(rvlEstadoDerechoLiquidacion in ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO'),CONVERT(bit,1),CONVERT(bit,0)) AS cumple,
			IIF(rvlEstadoDerechoLiquidacion in ('ASIGNAR_DERECHO', 'DERECHO_ASIGNADO', 'DERECHO_DISPERSADO_EN_MEDIOS_DE_PAGO'),NULL,rvlResultadoCausal) AS razon,
			dbo.FN_GET_TipoCuotaSubsidio(rvlEsAgrario,rvlEsDiscapacidad,iif(sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE',1,0),iif(sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO',1, 0)) AS tipoCuotaSubsidio,
			IIF(rvlEstadoDerechoLiquidacion in ('ASIGNAR_DERECHO','DERECHO_ASIGNADO'),rvlEstadoDerechoLiquidacion,null) AS estadoDerecho,
			IIF(rvlEstadoDerechoLiquidacion='DERECHO_NO_APROBADO',0,ISNULL(rvlValorCuota,0)) AS valorCuota,
			ISNULL(rvlValorDescuento,0) AS valorDescuento, 
			ISNULL(rvlValorCuotaAjustada,0) AS valorCuotaAjustada, 
			ISNULL(sapRecibeCuota,0) as sapRecibeCuota,
			sap.cpeRazonSocial AS sapRazonSocial,
			IIF(ccbGrupoFamiliar IS NOT NULL,ccbGrupoFamiliar,grf.grfId) AS grupoFamiliar,
			adm.cpeRazonSocial AS admRazonSocial,
			mpgNombre AS tipoMedioDePago, 
			sllFechaInicio AS fechaInicioLiquidacion, 
			mpgSitioPago AS sitioPago,
			rvlId AS rvlId,
			adm.cpeTipoIdentificacion AS admTipoIdentificacion, 
			adm.cpeNumeroIdentificacion AS admNumeroIdentificacion,
			rvl.rvlCondicionBeneficiario AS condicionBeneficiario,
			ars.sapActivoRespectoSap,
			rvl.rvlEsConyugeCuidador,
			ISNULL(rvlDescuentoEntidad,0) AS valorDescuentoEntidad
		FROM Resultado rvl WITH (NOLOCK) 
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON sllNumeroRadicacion = rvl.rvlNumeroRadicado
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON cbeId = rvlCondicionBeneficiario AND cbeNumeroRadicado = rvl.rvlNumeroRadicado
			INNER JOIN CondicionPersona ben WITH (NOLOCK) ON ben.cpeId = cbeCondicionPersona AND ben.cpeNumeroRadicado = cbeNumeroRadicado
			INNER JOIN CondicionAfiliadoPplBeneficiario cab WITH (NOLOCK) ON cab.cabCondicionBeneficiario = rvlCondicionBeneficiario AND cab.cabNumeroRadicado = rvl.rvlNumeroRadicado AND cab.cabCondicionTrabajador = rvlCondicionTrabajador AND cab.cabNumeroRadicado = rvlNumeroRadicado
			LEFT JOIN CondicionPersona sap WITH (NOLOCK) ON sap.cpeId = cabCondicionPersonaSegundoAfiliadoPpal AND sap.cpeNumeroRadicado = cabNumeroRadicado
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON ctrId = rvl.rvlCondicionTrabajador AND ctrNumeroRadicado = rvl.rvlNumeroRadicado
			INNER JOIN CondicionPersona tra WITH (NOLOCK) ON tra.cpeId = ctrCondicionPersona AND tra.cpeNumeroRadicado = ctrNumeroRadicado
			INNER JOIN Afiliado afi WITH (NOLOCK) on afi.afiPersona = tra.cpePersona
			INNER JOIN Beneficiario b WITH (NOLOCK) on b.benPersona = ben.cpePersona
			INNER JOIN GrupoFamiliar grf WITH (NOLOCK) ON grf.grfAfiliado = afi.afiId AND cabNumeroGrupoFamiliar = grf.grfNumero
			LEFT JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON ccbNumeroRadicado = rvl.rvlNumeroRadicado AND ccbCondicionPersonaBeneficiario = cbeCondicionPersona AND ccbGrupoFamiliar = grf.grfId
			LEFT JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON cgfNumeroRadicado = rvl.rvlNumeroRadicado AND cgfCondicionPersonaTrabajador = ctrCondicionPersona AND ccbCuotaConsolidadaGrupoFamiliar  = cgfId
			LEFT JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON cgfDispersionMedioDePagoAdmin = dmpId AND cgfNumeroRadicado = dmpNumeroRadicado
			LEFT JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON dmpAdministradorSubsidio = aslId AND dmpNumeroRadicado = aslNumeroRadicado
			LEFT JOIN CondicionPersona adm WITH (NOLOCK) ON aslCondicionPersonaAdministradorSubisidio = adm.cpeId AND aslNumeroRadicado = adm.cpeNumeroRadicado
			LEFT JOIN MedioDePagoLiquidacion WITH (NOLOCK) ON dmpMedioDePagoLiquidacion = mpgId AND dmpNumeroRadicado = mpgNumeroRadicado
			INNER JOIN CondicionEmpleador ce WITH (NOLOCK) ON  rvl.rvlCondicionEmpleador = ce.cemId
			LEFT JOIN RecibeCuota rco WITH (NOLOCK) ON  rco.rvlNumeroRadicado = :numeroRadicado AND rco.rvlCondicionBeneficiario = cbeId AND rco.ctrPeriodo = cbePeriodo AND rco.ctrCondicionPersona = sap.cpeId
			LEFT JOIN ActivoRespectoSap ars WITH (NOLOCK) ON ars.cabCondicionBeneficiario = cbeId AND ars.ctrPeriodo = cbePeriodo AND ars.ctrCondicionPersona = sap.cpeId
			INNER JOIN CondicionPersona cpem WITH (NOLOCK) ON cpem.cpeId = ce.cemCondicionPersona
		WHERE (:periodo IS NULL OR CAST(cbePeriodo AS DATE) in (CAST(:periodo AS DATE)))
			AND rvl.rvlNumeroRadicado = :numeroRadicado
			AND tra.cpePersona = @perid
			AND (@peridEm is null or cpem.cpePersona = @peridEm)
		ORDER BY grupoFamiliar, benRazonSocial, benTipoIdentificacion, benNumeroIdentificacion, periodo

		</query>
	</named-native-query>
			
	
	
	<named-native-query
		name="SubsidioMonetario.consultar.periodoFallecimiento.beneficiario.afiliado.no.cumple">
		<description> Consulta que obtiene el periodo de fallecimiento del beneficiario en el caso de que √©l afiliado no haya cumplido las validaciones</description>
		<query>
			SELECT MAX (ped.pedFechaDefuncion)			
			FROM dbo.PersonaLiquidacionEspecificaAjuste ple
			INNER JOIN BeneficiarioDetalle bed on bed.bedId = ple.pleBeneficiarioDetalle
			INNER JOIN PersonaDetalle ped on ped.pedId = bed.bedPersonaDetalle
			INNER JOIN Afiliado afi ON afi.afiId = ple.pleAfiliadoPrincipal
			INNER JOIN Persona perAfi ON perAfi.perId = afi.afiPersona
			WHERE ple.pleNumeroRadicado = :numeroRadicacion 
			GROUP BY  perAfi.perId
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.vista360.trabajador.liquidacionFallecimiento.subsidio">
		<description>Consulta que permite realizar la consulta relacionada a una liquidacion de fallecimiento de un trabajador</description>
		<query>
			SELECT 
				a.valorCuota, a.valorDescuento, a.valorCuotaAjustada,
				b.periodoFallecimiento,
				CASE WHEN (aportesOK > 0 OR aportesNoOK > 0) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END AS tieneAportes,
				CASE WHEN (aportesOK > 0) THEN 'OK'
					WHEN (aportesNoOK > 0) THEN 'NO OK' ELSE 'Sin informaci√≥n' END AS estadoAportes
			FROM 
				(SELECT rvlNumeroRadicado, SUM(rvlValorCuota) AS valorCuota, SUM(rvlValorDescuento) AS valorDescuento, SUM(rvlValorCuotaAjustada) AS valorCuotaAjustada
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				WHERE rvlNumeroRadicado = :numeroRadicado
				GROUP BY rvlNumeroRadicado) AS a
			LEFT JOIN 
				(SELECT rvlNumeroRadicado, 
				CASE WHEN (sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE') THEN ctrFechaFallecimiento
					WHEN (sllTipoLiquidacion = 'SUBSUDIO_DE_DEFUNCION' AND sllTipoLiquidacionEspecifica = 'DEFUNCION_BENEFICIARIO') THEN cbeFechaFallecimiento END AS periodoFallecimiento
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion ON rvlNumeroRadicado = sllNumeroRadicacion
				INNER JOIN CondicionTrabajador ON ctrId = rvlCondicionTrabajador AND ctrNumeroRadicado = rvlNumeroRadicado
				INNER JOIN CondicionBeneficiario ON cbeId = rvlCondicionBeneficiario AND cbeNumeroRadicado = rvlNumeroRadicado
				WHERE rvlNumeroRadicado = :numeroRadicado) AS b ON a.rvlNumeroRadicado = b.rvlNumeroRadicado
			LEFT JOIN 
				(SELECT rvlNumeroRadicado, 
					(SELECT COUNT(cetId) FROM ResultadoValidacionLiquidacion INNER JOIN CondicionEmpleadorTrabajador ON cetCondicionTrabajador = rvlCondicionTrabajador AND cetNumeroRadicado = rvlNumeroRadicado WHERE rvlNumeroRadicado = :numeroRadicado AND cetAportesOK = 'OK') AS aportesOK,
					(SELECT COUNT(cetId) FROM ResultadoValidacionLiquidacion INNER JOIN CondicionEmpleadorTrabajador ON cetCondicionTrabajador = rvlCondicionTrabajador AND cetNumeroRadicado = rvlNumeroRadicado WHERE rvlNumeroRadicado = :numeroRadicado AND cetAportesOK = 'NO_OK') AS aportesNoOK,
					(SELECT COUNT(cetId) FROM ResultadoValidacionLiquidacion INNER JOIN CondicionEmpleadorTrabajador ON cetCondicionTrabajador = rvlCondicionTrabajador AND cetNumeroRadicado = rvlNumeroRadicado WHERE rvlNumeroRadicado = :numeroRadicado AND cetAportesOK IS NULL) AS sinAportes 
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				WHERE rvlNumeroRadicado = :numeroRadicado) AS c ON a.rvlNumeroRadicado = c.rvlNumeroRadicado
		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.rRevisionAuditoriaSubsidio.fechaRevision">
		<description> Consulta que obtiene la fecha de la ultima revisi√≥n que fue procesada por el stagin</description>
		<query>
			SELECT CAST(dateadd(second, MAX(rasRevisionTimeStampFin) / 1000, '19700101') AT TIME ZONE 'UTC' AT TIME ZONE 'SA Pacific Standard Time' AS DATETIME) AS revisionTimeStampFin
			FROM RevisionAuditoriaSubsidio
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.maximoPeriodoRegular.liquidacion">
		<description> Consulta que obtiene el maximo periodo reportada como regular</description>
		<query>
			SELECT MAX(plsPeriodo)
			FROM PeriodoLiquidacionSubsidio
			WHERE plsNumeroRadicado = :numeroRadicado
			AND plsTipoPeriodo = 'REGULAR'
		</query>
	</named-native-query> 
	
	<named-native-query
		name="SubsidioMonetario.consultar.beneficiario.categoria.PADRES">
		<description> Consulta que devuelve un beneficiario si no pertenece a la categoria PADRES</description>
		<query>
			SELECT ben.*
			FROM dbo.CondicionAfiliadoPplBeneficiario AS ben WITH (NOLOCK)
			WHERE ben.cabNumeroRadicado = :numeroRadicado
			AND ben.cabTipoBeneficiario &lt;&gt; 'PADRES'
			AND ben.cabCondicionBeneficiario = :condicionBeneficiario
		</query>
	</named-native-query>
	
    <named-native-query
		name="SubsidioMonetario.consultar.informacion.comunicado.fallecimiento.137">
		<description>Consulta que devuelve la informaci√≥n relevante para crear el comunicado 137 por fallecimiento</description>
		<query>
			SELECT  
			 CASE
                WHEN AdministradorSubsidio.cpeTipoIdentificacion IS NOT NULL
                THEN (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(AdministradorSubsidio.cpePrimerNombre, ' ', AdministradorSubsidio.cpeSegundoNombre, ' ', AdministradorSubsidio.cpePrimerApellido, ' ', AdministradorSubsidio.cpeSegundoApellido ), ' ' ) )
                ELSE (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(perAdmin.perPrimerNombre, ' ', perAdmin.perSegundoNombre, ' ', perAdmin.perPrimerApellido, ' ', perAdmin.perSegundoApellido ), ' ' ) )
            END AS nombresAdminSubsidio,
			CASE
				WHEN AdministradorSubsidio.cpeTipoIdentificacion IS NOT NULL
				THEN AdministradorSubsidio.cpeTipoIdentificacion
				ELSE perAdmin.perTipoIdentificacion
			END AS tipoIdentificacionAdminSubsidio,
			CASE
				WHEN AdministradorSubsidio.cpeTipoIdentificacion IS NOT NULL
				THEN AdministradorSubsidio.cpeNumeroIdentificacion
				ELSE perAdmin.perNumeroIdentificacion
			END AS noIdentificacionAdminSubsidio,
			CASE
                WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE'
                THEN (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(trabajador.cpePrimerNombre, ' ', trabajador.cpeSegundoNombre, ' ', trabajador.cpePrimerApellido, ' ', trabajador.cpeSegundoApellido ), ' ' ) )
                ELSE (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(beneficiario.cpePrimerNombre, ' ', beneficiario.cpeSegundoNombre, ' ', beneficiario.cpePrimerApellido, ' ', beneficiario.cpeSegundoApellido ), ' ' ) )
            END AS nombreBeneficiarioOTrabajador,
			CASE
				WHEN 1 = :causa
				THEN 'No se tiene beneficiario o afiliado principal con derecho para poder pagar el subsidio por fallecimiento '
				ELSE 'No se cumple con la condici√≥n de aportes v√°lidos para el per√≠odo de fallecimiento, que habilite el pago del subsidio por fallecimiento'
			END AS causa,
			CASE
				WHEN AdministradorSubsidio.cpePersona  IS NOT NULL
				THEN AdministradorSubsidio.cpePersona
				ELSE perAdmin.perId
			END AS idPersonaAdmin
			FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON dbo.CondicionTrabajador.ctrId = dbo.ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND dbo.CondicionTrabajador.ctrNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN dbo.CondicionPersona AS trabajador WITH (NOLOCK) ON trabajador.cpeId = dbo.CondicionTrabajador.ctrCondicionPersona
			AND trabajador.cpeNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			LEFT JOIN dbo.CondicionBeneficiario WITH (NOLOCK) ON  dbo.CondicionBeneficiario.cbeCondicionPersona = dbo.ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND dbo.CondicionBeneficiario.cbeNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			LEFT JOIN dbo.CondicionPersona AS beneficiario WITH (NOLOCK) ON beneficiario.cpeId = dbo.CondicionBeneficiario.cbeCondicionPersona
			AND beneficiario.cpeNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN dbo.SolicitudLiquidacion WITH (NOLOCK) ON CondicionTrabajador.ctrNumeroRadicado = dbo.SolicitudLiquidacion.sllNumeroRadicacion
			LEFT JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON AdministradorSubsidioLiquidacion.aslNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			LEFT JOIN CondicionPersona AS AdministradorSubsidio WITH (NOLOCK) ON (AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio = AdministradorSubsidio.cpeId
					  AND AdministradorSubsidioLiquidacion.aslNumeroRadicado = AdministradorSubsidio.cpeNumeroRadicado)
			INNER JOIN dbo.CondicionAfiliadoPplBeneficiario cab WITH (NOLOCK) ON (cab.cabCondicionTrabajador = dbo.CondicionTrabajador.ctrId AND cab.cabNumeroRadicado = dbo.CondicionTrabajador.ctrNumeroRadicado
			)
			INNER JOIN dbo.Afiliado afi ON (afi.afiPersona = trabajador.cpePersona)
			INNER JOIN dbo.GrupoFamiliar grf ON (grf.grfNumero = cab.cabNumeroGrupoFamiliar	AND grf.grfAfiliado = afi.afiId)
			INNER JOIN dbo.AdminSubsidioGrupo asg ON (grf.grfId = asg.asgGrupoFamiliar)
			LEFT JOIN dbo.AdministradorSubsidio asu ON (asu.asuId = asg.asgAdministradorSubsidio)
			LEFT JOIN dbo.Persona perAdmin ON (perAdmin.perId = asu.asuPersona)
			WHERE dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicado
			GROUP BY trabajador.cpePrimerNombre,trabajador.cpeSegundoNombre,trabajador.cpePrimerApellido,trabajador.cpeSegundoApellido,
			beneficiario.cpePrimerNombre,beneficiario.cpeSegundoNombre,beneficiario.cpePrimerApellido,beneficiario.cpeSegundoApellido,
			dbo.SolicitudLiquidacion.sllTipoLiquidacionEspecifica, AdministradorSubsidio.cpeTipoIdentificacion, AdministradorSubsidio.cpeNumeroIdentificacion,
			AdministradorSubsidio.cpePrimerNombre, AdministradorSubsidio.cpeSegundoNombre, AdministradorSubsidio.cpePrimerApellido, 
			AdministradorSubsidio.cpeSegundoApellido, AdministradorSubsidio.cpePersona, perAdmin.perTipoIdentificacion, perAdmin.perNumeroIdentificacion,
			perAdmin.perPrimerNombre, perAdmin.perSegundoNombre, perAdmin.perPrimerApellido, perAdmin.perSegundoApellido, perAdmin.perId 
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.informacion.comunicado.fallecimiento.138">
		<description>Consulta que devuelve la informaci√≥n relevante para crear el comunicado 138 (139) por fallecimiento</description>
		<query>
			SELECT 
			CASE
                WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' 
                     AND dbo.CondicionTrabajador.ctrCondicionPersonaConyuge IS NOT NULL 
                THEN (
                    SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ')
                    FROM STRING_SPLIT(CONCAT(conyuge.cpePrimerNombre, ' ', conyuge.cpeSegundoNombre, ' ', conyuge.cpePrimerApellido, ' ', conyuge.cpeSegundoApellido), ' ' ) )
                ELSE (
                    SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ')
                    FROM STRING_SPLIT(CONCAT(trabajador.cpePrimerNombre, ' ', trabajador.cpeSegundoNombre, ' ', trabajador.cpePrimerApellido, ' ', trabajador.cpeSegundoApellido), ' ' ) )
            END AS nombresTrabajadorOPareja,
			CASE
				WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' AND dbo.CondicionTrabajador.ctrCondicionPersonaConyuge IS NOT NULL 
				THEN conyuge.cpeTipoIdentificacion
				ELSE trabajador.cpeTipoIdentificacion
			END AS tipoIdentificacionTrabajadorOPareja,
			CASE
				WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' AND dbo.CondicionTrabajador.ctrCondicionPersonaConyuge IS NOT NULL 
				THEN  conyuge.cpeNumeroIdentificacion
				ELSE  trabajador.cpeNumeroIdentificacion
			END AS noIdentificacionTrabajadorOPareja, 
			CASE
                WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE' 
                THEN (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(trabajador.cpePrimerNombre, ' ', trabajador.cpeSegundoNombre, ' ', trabajador.cpePrimerApellido, ' ', trabajador.cpeSegundoApellido ), ' ' ) )
                ELSE (SELECT STRING_AGG(UPPER(SUBSTRING(value, 1, 1)) + LOWER(SUBSTRING(value, 2, LEN(value))), ' ' )
                    FROM STRING_SPLIT(CONCAT(benPersona.cpePrimerNombre, ' ', benPersona.cpeSegundoNombre, ' ', benPersona.cpePrimerApellido, ' ', benPersona.cpeSegundoApellido ), ' ' ) )
            END AS 'nombreBeneficiarioOTrabajador',
			CASE
				WHEN 1 = :causa 	
				THEN 'No se tiene beneficiario o afiliado principal con derecho para poder pagar el subsidio por fallecimiento '
				ELSE 'No se cumple con la condici√≥n de aportes v√°lidos para el per√≠odo de fallecimiento, que habilite el pago del subsidio por fallecimiento'
			END AS causa,
			CASE
				WHEN sllTipoLiquidacionEspecifica = 'DEFUNCION_TRABAJADOR_DEPENDIENTE'  AND dbo.CondicionTrabajador.ctrCondicionPersonaConyuge IS NOT NULL 
				THEN conyuge.cpePersona 
				ELSE trabajador.cpePersona 
			END 
			FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN dbo.CondicionTrabajador WITH (NOLOCK) ON CondicionTrabajador.ctrId = dbo.ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND dbo.CondicionTrabajador.ctrNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN dbo.CondicionPersona AS trabajador WITH (NOLOCK) ON dbo.CondicionTrabajador.ctrCondicionPersona = trabajador.cpeId
			AND dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado = trabajador.cpeNumeroRadicado
			LEFT JOIN dbo.CondicionPersona AS conyuge WITH (NOLOCK)  ON dbo.CondicionTrabajador.ctrCondicionPersonaConyuge = conyuge.cpeId
			AND dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado = conyuge.cpeNumeroRadicado
			INNER JOIN  dbo.SolicitudLiquidacion WITH (NOLOCK) ON dbo.CondicionTrabajador.ctrId = dbo.ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND dbo.SolicitudLiquidacion.sllNumeroRadicacion = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			LEFT JOIN dbo.CondicionBeneficiario WITH (NOLOCK) ON dbo.ResultadoValidacionLiquidacion.rvlCondicionBeneficiario = dbo.CondicionBeneficiario.cbeId
			AND dbo.CondicionBeneficiario.cbeNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			LEFT JOIN dbo.CondicionPersona AS benPersona WITH (NOLOCK) ON benPersona.cpeId = dbo.CondicionBeneficiario.cbeCondicionPersona
			AND benPersona.cpeNumeroRadicado = dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado
			WHERE dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicado
			GROUP BY conyuge.cpePrimerNombre,conyuge.cpeSegundoNombre,conyuge.cpePrimerApellido,conyuge.cpeSegundoApellido,conyuge.cpeTipoIdentificacion,conyuge.cpeNumeroIdentificacion,
			trabajador.cpePrimerNombre,trabajador.cpeSegundoNombre,trabajador.cpePrimerApellido,trabajador.cpeSegundoApellido,trabajador.cpeTipoIdentificacion,trabajador.cpeNumeroIdentificacion,
			benPersona.cpePrimerNombre,benPersona.cpeSegundoNombre,benPersona.cpePrimerApellido,benPersona.cpeSegundoApellido,conyuge.cpePersona,trabajador.cpePersona,
			dbo.SolicitudLiquidacion.sllTipoLiquidacionEspecifica,dbo.CondicionTrabajador.ctrCondicionPersonaConyuge
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.vista360.empleador.liquidacion.exportar.subsidio">
		<description>Consulta que obtiene las liquidaciones pertinentes de un empleador para el proceso de subsidios vistas 360</description>
		<query>
			;WITH per as (
				SELECT perid FROM Persona WITH(NOLOCK)
				WHERE perNumeroIdentificacion =  :numeroIdentificacion
				and perTipoIdentificacion = :tipoIdentificacion
			)
			SELECT
			ResultadoValidacionLiquidacion.rvlNumeroRadicado,
			SolicitudLiquidacion.sllFechaInicio AS fechaLiquidacion,
			TrabajadorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionTrabajador,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionTrabajador,
			CONCAT(TrabajadorDeSubsidio.cpePrimerNombre,' ',TrabajadorDeSubsidio.cpeSegundoNombre,' ',TrabajadorDeSubsidio.cpePrimerApellido,' ',TrabajadorDeSubsidio.cpeSegundoApellido) AS nombreTrabajador,
			BeneficiarioDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionBeneficiario,
			BeneficiarioDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionBeneficiario,
			CONCAT(BeneficiarioDeSubsidio.cpePrimerNombre,' ',BeneficiarioDeSubsidio.cpeSegundoNombre,' ',BeneficiarioDeSubsidio.cpePrimerApellido,' ',BeneficiarioDeSubsidio.cpeSegundoApellido) AS nombreBeneficiario,
			AdministradorDeSubsidio.cpeTipoIdentificacion AS tipoIdentificacionAdministrador,
			AdministradorDeSubsidio.cpeNumeroIdentificacion AS numeroIdentificacionAdministrador,
			CONCAT(AdministradorDeSubsidio.cpePrimerNombre,' ',AdministradorDeSubsidio.cpeSegundoNombre,' ',AdministradorDeSubsidio.cpePrimerApellido,' ',AdministradorDeSubsidio.cpeSegundoApellido) AS nombreAdministrador,
			SUM(ResultadoValidacionLiquidacion.rvlValorCuota) AS valorCuota,
			SUM(ResultadoValidacionLiquidacion.rvlValorDescuento) AS descuento,
			SUM(ResultadoValidacionLiquidacion.rvlValorCuotaAjustada) AS valorPagar,
			MedioDePago.mdpTipo
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona
			AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
			INNER JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona
			AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
			INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona
			AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
			INNER JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador 
			AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario 
			AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
			AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador
			AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN CuotaConsolidadaBeneficiario WITH (NOLOCK) ON (CuotaConsolidadaBeneficiario.ccbCondicionPersonaBeneficiario = BeneficiarioDeSubsidio.cpeId
			AND CuotaConsolidadaBeneficiario.ccbNumeroRadicado = BeneficiarioDeSubsidio.cpeNumeroRadicado)
			INNER JOIN CuotaConsolidadaGrupoFamiliar WITH (NOLOCK) ON (CuotaConsolidadaGrupoFamiliar.cgfId = CuotaConsolidadaBeneficiario.ccbCuotaConsolidadaGrupoFamiliar
			AND CuotaConsOlidadaGrupoFamiliar.cgfNumeroRadicado = CuotaConsolidadaBeneficiario.ccbNumeroRadicado)
			INNER JOIN DispersionMedioDePagoAdmin WITH (NOLOCK) ON (DispersionMedioDePagoAdmin.dmpId = CuotaConsolidadaGrupoFamiliar.cgfDispersionMedioDePagoAdmin
			AND DispersionMedioDePagoAdmin.dmpNumeroRadicado = CuotaConsolidadaGrupoFamiliar.cgfNumeroRadicado)
			INNER JOIN AdministradorSubsidioLiquidacion WITH (NOLOCK) ON AdministradorSubsidioLiquidacion.aslId = DispersionMedioDePagoAdmin.dmpAdministradorSubsidio
			INNER JOIN CondicionPersona AS AdministradorDeSubsidio WITH (NOLOCK) ON (AdministradorDeSubsidio.cpeId = AdministradorSubsidioLiquidacion.aslCondicionPersonaAdministradorSubisidio
			AND AdministradorDeSubsidio.cpeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
			INNER JOIN dbo.AdminSubsidioGrupo WITH (NOLOCK) ON dbo.AdminSubsidioGrupo.asgAdministradorSubsidio = AdministradorSubsidioLiquidacion.aslAdministradorSubsidio 
												 AND dbo.CuotaConsolidadaGrupoFamiliar.cgfGrupoFamiliar = dbo.AdminSubsidioGrupo.asgGrupoFamiliar
			INNER JOIN dbo.MedioDePago WITH (NOLOCK) ON dbo.AdminSubsidioGrupo.asgMedioDePago = dbo.MedioDePago.mdpId								 
			LEFT JOIN (
				SELECT rvlNumeroRadicado, CONVERT (VARCHAR(10), MAX(plsPeriodo)) AS periodo 
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN PeriodoLiquidacionSubsidio ON plsNumeroRadicado = rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON rvlCondicionEmpleador = cemId AND cemNumeroRadicado = rvlNumeroRadicado
				INNER JOIN CondicionPersona cpe WITH (NOLOCK) ON cemCondicionPersona = cpe.cpeId AND cemNumeroRadicado = cpe.cpeNumeroRadicado
				WHERE plsTipoPeriodo = 'REGULAR'
				AND cpePersona in (select perId from Per)
				GROUP BY rvlNumeroRadicado
			) AS b 
			ON ResultadoValidacionLiquidacion.rvlNumeroRadicado = b.rvlNumeroRadicado 
			WHERE ResultadoValidacionLiquidacion.rvlEstadoDerechoLiquidacion IN ('ASIGNAR_DERECHO','DERECHO_ASIGNADO')
			AND (:numeroRadicacion IS NULL OR ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion)
			AND (:fechaInicio IS NULL OR CAST(SolicitudLiquidacion.sllFechaInicio AS DATE) &gt;= CAST(:fechaInicio AS DATE))
			AND (:fechaFin IS NULL OR CAST(SolicitudLiquidacion.sllFechaInicio AS DATE) &lt;= CAST(:fechaFin AS DATE))
			AND ((:periodo IS NULL) OR (b.periodo = CAST(:periodo AS DATE)))
			AND TrabajadorDeSubsidio.cpeId = CuotaConsolidadaGrupoFamiliar.cgfCondicionPersonaTrabajador
			AND EmpleadorDeSubsidio.cpePersona in (select perId from Per)
			GROUP BY ResultadoValidacionLiquidacion.rvlNumeroRadicado, SolicitudLiquidacion.sllFechaInicio, TrabajadorDeSubsidio.cpeTipoIdentificacion,
			TrabajadorDeSubsidio.cpeNumeroIdentificacion, TrabajadorDeSubsidio.cpePrimerNombre,TrabajadorDeSubsidio.cpeSegundoNombre,TrabajadorDeSubsidio.cpePrimerApellido,
			TrabajadorDeSubsidio.cpeSegundoApellido, BeneficiarioDeSubsidio.cpeTipoIdentificacion, BeneficiarioDeSubsidio.cpeNumeroIdentificacion,
			BeneficiarioDeSubsidio.cpePrimerNombre,BeneficiarioDeSubsidio.cpeSegundoNombre,BeneficiarioDeSubsidio.cpePrimerApellido,BeneficiarioDeSubsidio.cpeSegundoApellido,
			AdministradorDeSubsidio.cpeTipoIdentificacion, AdministradorDeSubsidio.cpeNumeroIdentificacion,MedioDePago.mdpTipo,
			AdministradorDeSubsidio.cpePrimerNombre,AdministradorDeSubsidio.cpeSegundoNombre,AdministradorDeSubsidio.cpePrimerApellido,AdministradorDeSubsidio.cpeSegundoApellido
		</query>
	</named-native-query>
	
		<named-native-query name="SubsidioMonetario.consultar.validaciones.por.numeroRadicado.idCondicionPersona">
		<description>Consulta que obtiene las validaciones asociadas a una id de condicion persona y un n√∫mero de radicado</description>
		<query>
			SELECT AplicacionValidacionSubsidio.avsId,
					AplicacionValidacionSubsidio.avsTipoValidacion,
					AplicacionValidacionSubsidio.avsNumeroRadicado,
					AplicacionValidacionSubsidio.avsEsValidable,
					AplicacionValidacionSubsidio.avsShardName,
					AplicacionValidacionSubsidio.avsBeneficiario
			FROM dbo.ResultadoValidacionLiquidacion WITH (NOLOCK)
			INNER JOIN AplicacionValidacionSubsidio WITH (NOLOCK) ON dbo.AplicacionValidacionSubsidio.avsNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			AND AplicacionValidacionSubsidio.avsBeneficiario = :idCondicionPer
			WHERE dbo.ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			GROUP BY avsId, avsTipoValidacion, avsNumeroRadicado,avsEsValidable,avsShardName,avsBeneficiario
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.eliminar.validaciones.idCondicionPersona.numeroRadicados">
		<description>Consulta que se encarga de eliminar las validaciones que se han gestionado</description>
		<query>
			DELETE FROM AplicacionValidacionSubsidio  WHERE avsId IN (:lstIdValidaciones) 
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.actualizar.registro.primeraValidacion">
		<description>Consulta que se encarga de actualizar el resultaado de la validacion del resultado validacion liquidacion con la primera validaci√≥n</description>
		<query>
			UPDATE ResultadoValidacionLiquidacion 
			SET rvlResultadoCausal = :mensaje,
				rvlValorCuota = 0,
				rvlValorCuotaAjustada = 0,
				rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO'
			WHERE rvlId = (			
				 SELECT TOP 1 ResultadoValidacionLiquidacion.rvlId
				 FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				 INNER JOIN CondicionTrabajador WITH (NOLOCK) ON CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				 AND CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador
				 INNER JOIN CondicionPersona WITH (NOLOCK) ON  CondicionPersona.cpeId = CondicionTrabajador.ctrCondicionPersona AND
				 CondicionPersona.cpeId = :idCondicionPer
				 WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
				 GROUP BY ResultadoValidacionLiquidacion.rvlId
				 UNION
				 SELECT TOP 1 ResultadoValidacionLiquidacion.rvlId
				 FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				 INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				 AND CondicionBeneficiario.cbeId =  ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
				 INNER JOIN CondicionPersona WITH (NOLOCK) ON  CondicionPersona.cpeId = CondicionBeneficiario.cbeCondicionPersona AND
				 CondicionPersona.cpeId = :idCondicionPer
				 WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
				 GROUP BY ResultadoValidacionLiquidacion.rvlId
			) 
			
			DELETE den 
			FROM DescuentoEntidad den WITH (NOLOCK)
			INNER JOIN ProyeccionCuotaFallecimiento pcf ON den.denProyeccionCuotaFallecimiento = pcf.pcfId
			INNER JOIN ResultadoValidacionLiquidacion rvl ON rvl.rvlId = pcf.pcfResultadoValidacionLiquidacion
			WHERE rvl.rvlNumeroRadicado = :numeroRadicacion
			
			DELETE pcf 
			FROM ProyeccionCuotaFallecimiento pcf WITH (NOLOCK)
			INNER JOIN ResultadoValidacionLiquidacion rvl ON rvl.rvlId = pcf.pcfResultadoValidacionLiquidacion
			WHERE rvl.rvlNumeroRadicado = :numeroRadicacion
			
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.validacionesRegistro.trabajador.cumple">
		<description>Consulta que se encarga de obtener el id de las validaciones de un numero de radicacion (con excepci√≥n de la primera))</description>
		<query>
			SELECT avsId
			FROM AplicacionValidacionSubsidio
			WHERE AplicacionValidacionSubsidio.avsTipoValidacion &lt;&gt; :validacion
			AND dbo.AplicacionValidacionSubsidio.avsNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.eliminar.registros.trabajador.cumple">
		<description>Consulta que se encarga de eliminar los registros (con excepci√≥n del primero</description>
		<query>
			DELETE FROM ResultadoValidacionLiquidacion WITH (NOLOCK) 
			WHERE rvlNumeroRadicado = :numeroRadicacion
			AND rvlId IN (:lstIdRegistros)
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.registros.trabajador.cumple">
		<description>consulta los registros por numero radicado del trabajador que cumple y se desea devolver el proceso de gestion</description>
		<query>
			SELECT rvlId
			FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			WHERE rvlNumeroRadicado = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.eliminar.registroValidacion.gestionSubsidioFallecimiento">
		<description>Consulta que permite eliminar los registros relacionados a la tabla ResultadoValidacionLiquidacion por sus ids</description>
		<query>
			DELETE FROM GestionSubsidioFallecimiento WITH (NOLOCK) 
			WHERE gsfResultadoValidacionLiquidacion IN (:lstIdRegistros)
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.consultar.idResultadoValidacionLiquidacion.por.condicionPer.beneficiario">
		<description>consulta que obtiene el registro del resultado validacion liquidacion del beneficiario</description>
		<query>
			 SELECT ResultadoValidacionLiquidacion.rvlId
			 FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
			 INNER JOIN CondicionBeneficiario WITH (NOLOCK) ON CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado
			 AND CondicionBeneficiario.cbeId =  ResultadoValidacionLiquidacion.rvlCondicionBeneficiario
			 INNER JOIN CondicionPersona WITH (NOLOCK) ON  CondicionPersona.cpeId = CondicionBeneficiario.cbeCondicionPersona AND
			 CondicionPersona.cpeId = :idCondicionPer
			 WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion
			 GROUP BY ResultadoValidacionLiquidacion.rvlId
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.editar.beneficiarioCumple.resultadoValidacionLiq">
		<description>Consulta que pone en null la columna de condicion beneficiario del registro validacion subsidio del trabajador que cumplia </description>
		<query>
			UPDATE ResultadoValidacionLiquidacion 
			SET rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' , rvlResultadoCausal = :mensaje, rvlValorCuota = 0, rvlValorCuotaAjustada = 0
			WHERE rvlId = :numeroRadicacion
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.eliminar.registrosValidaciones.proyeccionCuotaFallecimiento">
		<description></description>
		<query>
			DELETE FROM ProyeccionCuotaFallecimiento WITH (NOLOCK) 
			WHERE pcfResultadoValidacionLiquidacion IN (:lstIdRegistros)
		</query>
	</named-native-query> 
	
	<named-native-query name="SubsidioMonetario.buscar.condicionValidacion.beneficiarioCumple">
		<description></description>
		<query>
			SELECT AplicacionValidacionSubsidio.*
			FROM AplicacionValidacionSubsidio
			WHERE avsNumeroRadicado = :numeroRadicacion AND avsBeneficiario =:condicionPersona
		</query>
	</named-native-query>
		
	<named-native-query name="subsidioMonetario.consultar.beneficiarios.derechoAsignado.MismoPeriodo">
		<description>Consulta que muestra cuantos beneficiario tienen mas de un derecho asignado para un mismo periodo</description>
		<query>
			;with otrasLiquidaciones as (SELECT rvl.rvlCondicionTrabajador as cpeTrabajador, rvl.rvlCondicionBeneficiario as cpeBeneficiario, coalesce(rvl.rvlEsDiscapacidad,0) as rvlEsDiscapacidad
							FROM ResultadoValidacionLiquidacion rvl WITH (NOLOCK)
							WHERE rvl.rvlNumeroRadicado  &lt;&gt; :numeroRadicado and rvl.rvlEstadoDerechoLiquidacion = 'DERECHO_ASIGNADO')

			SELECT COUNT(*) as cantBeneficiarioDerechoAsigando
			FROM ResultadoValidacionLiquidacion rvl WITH (NOLOCK)			
			inner join otrasLiquidaciones on otrasLiquidaciones.cpeTrabajador = rvl.rvlCondicionTrabajador AND otrasLiquidaciones.cpeBeneficiario = rvl.rvlCondicionBeneficiario AND otrasLiquidaciones.rvlEsDiscapacidad = coalesce(rvl.rvlEsDiscapacidad,0)
			WHERE rvl.rvlNumeroRadicado = :numeroRadicado AND rvl.rvlEstadoDerechoLiquidacion = 'ASIGNAR_DERECHO'
		</query>
	</named-native-query>
	
	<named-native-query name="SubsidioMonetario.actualizar.estadoDerecho.LiquidacionParalela">
		<description></description>
		<query>
			UPDATE ResultadoValidacionLiquidacion 
			SET rvlEstadoDerechoLiquidacion = 'DERECHO_NO_APROBADO' , rvlValorCuota = 0, rvlValorCuotaAjustada = 0
			WHERE rvlNumeroRadicado = :numeroRadicado
		</query>
	</named-native-query>
	
	<named-native-query name="subsidioMonetario.consultar.proceso.actualizacion.staging">
		<description>Consulta que valida si un proceso de staging de subsidios se esta ejecutando</description>
		<query>			
			SELECT count(*) FROM ProcesoActualizacionStaging 
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.condicionPersonaAfiliado.LiquidacionParalela">
		<description>Consulta que permite obtener el numero de afiliados sin condiciones en staging</description>
		<query>
			SELECT DISTINCT perAfi.perId perAfi
			FROM Empleador emp
			JOIN Empresa ems ON ems.empId = emp.empEmpresa
			JOIN Persona perEmp ON perEmp.perId = ems.empPersona
			JOIN RolAfiliado roa ON roa.roaEmpleador = emp.empId 
			JOIN Afiliado afi ON afi.afiId = roa.roaAfiliado
			JOIN Persona perAfi ON perAfi.perId = afi.afiPersona
			JOIN Beneficiario ben ON ben.benAfiliado = afi.afiId 
			JOIN Persona perBen ON perBen.perId = ben.benPersona
			LEFT JOIN staging.CondicionPersona cpeEmp ON cpeEmp.cpePersona = perEmp.perId
			LEFT JOIN staging.CondicionPersona cpeAfi ON cpeAfi.cpePersona = perAfi.perId
			LEFT JOIN staging.CondicionPersona cpeBen ON cpeBen.cpePersona = perBen.perId
			LEFT JOIN staging.CondicionBeneficiario cbe ON cbe.cbeCondicionPersona = cpeBen.cpeId AND cbe.cbePeriodo = :periodo
			LEFT JOIN staging.CondicionTrabajador ctr ON ctr.ctrCondicionPersona = cpeAfi.cpeId AND ctr.ctrPeriodo = :periodo
			LEFT JOIN staging.CondicionEmpleador cem ON cem.cemCondicionPersona = cpeEmp.cpeId AND cem.cemPeriodo = :periodo
			LEFT JOIN staging.CondicionAfiliadoPplBeneficiario cab ON cab.cabCondicionBeneficiario = cbe.cbeId AND cab.cabCondicionTrabajador = ctr.ctrId
			LEFT JOIN staging.CondicionEmpleadorTrabajador cet ON cet.cetCondicionTrabajador = ctr.ctrId AND cet.cetCondicionEmpleador = cem.cemId
			WHERE perAfi.perId IN (:listaIdAfiliados) AND (cbe.cbeId IS NULL OR ctr.ctrId IS NULL OR cem.cemId IS NULL)	
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.condicionPersonaEmpleador.LiquidacionParalela">
		<description>Consulta que permite obtener el numero de afiliados sin condiciones en staging</description>
		<query>
			SELECT DISTINCT emp.empId empId
			FROM Empleador emp
			JOIN Empresa ems ON ems.empId = emp.empEmpresa
			JOIN Persona perEmp ON perEmp.perId = ems.empPersona
			JOIN RolAfiliado roa ON roa.roaEmpleador = emp.empId 
			JOIN Afiliado afi ON afi.afiId = roa.roaAfiliado
			JOIN Persona perAfi ON perAfi.perId = afi.afiPersona
			JOIN Beneficiario ben ON ben.benAfiliado = afi.afiId 
			JOIN Persona perBen ON perBen.perId = ben.benPersona
			LEFT JOIN staging.CondicionPersona cpeEmp ON cpeEmp.cpePersona = perEmp.perId
			LEFT JOIN staging.CondicionPersona cpeAfi ON cpeAfi.cpePersona = perAfi.perId
			LEFT JOIN staging.CondicionPersona cpeBen ON cpeBen.cpePersona = perBen.perId
			LEFT JOIN staging.CondicionBeneficiario cbe ON cbe.cbeCondicionPersona = cpeBen.cpeId AND cbe.cbePeriodo = :periodo
			LEFT JOIN staging.CondicionTrabajador ctr ON ctr.ctrCondicionPersona = cpeAfi.cpeId AND ctr.ctrPeriodo = :periodo
			LEFT JOIN staging.CondicionEmpleador cem ON cem.cemCondicionPersona = cpeEmp.cpeId AND cem.cemPeriodo = :periodo
			LEFT JOIN staging.CondicionAfiliadoPplBeneficiario cab ON cab.cabCondicionBeneficiario = cbe.cbeId AND cab.cabCondicionTrabajador = ctr.ctrId
			LEFT JOIN staging.CondicionEmpleadorTrabajador cet ON cet.cetCondicionTrabajador = ctr.ctrId AND cet.cetCondicionEmpleador = cem.cemId
			WHERE emp.empId IN (:listaIdEmpleadores) AND (cbe.cbeId IS NULL OR ctr.ctrId IS NULL OR cem.cemId IS NULL)
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.par.afiliadoBeneficiario.bloqueados">
		<description>Consulta que obtiene los beneficiarios bloqueados del bloqueo par afiliado beneficiario</description>
		<query>
			SELECT 
			perBen.perTipoIdentificacion as TipoIdentificacionBen,
			perBen.perNumeroIdentificacion as NumeroIdentificacionBen,
			perBen.perRazonSocial,
			perAfi.perTipoIdentificacion as TipoIdentificacionAfi,
			perAfi.perNumeroIdentificacion as NumeroIdentificacionAfi,
			est.benEstadoBeneficiarioAfiliado,
			bab.babMotivoFraude,
			bab.babMotivoNoAcreditado,
			bab.babCausalBloqueo,
			bab.babPeriodoInicio,
			bab.babPeriodoFin,
			ben.benTipoBeneficiario,
			lbp.lbpFecha
			FROM BloqueoAfiliadoBeneficiarioCM bab
			RIGHT JOIN Persona perBen on bab.babPersonaBeneficiario = perBen.perId
			LEFT JOIN PersonaDetalle ped on ped.pedPersona = perBen.perId
			LEFT JOIN Persona perAfi on bab.babPersonaAfiliado = perAfi.perId
			LEFT JOIN Afiliado a on a.afiPersona = perAfi.perId 
			LEFT JOIN Beneficiario ben ON (ben.benPersona = perBen.perId AND ben.benAfiliado = a.afiId)
			LEFT JOIN VW_EstadoAfiliacionBeneficiario est on est.perId = perBen.perId
			LEFT JOIN LogBloqueoPar lbp ON lbp.lbpNumeroRegistro = bab.babId
			WHERE bab.babBloqueado = 1 and bab.babValidacionExitosa = 1
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.existencia.beneficiarios.bloqueados.subsidio">
		<description>Consulta que valida la existencia de los beneficiarios bloqueados del bloqueo par afiliado beneficiario</description>
		<query>
			SELECT top 1
			perBen.perTipoIdentificacion as TipoIdentificacionBen,
			perBen.perNumeroIdentificacion as NumeroIdentificacionBen,
			perBen.perRazonSocial,
			perAfi.perTipoIdentificacion as TipoIdentificacionAfi,
			perAfi.perNumeroIdentificacion as NumeroIdentificacionAfi,
			est.benEstadoBeneficiarioAfiliado,
			bab.babMotivoFraude,
			bab.babMotivoNoAcreditado,
			bab.babMotivoOtro,
			bab.babPeriodoInicio,
			bab.babPeriodoFin
			FROM BloqueoAfiliadoBeneficiarioCM bab
			RIGHT JOIN Persona perBen on bab.babPersonaBeneficiario = perBen.perId
			LEFT JOIN PersonaDetalle ped on ped.pedPersona = perBen.perId
			LEFT JOIN Persona perAfi on bab.babPersonaAfiliado = perAfi.perId
			LEFT JOIN VW_EstadoAfiliacionBeneficiario est on est.perId = perBen.perId
			WHERE bab.babBloqueado = 1 and bab.babValidacionExitosa = 1
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.desbloquear.par.afiliado.beneficiario">
		<query>
		UPDATE BloqueoAfiliadoBeneficiarioCM
		SET babBloqueado = 0
		WHERE babId = :idBloqueoAfiliadoBeneficiarioCM
 		</query>
	</named-native-query>
	<named-native-query
		name="SubsidioMonetario.consultar.trabajador.bloqueado.subsidio">
		<query>
			SELECT babId FROM BloqueoAfiliadoBeneficiarioCM
			WHERE babBbcId = :bbcId
 		</query>
	</named-native-query>
	<named-native-query
		name="SubsidioMonetario.consultar.par.afiliados.beneficiarios.bloqueados.por.filtros">
		<query>
		select
		bab.babId, 
		perBen.perid as perIdBen, 
		perBen.perTipoIdentificacion as tipoIdentificacionBen,
		perBen.perNumeroIdentificacion as numeroIdentificacionBen,
		perBen.perRazonSocial,
		est.benEstadoBeneficiarioAfiliado,
		perAfi.perid as perIdAfi, 
		perAfi.perTipoIdentificacion as tipoIdentificacionAfi,
		perAfi.perNumeroIdentificacion as numeroIdentificacionAfi,	
		bab.babMotivoFraude,
		bab.babMotivoNoAcreditado,
		bab.babMotivoOtro,
		bab.babPeriodoInicio,
		bab.babPeriodoFin,
		ben.benTipoBeneficiario
		FROM BloqueoAfiliadoBeneficiarioCM bab
		JOIN Persona perBen on bab.babPersonaBeneficiario = perBen.perId
		JOIN PersonaDetalle ped on ped.pedPersona = perBen.perId
		JOIN Persona perAfi on bab.babPersonaAfiliado = perAfi.perId
		JOIN Beneficiario ben on ben.benPersona = perBen.perId
		JOIN VW_EstadoAfiliacionBeneficiario est on est.perId = perBen.perId
		WHERE bab.babBloqueado = 1 and bab.babValidacionExitosa = 1
		AND ((:numeroIdentificacion IS NULL OR perBen.pernumeroidentificacion = :numeroIdentificacion)
		AND (:tipoIdentificacion IS NULL OR perBen.perTipoIdentificacion = :tipoIdentificacion)
		AND (:primerNombre IS NULL  OR perBen.perPrimerNombre LIKE  :primerNombre)
		AND (:segundoNombre IS NULL OR perBen.perSegundoNombre LIKE  :segundoNombre)
		AND (:primerApellido IS NULL OR perBen.perPrimerApellido LIKE :primerApellido)
		AND (:segundoApellido IS NULL OR perBen.perSegundoApellido LIKE  :segundoApellido)
		AND (:fechaNacimiento = '1800-01-01' OR ped.pedFechaNacimiento = :fechaNacimiento))
 		</query>
	</named-native-query>

	<named-native-query
		name="SubsidioMonetario.consultar.liquidacion.masiva.sin.derecho">
		<description>Constante que permite obtener una liquidaci√≥n masiva sin derecho</description>
		<query>
				SELECT TOP 7000 sllFechaInicio as Fecha_de_liquidaci√≥n, sllTipoLiquidacion as Tipo_de_liquidaci√≥n, sllTipoLiquidacionEspecifica as Subtipo_de_liquidaci√≥n, EmpleadorDeSubsidio.cpeTipoIdentificacion as Tipo_de_identificaci√≥n_del_Empleador, EmpleadorDeSubsidio.cpeNumeroIdentificacion as N√∫mero_de_identificaci√≥n_del_Empleador, EmpleadorDeSubsidio.cpeRazonSocial as Nombre_del_Empleador,
				cemCodigoCIIU as CII, cemAgropecuario as Condici√≥n_Agraria, cemCodigoSucursal as C√≥digo_sucursal , cemEstadoBeneficio1429 as A√±o_del_beneficio_1429, TrabajadorDeSubsidio.cpeTipoIdentificacion as Tipo_de_identificaci√≥n_del_Trabajador, TrabajadorDeSubsidio.cpeNumeroIdentificacion as N√∫mero_de_identificaci√≥n_del_Trabajador, TrabajadorDeSubsidio.cpeRazonSocial as Nombre_del_Trabajador,
				BeneficiarioDeSubsidio.cpeTipoIdentificacion as Tipo_de_identificaci√≥n_del_beneficiario, BeneficiarioDeSubsidio.cpeNumeroIdentificacion as N√∫mero_de_identificaci√≥n_del_beneficiario, BeneficiarioDeSubsidio.cpeRazonSocial as Nombre_del_beneficiario, cabTipoBeneficiario as Tipo_de_solicitante, cabClasificacion as Clasificaci√≥n, ResultadoValidacionLiquidacion.rvlResultadoCausal as Causal_de_no_cumplimiento,
				per.plsPeriodo as Periodo_liquidado, per.plsTipoPeriodo as Tipo_de_periodo_liquidado				
				FROM ResultadoValidacionLiquidacion WITH (NOLOCK)
				INNER JOIN SolicitudLiquidacion WITH (NOLOCK) ON SolicitudLiquidacion.sllNumeroRadicacion = ResultadoValidacionLiquidacion.rvlNumeroRadicado
				INNER JOIN CondicionEmpleador WITH (NOLOCK) ON (CondicionEmpleador.cemId = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleador.cemNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				INNER JOIN CondicionPersona AS EmpleadorDeSubsidio WITH (NOLOCK) ON (EmpleadorDeSubsidio.cpeId = CondicionEmpleador.cemCondicionPersona AND EmpleadorDeSubsidio.cpeNumeroRadicado = CondicionEmpleador.cemNumeroRadicado)
				LEFT JOIN CondicionTrabajador WITH (NOLOCK) ON (CondicionTrabajador.ctrId = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionTrabajador.ctrNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS TrabajadorDeSubsidio WITH (NOLOCK) ON (TrabajadorDeSubsidio.cpeId = CondicionTrabajador.ctrCondicionPersona AND TrabajadorDeSubsidio.cpeNumeroRadicado = CondicionTrabajador.ctrNumeroRadicado)
				LEFT JOIN CondicionBeneficiario WITH (NOLOCK) ON (CondicionBeneficiario.cbeId = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionBeneficiario.cbeNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionPersona AS BeneficiarioDeSubsidio WITH (NOLOCK) ON (BeneficiarioDeSubsidio.cpeId = CondicionBeneficiario.cbeCondicionPersona AND BeneficiarioDeSubsidio.cpeNumeroRadicado = CondicionBeneficiario.cbeNumeroRadicado)
				LEFT JOIN CondicionEmpleadorTrabajador WITH (NOLOCK) ON (CondicionEmpleadorTrabajador.cetCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionEmpleadorTrabajador.cetCondicionEmpleador = ResultadoValidacionLiquidacion.rvlCondicionEmpleador AND CondicionEmpleadorTrabajador.cetNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN CondicionAfiliadoPplBeneficiario WITH (NOLOCK) ON (CondicionAfiliadoPplBeneficiario.cabCondicionTrabajador = ResultadoValidacionLiquidacion.rvlCondicionTrabajador AND CondicionAfiliadoPplBeneficiario.cabCondicionBeneficiario = ResultadoValidacionLiquidacion.rvlCondicionBeneficiario AND CondicionAfiliadoPplBeneficiario.cabNumeroRadicado = ResultadoValidacionLiquidacion.rvlNumeroRadicado)
				LEFT JOIN PeriodoLiquidacionSubsidio per WITH (NOLOCK) ON (CondicionBeneficiario.cbeNumeroRadicado = per.plsNumeroRadicado)
				WHERE ResultadoValidacionLiquidacion.rvlNumeroRadicado = :numeroRadicacion           
		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.proceso.subsidio">
		<query>		
			SELECT CASE WHEN EXISTS (SELECT 1 FROM ProcesoLiquidacion)
			OR EXISTS (SELECT 1 FROM ProcesoEliminacion)
			OR EXISTS (SELECT 1 FROM ProcesoActualizacionStaging) THEN 1 ELSE 0 END
 		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.procesoEliminacion.subsidio">
		<query>		
			SELECT CASE WHEN EXISTS (SELECT 1 FROM ProcesoEliminacion WHERE preNumeroRadicado =:numeroRadicado) THEN 1 ELSE 0 END
 		</query>
	</named-native-query>
	
	<named-native-query
		name="SubsidioMonetario.consultar.descuentosSubsidioTrabajador">
		<query>
			SELECT smvp.smvCodigoGrupoFamiliar,smvp.smvValorPignorado,aedsp.ardEntidadDescuento, smvp.smvCodigoReferencia
			FROM SubsidioMonetarioValorPignorado smvp
			LEFT JOIN ArchivoEntidadDescuentoSubsidioPignorado aedsp on aedsp.ardId = smvp.smvArchivoEntidadDescuentoSubsidioPignorado 
			WHERE smvp.smvNumeroIdentificacionTrabajador = :numeroIdentificacion 
			AND smvp.smvTipoIdentificacionTrabajador = :tipoIdentificacion
			AND smvp.smvResultado = 'APLICADO'
			AND smvp.smvNumeroRadicado = :numeroRadicacion
			ORDER BY smvp.smvCodigoGrupoFamiliar
 		</query>
	</named-native-query>
	
	<named-native-query
		name="SSubsidioMonetario.Consultar.Registros.Liquidacion.Sin.Derecho">
		<query>		
			select count(*) from DataSourceReporteSinDerecho where numeroRadicado = :numeroRadicado
 		</query>
	</named-native-query>
	<!-- ESPACIO PARA STORED PROCEDURES -->

	<named-stored-procedure-query
		name="SubsidioMonetario.StoredProcedures.USP_SM_GET_ResultadoLiquidacion"
		procedure-name="USP_SM_GET_ResultadoLiquidacion_Historico">
		<parameter class="java.lang.String" mode="IN" name="NumeroRadicado" />
		<parameter class="java.util.Date" mode="IN" name="PeriodoRegular" />
		<parameter class="java.lang.String" mode="IN" name="TipoLiquidacion" />
	</named-stored-procedure-query>

	<named-stored-procedure-query
		name="SubsidioMonetario.StoredProcedures.USP_SM_UTIL_EnviarConsolidadoAPagos"
		procedure-name="USP_SM_UTIL_EnviarConsolidadoAPagos">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
		<parameter class="java.lang.String" mode="IN" name="sUsuario" />
		<parameter class="java.lang.Boolean" mode="IN" name="bFormaPago" />
	</named-stored-procedure-query>

	<named-stored-procedure-query
		name="SubsidioMonetario.StoredProcedures.USP_SM_UTIL_ActivarEnColaProceso"
		procedure-name="USP_SM_UTIL_ActivarEnColaProceso">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
	</named-stored-procedure-query>
	
	<named-stored-procedure-query
		name="SubsidioMonetario.StoredProcedures.USP_SM_UTIL_ConsolidarSubsidiosFallecimiento"
		procedure-name="USP_SM_UTIL_ConsolidarSubsidiosFallecimiento">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
		<parameter class="java.lang.Boolean" mode="IN" name="bFormaPago" />
	</named-stored-procedure-query>
	
	<named-stored-procedure-query
		name="SSubsidioMonetario.StoredProcedures.USP_SM_UTIL_CancelarResultadoValidacionLiquidacion"
		procedure-name="USP_SM_UTIL_CancelarResultadoValidacionLiquidacion">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />		
	</named-stored-procedure-query>
	
	<named-stored-procedure-query
		name="SSubsidioMonetario.StoredProcedures.USP_SM_GET_ResultadoLiquidacionSinDerecho"
		procedure-name="USP_SM_GET_ResultadoLiquidacionSinDerecho">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
		<parameter class="java.lang.Integer" mode="IN" name="offset" />
		<parameter class="java.lang.Integer" mode="IN" name="rows" />
		<parameter class="java.lang.String" mode="IN" name="tipoIdentificacion" />
		<parameter class="java.lang.String" mode="IN" name="numeroIdentificacion" />
	</named-stored-procedure-query>


	<named-stored-procedure-query
		name="SSubsidioMonetario.StoredProcedures.USP_SM_LIMPIAR_ResultadoLiquidacionSinDerecho"
		procedure-name="USP_SM_LIMPIAR_ResultadoLiquidacionSinDerecho">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
	</named-stored-procedure-query>

	<named-stored-procedure-query
		name="SubsidioMonetario.StoredProcedure.InsercionCondiciones.Dbo"
		procedure-name="USP_SM_UTIL_INSERT_CONDICIONES_DBO">
		<parameter class="java.lang.String" mode="IN" name="sNumeroRadicado" />
	</named-stored-procedure-query>

	<named-stored-procedure-query
		name="SubsidioMonetario.sp.vista360.empleador.liquidacion"
		procedure-name="USP_SM_GET_ConsultaLiquidacionesPorEmpleador">
		<parameter class="java.lang.String" mode="IN" name="tipoIdentificacion" />
		<parameter class="java.lang.String" mode="IN" name="numeroIdentificacion" />
		<parameter class="java.lang.String" mode="IN" name="periodo" />
		<parameter class="java.lang.String" mode="IN" name="fechaInicio" />
		<parameter class="java.lang.String" mode="IN" name="fechaFin" />
		<parameter class="java.lang.String" mode="IN" name="numeroRadicado" />
	</named-stored-procedure-query>
</entity-mappings>
