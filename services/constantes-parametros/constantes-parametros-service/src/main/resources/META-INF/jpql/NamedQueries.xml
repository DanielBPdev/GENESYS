<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">
	<!-- ESPACIO PARA NAMED QUERIES JPA -->
	<named-query name="Parametro.consultar.ParametrizacionGaps.id.estado">
		<query>
			select  p from ParametrizacionGaps p
			where p.nombre = :parametro
		</query>
	</named-query>

	<named-query name="buscar.sede.caja.compensacion">
		<query>
   		SELECT scc FROM SedeCajaCompensacion scc
   		WHERE scc.idSedeCajaCompensacion = :idSede
   		</query>
	</named-query>
	<named-query name="buscar.constantes">
		<query>
			SELECT cons FROM Constante cons
			WHERE cons.nombre IN :listaConstantes
		</query>
	</named-query>

	<named-query name="buscar.valores.uvt">
		<query>
			SELECT new com.asopagos.constantes.parametros.dto.ConstantesValorUVTDTO(p.idValorUVT, p.anio, p.valorUVT)
			FROM ParametrizacionValorUVT p
		</query>
	</named-query>

	<named-query name="buscar.valoruvt.por.id">
		<query>
			SELECT p FROM ParametrizacionValorUVT p WHERE p.idValorUVT = :idValorUVT
		</query>
	</named-query>
	
	<named-query name="buscar.valoruvt.por.anio">
		<query>
			SELECT p FROM ParametrizacionValorUVT p WHERE p.anio = :anio
		</query>
	</named-query>

	<named-query name="buscar.parametros">
		<query>
			SELECT param FROM Parametro param
			WHERE param.nombre IN :listaParametros
		</query>
	</named-query>
	
	<named-query name="buscar.parametros.por.nombre">
		<query>
			SELECT param FROM Parametro param WHERE param.nombre = :nombreParametro
		</query>
	</named-query>
	
	<named-query name="buscar.dependencias">
		<query>SELECT area FROM AreaCajaCompensacion area</query>
	</named-query>
	
	<named-query name="buscar.dependencias.id">
		<query>SELECT area FROM AreaCajaCompensacion area 
		WHERE area.idAreaCajaCompensacion = :idAreaCajaCompensacion</query>
	</named-query>
	
	<named-query name="buscar.constantes.inicio">
		<query>
			SELECT cons FROM Constante cons
		</query>
	</named-query>
	
	<named-query name="buscar.parametros.inicio">
		<query>
			SELECT param FROM Parametro param
		</query>
	</named-query>

	<named-query name="constantes.parametros.obtener.constante">
		<query>
			SELECT c.valor FROM Constante c WHERE c.nombre = :key
		</query>
	</named-query>
	
	<named-query name="constantes.parametros.obtener.parametro">
		<query>
			SELECT p.valor FROM Parametro p WHERE p.nombre = :key
		</query>
	</named-query>
        
	<named-query name="constantes.parametros.buscar.beneficios">
		<query>
			SELECT ben FROM Beneficio ben WHERE ben.tipoBeneficio IN :listaParametrosBeneficio
		</query>
	</named-query>

	<named-query name="Gestor.cache.consultar.actualizar.parametros">
		<query>
            SELECT p FROM Parametro p
            WHERE p.nombre = :nombreParametro
		</query>
	</named-query>        
	
	<named-query name="Parametro.buscar.operadorInformacionYcajaPorId">
		<query>
			SELECT oiccf FROM OperadorInformacionCcf oiccf
			WHERE oiccf.id = :idOperador
		</query>
	</named-query>
	
	<named-query name="Parametro.cosultar.cajaCompensacion">
		<query>
			SELECT c FROM CajaCompensacion c
			WHERE c.idCajaCompensacion = :ccfId
		</query>
	</named-query>
	
	<named-query name="Parametro.buscar.operadorInformacion">
		<query>
			SELECT oi FROM OperadorInformacion oi
			WHERE oi.id = :idOperador
		</query>
	</named-query>

	<named-query name="Parametro.buscar.datosConexionOperadorInformacionPorId">
		<query>
			SELECT coi FROM ConexionOperadorInformacion coi
			WHERE coi.id = :idConexion
		</query>
	</named-query>	
	
	<named-query name="Parametro.buscar.operadoresInformacion">
		<query>
			SELECT oi FROM OperadorInformacion oi
		</query>
	</named-query>
	
	<named-query name="Parametro.buscar.parametroMargenToleranciaAporte">
		<query>
			select prm from Parametro prm where prm.nombre = :nombreParametro
		</query>
	</named-query>
	
	<!-- ESPACIO PARA NAMED QUERIES NATIVOS -->
	<named-native-query name="Parametro.buscar.conexionesOperadorInformacion" result-set-mapping="ConexionOperadorInformacionDTOMapping">
		<query>
			SELECT
				coiId AS id,
				coiNombre AS nombre,
				coiProtocolo AS protocolo,
				coiUrl AS url,
				coiPuerto AS puerto,
				coiHost AS host,
				coiUsuario AS usuario,
				coiContrasena AS contrasena,
				oicOperadorInformacion AS idOperadorInformacion
			FROM ConexionOperadorInformacion
			JOIN OperadorInformacionCcf ON CoiOperadorInformacionCcf = oicId
			WHERE (:nombre IS NULL OR coiNombre = :nombre)
			AND (:host IS NULL OR coiHost = :host)
			AND (:url IS NULL OR coiUrl = :url)
			AND (:puerto IS NULL OR coiPuerto = :puerto)
			AND (:idOperadorInformacion IS NULL OR oicOperadorInformacion = :idOperadorInformacion)
		</query>
	</named-native-query>

			<named-native-query name="Parametro.consultar.ParametrizacionGaps.id">
		<query>
			select prgid from ParametrizacionGaps
			where prgNombre = :nombre
		</query>
	</named-native-query>
	
	<sql-result-set-mapping name="ConexionOperadorInformacionDTOMapping">
		<constructor-result target-class="com.asopagos.dto.ConexionOperadorInformacionDTO">
			<column name="id" class="java.lang.Long"/>
			<column name="nombre" class="java.lang.String"/>
			<column name="protocolo" class="java.lang.String"/>
			<column name="url" class="java.lang.String"/>
			<column name="puerto" class="java.lang.Short"/>
			<column name="host" class="java.lang.String"/>
			<column name="usuario" class="java.lang.String"/>
			<column name="contrasena" class="java.lang.String"/>
			<column name="idOperadorInformacion" class="java.lang.Long"/>
		</constructor-result>
	</sql-result-set-mapping>
	
	
	<named-query name="Constantes.obtener.dummy">
		<query>
			select c from Constante c where c.nombre = 'FECHA_DUMMY'
		</query>
	</named-query>
	
</entity-mappings>
