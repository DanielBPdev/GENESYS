<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">

	<!-- ESPACIO PARA NAMED QUERIES JPA -->
	<named-query
		name="novedades.fovis.consultarPostulacionesSuspencionAutomaticaCambioAno">
		<description>Busca las postulaciones que seran suspendidas por cambio de año</description>
		<query>
			SELECT DISTINCT (ps)
			FROM PostulacionFOVIS ps
			WHERE ps.estadoHogar IN ('POSTULADO','HABIL', 'HABIL_SEGUNDO_ANIO')
        </query>
	</named-query>
	<named-query name="novedades.fovis.consultar.por.idSolicitudGlobal">
		<description>Busca una solicitud de novedad fovis por el ig de la solicitud global</description>
		<query>
			SELECT snf
			FROM SolicitudNovedadFovis snf
			INNER JOIN FETCH snf.solicitudGlobal sol
			WHERE sol.idSolicitud = :idSolicitudGlobal
        </query>
	</named-query>

    <named-query name="novedades.fovis.consultar.solicitud.por.idPostulacion.tipoTransaccion.resultado">
        <description>Busca una solicitud de novedad fovis por el id de postulacion, tipo transaccion y resultado de proceso</description>
        <query>
            SELECT new com.asopagos.dto.modelo.SolicitudNovedadFovisModeloDTO(snf)
            FROM SolicitudNovedadPersonaFovis spf,
            SolicitudNovedadFovis snf
            INNER JOIN snf.solicitudGlobal sol
            WHERE spf.idSolicitudNovedadFovis = snf.idSolicitudNovedadFovis
            AND spf.idPostulacionFovis = :idPostulacion
            AND sol.tipoTransaccion = :tipoNovedad
            AND sol.resultadoProceso = :resultadoProceso
            ORDER BY sol.fechaRadicacion desc
        </query>
    </named-query>

	<named-query
		name="novedades.fovis.consultarPostulacionesRechazoAutomaticaCambioAno">
		<description>Busca las postulaciones que seran rechazadas por cambio de año</description>
		<query>
			SELECT DISTINCT (ps)
			FROM PostulacionFOVIS ps
			WHERE ps.estadoHogar = 'SUSPENDIDO_POR_CAMBIO_DE_ANIO'
			AND ps.idPostulacion NOT IN (SELECT psf.idPostulacion
			FROM PostulacionFOVIS psf, SolicitudNovedadPersonaFovis snpf, SolicitudNovedadFovis snf, Solicitud sg
			WHERE psf.idPostulacion = snpf.idPostulacionFovis
			AND snpf.idSolicitudNovedadFovis = snf.idSolicitudNovedadFovis
			AND snf.solicitudGlobal.idSolicitud = sg.idSolicitud
			AND snf.estadoSolicitud != 'NOV_FOVIS_RECHAZADA'
			AND sg.tipoTransaccion = 'HABILITACION_POSTULACION_SUSPENDIDA_CAMBIO_ANIO')
        </query>
	</named-query>

	<named-query
		name="novedades.fovis.consultarPostulacionesVencimiendoSubsidios">
		<description>Busca las postulaciones que sera actualizado su estado de hogar por vencimiento de subsidios</description>
		<query>
			SELECT new com.asopagos.dto.modelo.PostulacionFOVISModeloDTO(ps, asf.fechaPublicacion) 
			FROM PostulacionFOVIS ps, SolicitudAsignacion sa, ActaAsignacionFOVIS asf
			WHERE ps.idSolicitudAsignacion = sa.idSolicitudAsignacion
			AND sa.idSolicitudAsignacion= asf.idSolicitudAsignacion			
			AND ps.estadoHogar = :estadoHogar
			AND ps.idPostulacion NOT IN (SELECT psf.idPostulacion
			FROM PostulacionFOVIS psf, SolicitudNovedadPersonaFovis snpf, SolicitudNovedadFovis snf, Solicitud sg
			WHERE psf.idPostulacion = snpf.idPostulacionFovis
			AND snpf.idSolicitudNovedadFovis = snf.idSolicitudNovedadFovis
			AND snf.solicitudGlobal.idSolicitud = sg.idSolicitud
			AND snf.estadoSolicitud != 'NOV_FOVIS_RECHAZADA'
			AND sg.tipoTransaccion = 'CAMBIO_REEMPLAZANTE_JEFE') 
        </query>
	</named-query>

	<named-query
		name="novedades.fovis.consultar.solicitud.analisis.novedad.afecta.postulacion">
		<query>
		  SELECT new com.asopagos.dto.modelo.SolicitudAnalisisNovedadFOVISModeloDTO(san, 
		      sno, pof, per, solspo.numeroRadicacion, spo.estadoSolicitud,
		      (SELECT saf.estadoSolicitudAsignacion FROM SolicitudAsignacion saf WHERE saf.idSolicitudAsignacion = pof.idSolicitudAsignacion),
		      (SELECT sld.estadoSolicitud FROM SolicitudLegalizacionDesembolso sld WHERE sld.idPostulacionFOVIS = pof.idPostulacion))
		  FROM SolicitudAnalisisNovedadFovis san
		  JOIN san.solicitudGlobal sol,
		  SolicitudNovedad sno
		  JOIN sno.solicitudGlobal solsno,
		  PostulacionFOVIS pof,
		  Persona per,
		  SolicitudPostulacion spo
		  JOIN spo.solicitudGlobal solspo
		  WHERE san.solicitudNovedad = sno.idSolicitudNovedad
		  AND san.idPostulacionFovis = pof.idPostulacion
		  AND san.idPersonaNovedad = per.idPersona
		  AND spo.idPostulacionFOVIS = pof.idPostulacion
		  AND sol.idSolicitud = :idSolicitud
		</query>
	</named-query>

	<named-query name="novedades.fovis.consultar.solicitud.analisis.novedad.id">
		<query>
		  SELECT san
		  FROM SolicitudAnalisisNovedadFovis san
          JOIN FETCH san.solicitudGlobal sol
          WHERE sol.idSolicitud = :idSolicitud
		</query>
	</named-query>

	<named-query name="novedades.fovis.consultar.ActoAceptacionProrrogaFovis.SolicitudNovedadFovis">

		<description>consulta que obtiene el acto de aceptación de una novedad de prorroga Fovis</description>
		<query>
			SELECT aaf
			FROM ActoAceptacionProrrogaFovis aaf
			WHERE aaf.idSolicitudNovedadFovis = :idSolicitudNovedadFovis
        </query>
	</named-query>

	<!-- ESPACIO PARA NAMED QUERIES NATIVOS -->
	<named-native-query
		name="novedades.fovis.consultar.SolicitudNovedadFovis.Prorroga.Reporte">
		<query>
			SELECT snfId, snfEstadoSolicitud, sol.solNumeroRadicacion, sol.solFechaRadicacion, sol.solResultadoProceso,
				pof.pofId, pof.pofEstadoHogar, per.perTipoIdentificacion, per.perNumeroIdentificacion,
				per.perPrimerNombre + ' '
				+ CASE WHEN per.perSegundoNombre IS NOT NULL THEN per.perSegundoNombre ELSE '' END + ' ' 
				+ per.perPrimerApellido + ' '
				+ CASE WHEN per.perSegundoApellido IS NOT NULL THEN per.perSegundoApellido ELSE '' END	AS nombresJefeHogar
			FROM SolicitudNovedadFovis snf
			JOIN Solicitud sol ON sol.solId = snf.snfSolicitudGlobal
			JOIN SolicitudNovedadPersonaFovis snp ON snp.spfSolicitudNovedadFovis = snf.snfId
			JOIN PostulacionFOVIS pof ON pof.pofId = snp.spfPostulacionFovis
			JOIN JefeHogar jeh ON jeh.jehId = pof.pofJefeHogar
			JOIN dbo.Afiliado afi ON afi.afiId = jeh.jehAfiliado
			JOIN dbo.Persona per ON per.perId = afi.afiPersona
			LEFT JOIN ActoAceptacionProrrogaFovis aaf ON aaf.aapSolicitudNovedadFovis = snf.snfId
			WHERE sol.solResultadoProceso = :resultadoProceso
				AND sol.solTipoTransaccion = :tipoTransaccion
				AND sol.solFechaRadicacion &gt;= :fechaInicial
				AND sol.solFechaRadicacion &lt; DATEADD(DAY, 1, :fechaFinal)
				AND aaf.aapId IS NULL
		</query>
	</named-native-query>
	
	<named-native-query	name="novedades.fovis.consultarHistoricoSolicitudesNovedadesFovis">
		<description>Consulta el historico de las solicitudes de postulacion</description>
		<query>
			SELECT solicitudGlobal.solId, solicitudGlobal.solNumeroRadicacion, solicitudGlobal.solFechaRadicacion,
				   solicitudNovedadFovis.snfId, solicitudNovedadFovis.snfEstadoSolicitud,
				   comunicado.comIdentificaArchivoComunicado			      
			FROM Solicitud solicitudGlobal,
				 SolicitudNovedadFovis solicitudNovedadFovis,
				 Comunicado comunicado
			WHERE solicitudGlobal.solId = solicitudNovedadFovis.snfSolicitudGlobal	
				  AND comunicado.comSolicitud = 	solicitudNovedadFovis.snfSolicitudGlobal		  
				  AND (solicitudGlobal.solNumeroRadicacion = :numeroSolicitud OR :numeroSolicitud IS NULL)
				  AND (solicitudNovedadFovis.snfEstadoSolicitud = :estadoSolicitudNovedad OR :estadoSolicitudNovedad IS NULL)
				  AND (solicitudGlobal.solNumeroRadicacion = :fechaExactaRadicacion OR :fechaExactaRadicacion IS NULL)				 
		</query>
	</named-native-query>
	
	<named-native-query	name="novedades.fovis.consultarHistoricoSolicitudesNovedadesFovisRangoFechas">
		<description>Consulta el historico de las solicitudes de postulacion</description>
		<query>
			SELECT solicitudGlobal.solId, solicitudGlobal.solNumeroRadicacion, solicitudGlobal.solFechaRadicacion,
				   solicitudNovedadFovis.snfId, solicitudNovedadFovis.snfEstadoSolicitud,
				   comunicado.comIdentificaArchivoComunicado			      
			FROM Solicitud solicitudGlobal,
				 SolicitudNovedadFovis solicitudNovedadFovis,
				 Comunicado comunicado
			WHERE solicitudGlobal.solId = solicitudNovedadFovis.snfSolicitudGlobal	
				  AND comunicado.comSolicitud = 	solicitudNovedadFovis.snfSolicitudGlobal		  
				  AND (solicitudGlobal.solNumeroRadicacion = :numeroSolicitud OR :numeroSolicitud IS NULL)
				  AND (solicitudNovedadFovis.snfEstadoSolicitud = :estadoSolicitudNovedad OR :estadoSolicitudNovedad IS NULL)
				  AND (solicitudGlobal.solNumeroRadicacion = :fechaExactaRadicacion OR :fechaExactaRadicacion IS NULL)
				  AND solicitudGlobal.solNumeroRadicacion BETWEEN :fechaInicio AND :fechaFin
		</query>
	</named-native-query>

    <named-native-query name="fovis.consultar.solicitudes.asociadas.postulacion.by.id" 
        result-set-mapping="fovis.consultar.solicitudes.asociadas.postulacion.by.id.Mapping">
        <query>
            SELECT *
            FROM PostulacionFOVIS pof
            JOIN SolicitudPostulacion spo ON (spo.spoPostulacionFOVIS = pof.pofId)
            JOIN Solicitud sp ON (spo.spoSolicitudGlobal = sp.solId)
            LEFT JOIN SolicitudVerificacionFovis svf ON (svf.svfPostulacionFOVIS = pof.pofId)
            LEFT JOIN Solicitud sv ON (svf.svfSolicitudGlobal = sv.solId)
            WHERE pof.pofId = :idPostulacion
        </query>
    </named-native-query>
    
    <named-native-query name="fovis.novedades.historico.by.numeroPostulacion">
        <query>
            SELECT
            solnf.solTipoTransaccion,
            solnf.solNumeroRadicacion,
            solnf.solFechaRadicacion,
            snf.snfEstadoSolicitud,
            solnf.solClasificacion,
            per.perTipoIdentificacion,
            per.perNumeroIdentificacion,
            CONCAT(per.perPrimerNombre, ' ',
                CASE WHEN per.perSegundoNombre IS NOT NULL THEN CONCAT(per.perSegundoNombre, ' ') ELSE '' END,
                per.perPrimerApellido, ' ',
                CASE WHEN per.perSegundoApellido IS NOT NULL THEN per.perSegundoApellido ELSE '' END) AS nombreCompleto,
            solnf.solId,
            solnf.solResultadoProceso
            FROM SolicitudPostulacion spo
            JOIN Solicitud sol ON spo.spoSolicitudGlobal = sol.solId
            JOIN PostulacionFovis pof ON spo.spoPostulacionFovis = pof.pofId
            JOIN SolicitudNovedadPersonaFovis spf ON spf.spfPostulacionFovis = pof.pofId
            JOIN SolicitudNovedadFovis snf ON spf.spfSolicitudNovedadFovis = snf.snfId
            JOIN Solicitud solnf ON snf.snfSolicitudGlobal = solnf.solId
            JOIN Persona per ON spf.spfPersona = per.perId
            WHERE sol.solNumeroRadicacion = :numeroRadicacion
        </query>
    </named-native-query>

    <named-native-query name="fovis.novedades.consultar.inhabilidad.persona" 
        result-set-mapping="fovis.novedades.consultar.inhabilidad.persona.Mapping">
        <description> Consula la inhabilidad al subsidio fovis de una persona por tipo y numero de documento</description>
        <query>
        SELECT *
        FROM (
            SELECT isf.*, afi.afiPersona AS idPersona
            FROM InhabilidadSubsidioFovis isf
            JOIN JefeHogar jeh ON (isf.isfJefeHogar = jeh.jehId)
            JOIN Afiliado afi ON (jeh.jehAfiliado = afi.afiId)
            UNION ALL
            SELECT isf.*, inh.inhPersona
            FROM InhabilidadSubsidioFovis isf
            JOIN IntegranteHogar inh ON (isf.isfIntegranteHogar = inh.inhId)
        ) inhabilidadIntegrante
        JOIN Persona per ON (inhabilidadIntegrante.idPersona = per.perId)
        WHERE inhabilidadIntegrante.isfInhabilitadoParaSubsidio = '1' 
        AND (1 = (CASE WHEN :tipoIdentificacion IS NULL THEN 1 ELSE 0 END) OR (per.perTipoIdentificacion = :tipoIdentificacion))
        AND (1 = (CASE WHEN :numeroIdentificacion IS NULL THEN 1 ELSE 0 END) OR (per.perNumeroIdentificacion = :numeroIdentificacion))
        </query>
    </named-native-query>

    <named-native-query name="fovis.novedades.consultar.inhabilidad.postulacion.jefeHogar"
        result-set-mapping="fovis.novedades.consultar.inhabilidad.postulacion.jefeHogar.Mapping">
        <description>Consulta las inhabilidades de la postulacion por la informacion del jefe hogar</description>
        <query>
        SELECT isf.*
        FROM PostulacionFOVIS pof
        JOIN JefeHogar jeh ON (pof.pofJefeHogar = jeh.jehId)
        JOIN Afiliado afi ON (jeh.jehAfiliado = afi.afiId)
        JOIN Persona per ON (afi.afiPersona = per.perId)
        JOIN IntegranteHogar inh ON (jeh.jehId = inh.inhJefeHogar)
        LEFT JOIN InhabilidadSubsidioFovis isf ON (isf.isfJefeHogar = jeh.jehId OR isf.isfIntegranteHogar  = inh.inhId)
        WHERE isf.isfInhabilitadoParaSubsidio = '1' 
        AND per.perTipoIdentificacion = :tipoIdentificacion 
        AND per.perNumeroIdentificacion = :numeroIdentificacion 
        </query>
    </named-native-query>

    <named-native-query name="fovis.consultar.postulacion.prorroga.by.solicitudNovedad"
        result-set-mapping="fovis.consultar.postulacion.prorroga.by.solicitudNovedad.Mapping">
        <query>
            SELECT pof.*, cant.cantidadProrroga FROM SolicitudNovedadPersonaFovis spf
            JOIN PostulacionFOVIS pof ON (spf.spfPostulacionFovis = pof.pofId)
            JOIN (SELECT spf.spfPostulacionFovis AS idPost, COUNT(spf.spfId) AS cantidadProrroga FROM SolicitudNovedadPersonaFovis spf
            JOIN SolicitudNovedadFovis snf ON (spf.spfSolicitudNovedadFovis = snf.snfId)
            JOIN Solicitud sol ON (snf.snfSolicitudGlobal = sol.solId)
            WHERE sol.solResultadoProceso = :resultadoProceso
            AND sol.solTipoTransaccion = :tipoTransaccion
            GROUP BY spf.spfPostulacionFovis) AS cant ON (spf.spfPostulacionFovis = cant.idPost)
            WHERE spf.spfSolicitudNovedadFovis IN (:listaSolicitudNovedad)
        </query>
    </named-native-query>

    <!-- Result Mapping -->
    <sql-result-set-mapping name="fovis.consultar.solicitudes.asociadas.postulacion.by.id.Mapping">
        <entity-result entity-class="com.asopagos.entidades.ccf.fovis.SolicitudPostulacion"></entity-result>
        <entity-result entity-class="com.asopagos.entidades.ccf.fovis.SolicitudVerificacionFovis"></entity-result>
    </sql-result-set-mapping>
    
    <sql-result-set-mapping name="fovis.novedades.consultar.inhabilidad.persona.Mapping">
        <entity-result entity-class="com.asopagos.entidades.ccf.fovis.InhabilidadSubsidioFovis"></entity-result>
        <entity-result entity-class="com.asopagos.entidades.ccf.personas.Persona"></entity-result>
    </sql-result-set-mapping>
    
    <sql-result-set-mapping name="fovis.novedades.consultar.inhabilidad.postulacion.jefeHogar.Mapping">
        <entity-result entity-class="com.asopagos.entidades.ccf.fovis.InhabilidadSubsidioFovis"></entity-result>
    </sql-result-set-mapping>
    
    <sql-result-set-mapping name="fovis.consultar.postulacion.prorroga.by.solicitudNovedad.Mapping">
        <entity-result entity-class="com.asopagos.entidades.ccf.fovis.PostulacionFOVIS"></entity-result>
        <column-result name="cantidadProrroga" class="java.lang.Integer"/>
    </sql-result-set-mapping>

</entity-mappings>
